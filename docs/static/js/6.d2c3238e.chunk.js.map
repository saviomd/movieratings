{"version":3,"sources":["components/ProgressBar/ProgressBar.jsx","components/ProgressBar/index.js","components/MovieStats/MovieStats.jsx","components/MovieStats/index.js","pages/PageStats.jsx"],"names":["ProgressBar","memo","width","className","style","propTypes","PropTypes","oneOfType","number","string","isRequired","title","moviesPerDecadeReleased","moviesPerRatingGiven","moviesPerYearWatched","MovieStats","movies","moviesStatus","type","LoadingHandler","dataStatus","hasData","groups","messageNoData","Object","entries","reverse","map","key","value","max","stars","i","push","icon","text","PageStats","useContext","MovieDiaryContext","movieDiaryStatus","MovieRatingsContext","movieRatingsStatus"],"mappings":"8KAGMA,EAAcC,gBAAK,gBAAGC,EAAH,EAAGA,MAAH,OACvB,qBAAKC,UAAU,uCAAf,SACE,qBACEA,UAAU,gEACVC,MAAO,CAAEF,MAAM,GAAD,OAAKA,EAAL,aAKpBF,EAAYK,UAAY,CACtBH,MAAOI,IAAUC,UAAU,CAACD,IAAUE,OAAQF,IAAUG,SAASC,YAGpDV,ICdAA,EDcAA,EETTW,EAAQ,CACZC,wBAAyB,sBACzBC,qBAAsB,mBACtBC,qBAAsB,oBCRTC,EDWId,gBAAK,gBAAGe,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,KAAzB,OACtB,sBAAKf,UAAU,sCAAf,UACE,oBAAIA,UAAU,KAAd,SAAoBQ,EAAMO,KAC1B,cAACC,EAAA,EAAD,CACEC,WAAYH,EACZI,UAAWL,EAAOM,OAClBC,cAAc,UAHhB,SAKE,oBAAIpB,UAAU,gBAAd,SACGqB,OAAOC,QAAQT,EAAOM,QACpBI,UACAC,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAiBf3B,EAAiB,IAAR2B,EAAeb,EAAOc,IACrC,OACE,qBAAI3B,UAAU,OAAd,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,MAAf,SApBO,WACX,GAAa,yBAATe,EAAiC,CAEnC,IADA,IAAMa,EAAQ,GACLC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC5BD,EAAME,KACJ,cAAC,IAAD,CAEE9B,UAAU,oBACV+B,KAAK,QAFAF,IAMX,OAAOD,EAET,OAAOH,EAMmBO,KACtB,qBAAKhC,UAAU,mBAAf,SAAmC0B,OAErC,cAAC,EAAD,CAAa3B,MAAOA,MALI0B,gB,gBEFzBQ,UAnCG,WAChB,MACEC,qBAAWC,KADLxB,EAAR,EAAQA,qBAAsByB,EAA9B,EAA8BA,iBAE9B,EACEF,qBAAWG,KADL5B,EAAR,EAAQA,wBAAyBC,EAAjC,EAAiCA,qBAAsB4B,EAAvD,EAAuDA,mBAEvD,OACE,qCACE,oBAAItC,UAAU,KAAd,mBACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,cAAC,EAAD,CACEa,OAAQF,EACRG,aAAcsB,EACdrB,KAAK,2BAGT,qBAAKf,UAAU,gCAAf,SACE,cAAC,EAAD,CACEa,OAAQH,EACRI,aAAcwB,EACdvB,KAAK,2BAGT,qBAAKf,UAAU,gCAAf,SACE,cAAC,EAAD,CACEa,OAAQJ,EACRK,aAAcwB,EACdvB,KAAK","file":"static/js/6.d2c3238e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst ProgressBar = memo(({ width }) => (\n  <div className=\"bg-secondary overflow-hidden rounded\">\n    <div\n      className=\"animate__animated animate__slideInLeft bg-danger pb-2 rounded\"\n      style={{ width: `${width}%` }}\n    />\n  </div>\n));\n\nProgressBar.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default ProgressBar;\n","import ProgressBar from \"./ProgressBar\";\n\nexport default ProgressBar;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nimport LoadingHandler from \"../LoadingHandler\";\nimport ProgressBar from \"../ProgressBar\";\n\nconst title = {\n  moviesPerDecadeReleased: \"Per decade released\",\n  moviesPerRatingGiven: \"Per rating given\",\n  moviesPerYearWatched: \"Per year watched\",\n};\n\nconst MovieStats = memo(({ movies, moviesStatus, type }) => (\n  <div className=\"border border-secondary p-3 rounded\">\n    <h1 className=\"h5\">{title[type]}</h1>\n    <LoadingHandler\n      dataStatus={moviesStatus}\n      hasData={!!movies.groups}\n      messageNoData=\"noStats\"\n    >\n      <ul className=\"list-unstyled\">\n        {Object.entries(movies.groups)\n          .reverse()\n          .map(([key, value]) => {\n            const text = () => {\n              if (type === \"moviesPerRatingGiven\") {\n                const stars = [];\n                for (let i = 0; i < key; i += 1) {\n                  stars.push(\n                    <FontAwesomeIcon\n                      key={i}\n                      className=\"me-1 text-warning\"\n                      icon=\"star\"\n                    />\n                  );\n                }\n                return stars;\n              }\n              return key;\n            };\n            const width = (value * 100) / movies.max;\n            return (\n              <li className=\"mb-2\" key={key}>\n                <div className=\"g-0 row\">\n                  <div className=\"col\">{text()}</div>\n                  <div className=\"col-auto fw-bold\">{value}</div>\n                </div>\n                <ProgressBar width={width} />\n              </li>\n            );\n          })}\n      </ul>\n    </LoadingHandler>\n  </div>\n));\n\nMovieStats.propTypes = {\n  movies: PropTypes.shape({\n    groups: PropTypes.shape({\n      decade: PropTypes.string,\n      rating: PropTypes.string,\n      year: PropTypes.string,\n    }).isRequired,\n    max: PropTypes.number.isRequired,\n  }).isRequired,\n  moviesStatus: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default MovieStats;\n","import MovieStats from \"./MovieStats\";\n\nexport default MovieStats;\n","import React, { useContext } from \"react\";\n\nimport MovieStats from \"../components/MovieStats\";\nimport MovieDiaryContext from \"../contexts/MovieDiaryContext\";\nimport MovieRatingsContext from \"../contexts/MovieRatingsContext\";\n\nconst PageStats = () => {\n  const { moviesPerYearWatched, movieDiaryStatus } =\n    useContext(MovieDiaryContext);\n  const { moviesPerDecadeReleased, moviesPerRatingGiven, movieRatingsStatus } =\n    useContext(MovieRatingsContext);\n  return (\n    <>\n      <h1 className=\"h4\">Stats</h1>\n      <div className=\"row\">\n        <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n          <MovieStats\n            movies={moviesPerYearWatched}\n            moviesStatus={movieDiaryStatus}\n            type=\"moviesPerYearWatched\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n          <MovieStats\n            movies={moviesPerRatingGiven}\n            moviesStatus={movieRatingsStatus}\n            type=\"moviesPerRatingGiven\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n          <MovieStats\n            movies={moviesPerDecadeReleased}\n            moviesStatus={movieRatingsStatus}\n            type=\"moviesPerDecadeReleased\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PageStats;\n"],"sourceRoot":""}