{"version":3,"sources":["components/Anchor/Anchor.jsx","components/Anchor/index.js","helpers/filterMoviesByName.js","helpers/formatMovieList.js","helpers/letterboxdServices.js","components/Message/Message.jsx","components/Message/index.js","helpers/tmdbApi.js","components/LoadingHandler/LoadingHandler.jsx","components/LoadingHandler/index.js","contexts/movieDiaryContext.jsx","contexts/movieRatingsContext.jsx","components/AppWrapper/AppWrapper.jsx","components/AppWrapper/index.js","components/Footer/index.js","components/Footer/Footer.jsx","components/NavItem/index.js","components/NavItem/NavItem.jsx","components/Nav/Nav.jsx","components/Nav/index.js","components/Header/index.js","components/Header/Header.jsx","components/SiteInfo/index.js","components/SiteInfo/SiteInfo.jsx","pages/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Anchor","children","href","margin","target","marginClass","both","left","none","right","className","rel","defaultProps","filterMoviesByName","movieList","value","filter","movie","Name","toLowerCase","includes","formatMovieList","reverse","map","index","Id","LetterboxdURI","length","split","toString","DateFormatted","Date","toLocaleDateString","day","month","year","WatchedDate","WatchedDateFormatted","fetchMovieDiary","fetch","then","response","ok","Error","status","json","fetchMovieRatings","Message","memo","type","messages","error","icon","text","loading","noData","noMovies","noStats","pageNotFound","animation","tmdbApi","img","attributionUrl","baseUrl","backdropSize","fallbackUrl","posterSize","key","methods","movieCredits","movieId","movieRecommendations","searchMovies","url","dataStatuses","LoadingHandler","dataStatus","hasData","messageNoData","propTypes","PropTypes","node","oneOf","bool","string","MovieDiaryContext","React","createContext","initialState","movieDiary","movieDiaryPage","movieDiarySearchString","movieDiaryStatus","reducer","state","action","payload","MovieDiaryStore","useReducer","dispatchMovieDiary","movieDiaryFiltered","useMemo","movieDiaryPaginated","size","slice","moviesPerYearWatched","groups","reduce","acc","curr","max","Object","values","forEach","useEffect","movieDiaryFormatted","catch","providerValue","Provider","MovieRatingsContext","movieRatings","movieRatingsPage","movieRatingsSearchString","movieRatingsStatus","MovieRatingsStore","dispatchMovieRatings","movieRatingsFiltered","movieRatingsPaginated","moviesPerDecadeReleased","decade","Year","substr","moviesPerRatingGiven","rating","Rating","movieRatingsFormatted","library","add","faCalendarAlt","faChartBar","faDizzy","faExternalLinkAlt","faFrown","faHourglassHalf","faSadTear","faStar","faTimes","AppWrapper","Footer","getFullYear","alt","src","height","width","NavItem","link","to","path","exact","activeClassName","name","navLinks","Nav","Header","SiteInfo","PageMovieDetails","lazy","PageMovies","PageNotFound","PageStats","pages","render","match","Pages","fallback","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4d9ec51.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Anchor = ({ children, href, margin, target }) => {\n  const marginClasses = {\n    both: \"m-1\",\n    left: \"ms-1\",\n    none: \"\",\n    right: \"me-1\",\n  };\n  const marginClass = marginClasses[margin];\n  return (\n    <a\n      className={`${marginClass} text-danger text-decoration-none`}\n      href={href}\n      target={target}\n      rel={target === \"_blank\" ? \"noopener noreferrer\" : null}\n    >\n      {children}\n    </a>\n  );\n};\n\nAnchor.propTypes = {\n  children: PropTypes.node.isRequired,\n  href: PropTypes.string.isRequired,\n  margin: PropTypes.oneOf([\"both\", \"left\", \"none\", \"right\"]),\n  target: PropTypes.oneOf([\"_blank\", \"_parent\", \"_self\", \"_top\"]),\n};\n\nAnchor.defaultProps = {\n  margin: null,\n  target: null,\n};\n\nexport default Anchor;\n","import Anchor from \"./Anchor\";\n\nexport default Anchor;\n","const filterMoviesByName = (movieList, value) =>\n  movieList.filter((movie) => {\n    const movieName = movie.Name.toLowerCase();\n    return movieName.includes(value.toLowerCase());\n  });\n\nexport default filterMoviesByName;\n","const formatMovieList = (movieList) => {\n  movieList.reverse();\n  return movieList.map((movie, index) => ({\n    ...movie,\n    Id: movie.LetterboxdURI.length\n      ? movie.LetterboxdURI.split(\"boxd.it/\")[1]\n      : index.toString(),\n    Name: movie.Name.toString(),\n    DateFormatted: new Date(movie.Date).toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\",\n    }),\n    ...(movie.WatchedDate && {\n      WatchedDateFormatted: new Date(movie.WatchedDate).toLocaleDateString(\n        \"en-GB\",\n        {\n          day: \"2-digit\",\n          month: \"short\",\n          year: \"numeric\",\n        }\n      ),\n    }),\n  }));\n};\n\nexport default formatMovieList;\n","export const fetchMovieDiary = () =>\n  fetch(\"https://saviomd.com/movieratings/data/diary.json\").then((response) => {\n    if (!response.ok) {\n      throw Error(response.status);\n    }\n    return response.json();\n  });\n\nexport const fetchMovieRatings = () =>\n  fetch(\"https://saviomd.com/movieratings/data/ratings.json\").then(\n    (response) => {\n      if (!response.ok) {\n        throw Error(response.status);\n      }\n      return response.json();\n    }\n  );\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst Message = memo(({ type }) => {\n  const messages = {\n    error: {\n      icon: \"sad-tear\",\n      text: \"An error has ocurred\",\n    },\n    loading: {\n      icon: \"hourglass-half\",\n      text: \"Loading...\",\n    },\n    noData: {\n      icon: \"frown\",\n      text: \"No data to show\",\n    },\n    noMovies: {\n      icon: \"frown\",\n      text: \"No movies to show\",\n    },\n    noStats: {\n      icon: \"frown\",\n      text: \"No stats to show\",\n    },\n    pageNotFound: {\n      icon: \"dizzy\",\n      text: \"Page not found\",\n    },\n  };\n  const animation = `animate__${\n    type === \"loading\" ? \"heartBeat\" : \"headShake\"\n  }`;\n  return (\n    <div className=\"lead p-3 text-center\">\n      <div className={`animate__animated ${animation} h3 mb-3`}>\n        <span className=\"bg-secondary p-2 rounded\">\n          <FontAwesomeIcon icon={messages[type].icon} />\n        </span>\n      </div>\n      {messages[type].text}\n    </div>\n  );\n});\n\nMessage.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import Message from \"./Message\";\n\nexport default Message;\n","const tmdbApi = {\n  img: {\n    attributionUrl:\n      \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\",\n    baseUrl: \"https://image.tmdb.org/t/p/\",\n    backdropSize: \"w1280\",\n    fallbackUrl:\n      \"https://www.themoviedb.org/assets/1/v4/logos/293x302-powered-by-square-blue-ee05c47ab249273a6f9f1dcafec63daba386ca30544567629deb1809395d8516.png\",\n    posterSize: \"w780\",\n  },\n  key: \"6f875d4fba2e999f480afa6275a08f75\",\n  methods: {\n    movieCredits: ({ movieId }) => `movie/${movieId}/credits`,\n    movieRecommendations: ({ movieId }) => `movie/${movieId}/recommendations`,\n    searchMovies: () => \"search/movie\",\n  },\n  url: \"https://api.themoviedb.org/3/\",\n};\n\nexport default tmdbApi;\n","import PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nimport Message from \"../Message\";\n\nconst dataStatuses = [\"\", \"error\", \"loading\", \"loaded\"];\n\nconst LoadingHandler = memo(\n  ({ children, dataStatus, hasData, messageNoData }) => (\n    <>\n      {dataStatus === \"loaded\" && hasData && <>{children}</>}\n      {dataStatus === \"loaded\" && !hasData && <Message type={messageNoData} />}\n      {(dataStatus === \"loading\" || dataStatus === \"error\") && (\n        <Message type={dataStatus} />\n      )}\n    </>\n  )\n);\n\nLoadingHandler.propTypes = {\n  children: PropTypes.node,\n  dataStatus: PropTypes.oneOf(dataStatuses),\n  hasData: PropTypes.bool,\n  messageNoData: PropTypes.string,\n};\n\nLoadingHandler.defaultProps = {\n  children: null,\n  dataStatus: dataStatuses[0],\n  hasData: true,\n  messageNoData: \"noData\",\n};\n\nexport default LoadingHandler;\nexport { dataStatuses };\n","import LoadingHandler from \"./LoadingHandler\";\n\nexport default LoadingHandler;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useMemo, useReducer } from \"react\";\n\nimport filterMoviesByName from \"../helpers/filterMoviesByName\";\nimport formatMovieList from \"../helpers/formatMovieList\";\nimport { fetchMovieDiary } from \"../helpers/letterboxdServices\";\n\nconst MovieDiaryContext = React.createContext();\n\nconst initialState = {\n  movieDiary: [],\n  movieDiaryPage: 1,\n  movieDiarySearchString: \"\",\n  movieDiaryStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieDiary\":\n      return {\n        ...state,\n        movieDiary: action.payload,\n        movieDiaryStatus: \"loaded\",\n      };\n    case \"setMovieDiaryPage\":\n      return { ...state, movieDiaryPage: state.movieDiaryPage + 1 };\n    case \"setMovieDiarySearchString\":\n      return { ...state, movieDiarySearchString: action.payload.toLowerCase() };\n    case \"setMovieDiaryStatus\":\n      return { ...state, movieDiaryStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieDiaryStore = ({ children }) => {\n  const [state, dispatchMovieDiary] = useReducer(reducer, initialState);\n\n  const movieDiaryFiltered = useMemo(\n    () => filterMoviesByName(state.movieDiary, state.movieDiarySearchString),\n    [state.movieDiary, state.movieDiarySearchString]\n  );\n\n  const movieDiaryPaginated = useMemo(() => {\n    const size = state.movieDiaryPage * 100;\n    return movieDiaryFiltered.slice(0, size);\n  }, [movieDiaryFiltered, state.movieDiaryPage]);\n\n  const moviesPerYearWatched = useMemo(() => {\n    const groups = state.movieDiary.reduce((acc, curr) => {\n      const year = curr.WatchedDate.split(\"-\")[0];\n      acc[year] = acc[year] ? (acc[year] += 1) : (acc[year] = 1);\n      return acc;\n    }, {});\n    let max = 0;\n    Object.values(groups).forEach((year) => {\n      max = year > max ? year : max;\n    });\n    return { groups, max };\n  }, [state.movieDiary]);\n\n  function loadMovieDiary() {\n    dispatchMovieDiary({ type: \"setMovieDiaryStatus\", payload: \"loading\" });\n    return fetchMovieDiary()\n      .then((json) => {\n        const movieDiaryFormatted = formatMovieList(json);\n        dispatchMovieDiary({\n          type: \"setMovieDiary\",\n          payload: movieDiaryFormatted,\n        });\n        return movieDiaryFormatted;\n      })\n      .catch(() => {\n        dispatchMovieDiary({ type: \"setMovieDiaryStatus\", payload: \"error\" });\n      });\n  }\n\n  useEffect(() => {\n    loadMovieDiary();\n  }, []);\n\n  const providerValue = useMemo(\n    () => ({\n      ...state,\n      dispatchMovieDiary,\n      movieDiaryFiltered,\n      movieDiaryPaginated,\n      moviesPerYearWatched,\n    }),\n    [movieDiaryFiltered, movieDiaryPaginated, moviesPerYearWatched, state]\n  );\n  return (\n    <MovieDiaryContext.Provider value={providerValue}>\n      {children}\n    </MovieDiaryContext.Provider>\n  );\n};\n\nMovieDiaryStore.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { MovieDiaryContext as default, MovieDiaryStore };\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useMemo, useReducer } from \"react\";\n\nimport filterMoviesByName from \"../helpers/filterMoviesByName\";\nimport formatMovieList from \"../helpers/formatMovieList\";\nimport { fetchMovieRatings } from \"../helpers/letterboxdServices\";\n\nconst MovieRatingsContext = React.createContext();\n\nconst initialState = {\n  movieRatings: [],\n  movieRatingsPage: 1,\n  movieRatingsSearchString: \"\",\n  movieRatingsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieRatings\":\n      return {\n        ...state,\n        movieRatings: action.payload,\n        movieRatingsStatus: \"loaded\",\n      };\n    case \"setMovieRatingsPage\":\n      return { ...state, movieRatingsPage: state.movieRatingsPage + 1 };\n    case \"setMovieRatingsSearchString\":\n      return {\n        ...state,\n        movieRatingsSearchString: action.payload.toLowerCase(),\n      };\n    case \"setMovieRatingsStatus\":\n      return { ...state, movieRatingsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieRatingsStore = ({ children }) => {\n  const [state, dispatchMovieRatings] = useReducer(reducer, initialState);\n\n  const movieRatingsFiltered = useMemo(\n    () =>\n      filterMoviesByName(state.movieRatings, state.movieRatingsSearchString),\n    [state.movieRatings, state.movieRatingsSearchString]\n  );\n\n  const movieRatingsPaginated = useMemo(() => {\n    const size = state.movieRatingsPage * 100;\n    return movieRatingsFiltered.slice(0, size);\n  }, [movieRatingsFiltered, state.movieRatingsPage]);\n\n  const moviesPerDecadeReleased = useMemo(() => {\n    const groups = state.movieRatings.reduce((acc, curr) => {\n      const decade = `${curr.Year.toString().substr(0, 3)}0`;\n      acc[decade] = acc[decade] ? (acc[decade] += 1) : (acc[decade] = 1);\n      return acc;\n    }, {});\n    let max = 0;\n    Object.values(groups).forEach((decade) => {\n      max = decade > max ? decade : max;\n    });\n    return { groups, max };\n  }, [state.movieRatings]);\n\n  const moviesPerRatingGiven = useMemo(() => {\n    const groups = state.movieRatings.reduce((acc, curr) => {\n      const rating = curr.Rating;\n      acc[rating] = acc[rating] ? (acc[rating] += 1) : (acc[rating] = 1);\n      return acc;\n    }, {});\n    let max = 0;\n    Object.values(groups).forEach((rating) => {\n      max = rating > max ? rating : max;\n    });\n    return { groups, max };\n  }, [state.movieRatings]);\n\n  function loadMovieRatings() {\n    dispatchMovieRatings({ type: \"setMovieRatingsStatus\", payload: \"loading\" });\n    return fetchMovieRatings()\n      .then((json) => {\n        const movieRatingsFormatted = formatMovieList(json);\n        dispatchMovieRatings({\n          type: \"setMovieRatings\",\n          payload: movieRatingsFormatted,\n        });\n        return movieRatingsFormatted;\n      })\n      .catch(() => {\n        dispatchMovieRatings({\n          type: \"setMovieRatingsStatus\",\n          payload: \"error\",\n        });\n      });\n  }\n\n  useEffect(() => {\n    loadMovieRatings();\n  }, []);\n\n  const providerValue = useMemo(\n    () => ({\n      ...state,\n      dispatchMovieRatings,\n      movieRatingsFiltered,\n      movieRatingsPaginated,\n      moviesPerDecadeReleased,\n      moviesPerRatingGiven,\n    }),\n    [\n      movieRatingsFiltered,\n      movieRatingsPaginated,\n      moviesPerDecadeReleased,\n      moviesPerRatingGiven,\n      state,\n    ]\n  );\n  return (\n    <MovieRatingsContext.Provider value={providerValue}>\n      {children}\n    </MovieRatingsContext.Provider>\n  );\n};\n\nMovieRatingsStore.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { MovieRatingsContext as default, MovieRatingsStore };\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCalendarAlt,\n  faChartBar,\n  faDizzy,\n  faExternalLinkAlt,\n  faFrown,\n  faHourglassHalf,\n  faSadTear,\n  faStar,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport \"../../../node_modules/animate.css/animate.min.css\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nlibrary.add(\n  faCalendarAlt,\n  faChartBar,\n  faDizzy,\n  faExternalLinkAlt,\n  faFrown,\n  faHourglassHalf,\n  faSadTear,\n  faStar,\n  faTimes\n);\n\nconst AppWrapper = ({ children }) => (\n  <Router>\n    <div className=\"bg-dark text-white\">{children}</div>\n  </Router>\n);\n\nAppWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppWrapper;\n","import AppWrapper from \"./AppWrapper\";\n\nexport default AppWrapper;\n","import Footer from \"./Footer\";\n\nexport default Footer;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { memo } from \"react\";\n\nimport Anchor from \"../Anchor\";\n\nconst Footer = memo(() => {\n  const year = new Date().getFullYear();\n  return (\n    <footer className=\"border-secondary border-top mb-3 pt-3 small text-center\">\n      &copy; 2017-{year}\n      <Anchor href=\"http://saviomd.com/\" margin=\"left\" target=\"_blank\">\n        <img\n          alt=\"saviomd.com\"\n          className=\"me-1\"\n          src=\"https://saviomd.com/img/favicon.png\"\n          height=\"15\"\n          width=\"15\"\n        />\n        Sávio Mendes\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </Anchor>\n    </footer>\n  );\n});\n\nexport default Footer;\n","import NavItem from \"./NavItem\";\n\nexport default NavItem;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavItem = ({ link }) => (\n  <NavLink\n    to={link.path}\n    exact\n    activeClassName=\"active\"\n    className=\"btn btn-danger btn-sm\"\n  >\n    <FontAwesomeIcon icon={link.icon} />\n    <span className=\"d-none d-sm-inline-block ms-1\">{link.name}</span>\n  </NavLink>\n);\n\nNavItem.propTypes = {\n  link: PropTypes.shape({\n    icon: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default NavItem;\n","import React from \"react\";\n\nimport NavItem from \"../NavItem\";\n\nconst navLinks = [\n  {\n    icon: \"star\",\n    name: \"Ratings\",\n    path: \"/\",\n  },\n  {\n    icon: \"calendar-alt\",\n    name: \"Diary\",\n    path: \"/diary\",\n  },\n  {\n    icon: \"chart-bar\",\n    name: \"Stats\",\n    path: \"/stats\",\n  },\n];\n\nconst Nav = () => (\n  <nav className=\"btn-group\">\n    {navLinks.map((link) => (\n      <NavItem key={link.path} link={link} />\n    ))}\n  </nav>\n);\n\nexport default Nav;\n","import Nav from \"./Nav\";\n\nexport default Nav;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Nav from \"../Nav\";\n\nconst Header = () => (\n  <header className=\"border-bottom border-secondary mb-3\">\n    <div className=\"align-items-center my-2 row\">\n      <h1 className=\"col h5 mb-0\">\n        <NavLink to=\"/\" exact className=\"text-decoration-none text-white\">\n          Movie Ratings\n        </NavLink>\n      </h1>\n      <div className=\"col-auto\">\n        <Nav />\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import SiteInfo from \"./SiteInfo\";\n\nexport default SiteInfo;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { memo } from \"react\";\n\nimport Anchor from \"../Anchor\";\nimport tmdbApi from \"../../helpers/tmdbApi\";\n\nconst SiteInfo = memo(() => (\n  <div className=\"border-secondary border-top pt-3 small text-center\">\n    <div className=\"mb-3\">\n      <img\n        alt=\"Letterboxd\"\n        src=\"https://a.ltrbxd.com/logos/letterboxd-logo-v-neg-rgb-1000px.png\"\n        height=\"48\"\n      />\n      <br />\n      My Ratings and Diary data are exported from Letterboxd from time to time.\n      <br />\n      My\n      <Anchor\n        href=\"https://letterboxd.com/saviomd\"\n        margin=\"both\"\n        target=\"_blank\"\n      >\n        profile\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </Anchor>\n      will have more up to date information.\n    </div>\n    <div className=\"mb-3\">\n      <img alt=\"TMDb\" src={tmdbApi.img.attributionUrl} height=\"48\" />\n      <br />\n      This product uses the TMDb API but is not endorsed or certified by TMDb.\n    </div>\n  </div>\n));\n\nexport default SiteInfo;\n","import React, { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport LoadingHandler from \"../components/LoadingHandler\";\n\nconst PageMovieDetails = lazy(() => import(\"./PageMovieDetails\"));\nconst PageMovies = lazy(() => import(\"./PageMovies\"));\nconst PageNotFound = lazy(() => import(\"./PageNotFound\"));\nconst PageStats = lazy(() => import(\"./PageStats\"));\n\nconst pages = [\n  {\n    exact: true,\n    path: \"/\",\n    render: () => <PageMovies type=\"Ratings\" />,\n  },\n  {\n    exact: true,\n    path: \"/diary\",\n    render: () => <PageMovies type=\"Diary\" />,\n  },\n  {\n    exact: true,\n    path: \"/movie/:movieId\",\n    // eslint-disable-next-line react/prop-types\n    render: ({ match }) => <PageMovieDetails match={match} />,\n  },\n  {\n    exact: true,\n    path: \"/stats\",\n    render: () => <PageStats />,\n  },\n];\n\nconst Pages = () => (\n  <Suspense fallback={<LoadingHandler dataStatus=\"loading\" />}>\n    <Switch>\n      {pages.map(({ exact, path, render }) => (\n        <Route exact={exact} key={path} path={path} render={render} />\n      ))}\n      <Route component={PageNotFound} />\n    </Switch>\n  </Suspense>\n);\n\nexport default Pages;\n","import React from \"react\";\n\nimport { MovieDiaryStore } from \"./contexts/movieDiaryContext\";\nimport { MovieRatingsStore } from \"./contexts/movieRatingsContext\";\nimport AppWrapper from \"./components/AppWrapper\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport SiteInfo from \"./components/SiteInfo\";\nimport Pages from \"./pages\";\n\nconst App = () => (\n  <AppWrapper>\n    <MovieDiaryStore>\n      <MovieRatingsStore>\n        <div className=\"container-fluid\">\n          <div className=\"justify-content-center row\">\n            <div className=\"col-12 col-md-10\">\n              <Header />\n              <Pages />\n              <SiteInfo />\n              <Footer />\n            </div>\n          </div>\n        </div>\n      </MovieRatingsStore>\n    </MovieDiaryStore>\n  </AppWrapper>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}