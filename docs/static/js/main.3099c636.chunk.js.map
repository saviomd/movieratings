{"version":3,"sources":["helpers/filterMoviesByName.js","helpers/formatMovieList.js","helpers/letterboxdServices.js","contexts/movieDiaryContext.js","contexts/movieRatingsContext.js","components/Footer/index.js","components/Footer/Footer.js","components/NavItem/index.js","components/NavItem/NavItem.js","components/Nav/index.js","components/Nav/Nav.js","components/Header/index.js","components/Header/Header.js","helpers/tmdbApi.js","helpers/tmdbServices.js","contexts/movieInfoContext.js","components/Message/index.js","components/Message/Message.js","components/LoadingHandler/LoadingHandler.js","components/LoadingHandler/index.js","contexts/movieCreditsContext.js","contexts/movieRecommendationsContext.js","components/MovieBackdrop/index.js","components/MovieBackdrop/MovieBackdrop.js","components/MovieInfo/MovieInfoCastCrew/index.js","components/MovieInfo/MovieInfoCastCrew/MovieInfoCastCrew.js","components/MoviePoster/index.js","components/MoviePoster/MoviePoster.js","components/MovieInfo/MovieInfoRecommendations/index.js","components/MovieInfo/MovieInfoRecommendations/MovieInfoRecommendations.js","components/MovieInfo/MovieInfoBody/index.js","components/MovieInfo/MovieInfoBody/MovieInfoBody.js","components/MovieInfo/MovieInfoHeader/index.js","components/MovieInfo/MovieInfoHeader/MovieInfoHeader.js","components/MovieInfo/index.js","components/MovieInfo/MovieInfo.js","pages/PageMovieInfo.js","components/MovieButton/index.js","components/MovieButton/MovieButton.js","components/MovieList/index.js","components/MovieList/MovieList.js","components/MovieNameSearch/index.js","components/MovieNameSearch/MovieNameSearch.js","pages/PageMovies.js","pages/PageNotFound.js","components/ProgressBar/index.js","components/ProgressBar/ProgressBar.js","components/MovieStats/index.js","components/MovieStats/MovieStats.js","pages/PageStats.js","components/SiteInfo/index.js","components/SiteInfo/SiteInfo.js","App.js","serviceWorker.js","index.js"],"names":["filterMoviesByName","movieList","value","filter","movie","Name","toLowerCase","includes","formatMovieList","reverse","map","index","Id","LetterboxdURI","length","split","toString","DateFormatted","Date","toLocaleDateString","day","month","year","WatchedDate","WatchedDateFormatted","fetchMovieDiary","fetch","then","response","ok","Error","status","json","fetchMovieRatings","MovieDiaryContext","React","createContext","initialState","movieDiary","movieDiaryPage","movieDiarySearchString","movieDiaryStatus","MovieDiaryStore","_ref","children","_useState","useState","_useState2","Object","slicedToArray","state","setState","increaseMovieDiaryPage","useCallback","prevState","objectSpread","movieDiaryFiltered","useMemo","movieDiaryPaginated","size","slice","moviesPerYearWatched","groups","reduce","acc","curr","max","setMovieDiarySearchString","trim","useEffect","movieDiaryFormatted","catch","error","console","log","message","providerValue","react_default","a","createElement","Provider","MovieRatingsContext","movieRatings","movieRatingsPage","movieRatingsSearchString","movieRatingsStatus","MovieRatingsStore","increaseMovieRatingsPage","movieRatingsFiltered","movieRatingsPaginated","moviesPerDecadeReleased","decade","concat","Year","substr","moviesPerRatingGiven","rating","Rating","setMovieRatingsSearchString","movieRatingsFormatted","Footer","memo","getFullYear","className","href","target","rel","alt","src","height","width","NavItem","link","react_router_dom","to","path","exact","activeClassName","react_fontawesome_index_es","icon","name","Nav","navLinks","components_NavItem","key","Header","components_Nav","tmdbApi","img","attributionUrl","baseUrl","backdropSize","fallbackUrl","posterSize","pathMovieCredits","pathMovieRecommendations","pathSearchMovies","url","fetchMovieCredits","movieId","replace","fetchMovieInfo","fetchMovieRecommendations","MovieInfoContext","movieInfo","backdrop_url","id","overview","poster_url","title","vote_average","movieInfoStatus","MovieInfoStore","undefined","results","newMovie","find","obj","release_date","indexOf","backdrop_path","poster_path","tmdbURI","loadMovieInfo","Message","type","messages","text","loading","noData","noMovies","noStats","pageNotFound","LoadingHandler","dataStatus","hasData","messageNoData","Fragment","components_Message","defaultProps","MovieCreditsContext","movieCredits","cast","crew","movieCreditsStatus","MovieCreditsStore","forEach","person","loadMovieCredits","MovieRecommendationsContext","movieRecommendations","movieRecommendationsStatus","MovieRecommendationsStore","loadMovieRecommendations","MovieBackdrop","movieBackdropStyle","paddingTop","style","MovieInfoCastCrew","_useContext","useContext","movieCreditsContext","verticalListStyle","overflowX","WebkitOverflowScrolling","components_LoadingHandler","credit_id","character","job","MoviePoster","moviePosterStyle","MovieInfoRecommendations","movieRecommendationsContext","components_MoviePoster","MovieInfoBody","movieInfoContext","movieCreditsContext_MovieCreditsStore","MovieInfo_MovieInfoCastCrew","components_MovieBackdrop","movieRecommendationsContext_MovieRecommendationsStore","MovieInfo_MovieInfoRecommendations","MovieInfoHeader","MovieInfo","MovieInfo_MovieInfoHeader","MovieInfo_MovieInfoBody","PageMovieInfo","match","movieRatingsContext","params","movieInfoContext_MovieInfoStore","components_MovieInfo","MovieButton","dateText","Array","from","item","i","MovieList","increasePage","moviesFiltered","moviesPaginated","moviesStatus","movieDiaryContext","_useContext2","components_MovieButton","onClick","MovieNameSearch","movieSearchString","setMovieSearchString","placeholder","onChange","event","PageMovies","components_MovieNameSearch","components_MovieList","PageNotFound","ProgressBar","MovieStats","movies","entries","_ref2","_ref3","stars","push","components_ProgressBar","PageStats","components_MovieStats","SiteInfo","library","add","faCalendarAlt","faChartBar","faDizzy","faFrown","faHourglassHalf","faSadTear","faStar","faTimes","App","movieDiaryContext_MovieDiaryStore","movieRatingsContext_MovieRatingsStore","components_Header","react_router","render","pages_PageMovies","pages_PageMovieInfo","component","components_SiteInfo","components_Footer","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","router","src_App","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3099c636.chunk.js","sourcesContent":["export default function filterMoviesByName (movieList, value) {\n\treturn movieList.filter((movie) => {\n\t\tconst movieName = movie.Name.toLowerCase();\n\t\treturn (movieName.includes(value.toLowerCase()));\n\t});\n}\n","export default function formatMovieList(movieList) {\n\tmovieList.reverse();\n\tmovieList = movieList.map((movie, index) => {\n\t\tmovie.Id = (movie.LetterboxdURI.length ? movie.LetterboxdURI.split('/film/')[1].split('/')[0] : index.toString());\n\t\tmovie.Name = movie.Name.toString();\n\t\tmovie.DateFormatted = (new Date(movie.Date)).toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n\t\tif (movie.WatchedDate) {\n\t\t\tmovie.WatchedDateFormatted = (new Date(movie.WatchedDate)).toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n\t\t}\n\t\treturn movie;\n\t});\n\treturn movieList;\n}\n","export const fetchMovieDiary = () => {\n\treturn fetch('https://saviomd.com/movieratings/data/diary.json').then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n\nexport const fetchMovieRatings = () => {\n\treturn fetch('https://saviomd.com/movieratings/data/ratings.json').then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport filterMoviesByName from '../helpers/filterMoviesByName';\nimport formatMovieList from '../helpers/formatMovieList';\nimport { fetchMovieDiary } from '../helpers/letterboxdServices';\n\nconst MovieDiaryContext = React.createContext();\n\nconst initialState = {\n\tmovieDiary: [],\n\tmovieDiaryPage: 1,\n\tmovieDiarySearchString: '',\n\tmovieDiaryStatus: '',\n};\n\nconst MovieDiaryStore = ({ children }) => {\n\tconst [state, setState] = useState(initialState);\n\tconst { movieDiary, movieDiaryPage, movieDiarySearchString } = state;\n\n\tconst increaseMovieDiaryPage = useCallback(() => {\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieDiaryPage: movieDiaryPage + 1,\n\t\t}));\n\t}, [movieDiaryPage]);\n\n\tconst movieDiaryFiltered = useMemo(() => filterMoviesByName(movieDiary, movieDiarySearchString), [movieDiary, movieDiarySearchString]);\n\n\tconst movieDiaryPaginated = useMemo(() => {\n\t\tconst size = movieDiaryPage * 100;\n\t\treturn movieDiaryFiltered.slice(0, size);\n\t}, [movieDiaryFiltered, movieDiaryPage]);\n\n\tconst moviesPerYearWatched = useMemo(() => {\n\t\tconst groups = state.movieDiary.reduce((acc, curr) => {\n\t\t\tconst year = curr.WatchedDate.split('-')[0];\n\t\t\tacc[year] ? acc[year]++ : acc[year] = 1;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet max = 0;\n\t\tfor (const year in groups) {\n\t\t\tmax = (groups[year] > max ? groups[year] : max);\n\t\t}\n\t\treturn { groups, max };\n\t}, [state.movieDiary]);\n\n\tfunction loadMovieDiary() {\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieDiaryStatus: 'loading',\n\t\t}));\n\t\treturn fetchMovieDiary()\n\t\t\t.then(json => {\n\t\t\t\tconst movieDiaryFormatted = formatMovieList(json);\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieDiary: movieDiaryFormatted,\n\t\t\t\t\tmovieDiaryStatus: 'loaded',\n\t\t\t\t}));\n\t\t\t\treturn movieDiaryFormatted;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieDiaryStatus: 'error',\n\t\t\t\t}));\n\t\t\t\tconsole.log(error.message);\n\t\t\t});\n\t}\n\n\tfunction setMovieDiarySearchString(value) {\n\t\tvalue.trim().toLowerCase();\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieDiarySearchString: value,\n\t\t}));\n\t}\n\n\tuseEffect(() => {\n\t\tloadMovieDiary();\n\t}, []);\n\n\tconst providerValue = useMemo(() => ({\n\t\t...state,\n\t\tincreaseMovieDiaryPage,\n\t\tmovieDiaryFiltered,\n\t\tmovieDiaryPaginated,\n\t\tmoviesPerYearWatched,\n\t\tsetMovieDiarySearchString,\n\t}), [\n\t\tincreaseMovieDiaryPage,\n\t\tmovieDiaryFiltered,\n\t\tmovieDiaryPaginated,\n\t\tmoviesPerYearWatched,\n\t\tstate,\n\t]);\n\treturn (\n\t\t<MovieDiaryContext.Provider value={providerValue}>\n\t\t\t{children}\n\t\t</MovieDiaryContext.Provider>\n\t);\n};\n\nexport {\n\tMovieDiaryContext as default,\n\tMovieDiaryStore,\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport filterMoviesByName from '../helpers/filterMoviesByName';\nimport formatMovieList from '../helpers/formatMovieList';\nimport { fetchMovieRatings } from '../helpers/letterboxdServices';\n\nconst MovieRatingsContext = React.createContext();\n\nconst initialState = {\n\tmovieRatings: [],\n\tmovieRatingsPage: 1,\n\tmovieRatingsSearchString: '',\n\tmovieRatingsStatus: '',\n};\n\nconst MovieRatingsStore = ({ children }) => {\n\tconst [state, setState] = useState(initialState);\n\tconst { movieRatings, movieRatingsPage, movieRatingsSearchString } = state;\n\n\tconst increaseMovieRatingsPage = useCallback(() => {\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieRatingsPage: movieRatingsPage + 1,\n\t\t}));\n\t}, [movieRatingsPage]);\n\n\tconst movieRatingsFiltered = useMemo(() => filterMoviesByName(movieRatings, movieRatingsSearchString), [movieRatings, movieRatingsSearchString]);\n\n\tconst movieRatingsPaginated = useMemo(() => {\n\t\tconst size = movieRatingsPage * 100;\n\t\treturn movieRatingsFiltered.slice(0, size);\n\t}, [movieRatingsFiltered, movieRatingsPage]);\n\n\tconst moviesPerDecadeReleased = useMemo(() => {\n\t\tconst groups = state.movieRatings.reduce((acc, curr) => {\n\t\t\tconst decade = `${curr.Year.toString().substr(0, 3)}0`;\n\t\t\tacc[decade] ? acc[decade]++ : acc[decade] = 1;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet max = 0;\n\t\tfor (const decade in groups) {\n\t\t\tmax = (groups[decade] > max ? groups[decade] : max);\n\t\t}\n\t\treturn { groups, max };\n\t}, [state.movieRatings]);\n\n\tconst moviesPerRatingGiven = useMemo(() => {\n\t\tconst groups = state.movieRatings.reduce((acc, curr) => {\n\t\t\tconst rating = curr.Rating;\n\t\t\tacc[rating] ? acc[rating]++ : acc[rating] = 1;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet max = 0;\n\t\tfor (const rating in groups) {\n\t\t\tmax = (groups[rating] > max ? groups[rating] : max);\n\t\t}\n\t\treturn { groups, max };\n\t}, [state.movieRatings]);\n\n\tfunction loadMovieRatings() {\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieRatingsStatus: 'loading',\n\t\t}));\n\t\treturn fetchMovieRatings()\n\t\t\t.then(json => {\n\t\t\t\tconst movieRatingsFormatted = formatMovieList(json);\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieRatings: movieRatingsFormatted,\n\t\t\t\t\tmovieRatingsStatus: 'loaded',\n\t\t\t\t}));\n\t\t\t\treturn movieRatingsFormatted;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieRatingsStatus: 'error',\n\t\t\t\t}));\n\t\t\t\tconsole.log(error.message);\n\t\t\t});\n\t}\n\n\tfunction setMovieRatingsSearchString(value) {\n\t\tvalue.trim().toLowerCase();\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieRatingsSearchString: value,\n\t\t}));\n\t}\n\n\tuseEffect(() => {\n\t\tloadMovieRatings();\n\t}, []);\n\n\tconst providerValue = useMemo(() => ({\n\t\t...state,\n\t\tincreaseMovieRatingsPage,\n\t\tmovieRatingsFiltered,\n\t\tmovieRatingsPaginated,\n\t\tmoviesPerDecadeReleased,\n\t\tmoviesPerRatingGiven,\n\t\tsetMovieRatingsSearchString,\n\t}), [\n\t\tincreaseMovieRatingsPage,\n\t\tmovieRatingsFiltered,\n\t\tmovieRatingsPaginated,\n\t\tmoviesPerDecadeReleased,\n\t\tmoviesPerRatingGiven,\n\t\tstate,\n\t]);\n\treturn (\n\t\t<MovieRatingsContext.Provider value={providerValue}>\n\t\t\t{children}\n\t\t</MovieRatingsContext.Provider>\n\t);\n};\n\nexport {\n\tMovieRatingsContext as default,\n\tMovieRatingsStore,\n};\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, { memo } from 'react';\n\nconst Footer = memo(function Footer () {\n\tconst year = (new Date()).getFullYear();\n\treturn (\n\t\t<footer className=\"border-secondary border-top mb-3 pt-3 small text-center\">\n\t\t\t&copy; 2017-{year}\n\t\t\t<a className=\"ml-1 text-danger\" href=\"http://saviomd.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img alt=\"saviomd.com\" className=\"mr-1\" src=\"https://saviomd.com/img/favicon.png\" height=\"15\" width=\"15\" />\n\t\t\t\tSávio Mendes\n\t\t\t</a>\n\t\t</footer>\n\t)\n});\n\nexport default Footer;\n","import NavItem from './NavItem';\n\nexport default NavItem;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavItem = ({ link }) => (\n\t<NavLink to={link.path} exact activeClassName=\"active\" className=\"btn btn-danger btn-sm\">\n\t\t<FontAwesomeIcon icon={link.icon} />\n\t\t<span className=\"d-none d-sm-inline-block ml-1\">{link.name}</span>\n\t</NavLink>\n);\n\nNavItem.propTypes = {\n\tlink: PropTypes.shape({\n\t\ticon: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\tpath: PropTypes.string.isRequired\n\t})\n};\n\nexport default NavItem;\n","import Nav from './Nav';\n\nexport default Nav;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport NavItem from '../NavItem';\n\nconst Nav = ({ navLinks }) => (\n\t<nav className=\"btn-group\">\n\t\t{navLinks.map(link => (\n\t\t\t<NavItem key={link.path} link={link} />\n\t\t))}\n\t</nav>\n);\n\nNav.propTypes = {\n\tnavLinks: PropTypes.array.isRequired\n};\n\nexport default Nav;\n","import Header from './Header';\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Nav from '../Nav';\n\nconst Header = ({ navLinks }) => (\n\t<header className=\"border-bottom border-secondary mb-3\">\n\t\t<div className=\"align-items-center my-2 row\">\n\t\t\t<h1 className=\"col-auto h5 mb-0\">\n\t\t\t\t<NavLink to=\"/\" exact className=\"text-white\">Movie Ratings</NavLink>\n\t\t\t</h1>\n\t\t\t<div className=\"col text-right\">\n\t\t\t\t<Nav navLinks={navLinks} />\n\t\t\t</div>\n\t\t</div>\n\t</header>\n);\n\nHeader.propTypes = {\n\tnavLinks: PropTypes.array.isRequired\n};\n\nexport default Header;\n","export default {\n\timg: {\n\t\tattributionUrl: 'https://www.themoviedb.org/assets/1/v4/logos/408x161-powered-by-rectangle-green-bb4301c10ddc749b4e79463811a68afebeae66ef43d17bcfd8ff0e60ded7ce99.png',\n\t\tbaseUrl: 'https://image.tmdb.org/t/p/',\n\t\tbackdropSize: 'w1280',\n\t\tfallbackUrl: 'https://www.themoviedb.org/assets/1/v4/logos/293x302-powered-by-square-blue-ee05c47ab249273a6f9f1dcafec63daba386ca30544567629deb1809395d8516.png',\n\t\tposterSize: 'w780'\n\t},\n\tkey: 'api_key=6f875d4fba2e999f480afa6275a08f75',\n\tpathMovieCredits: 'movie/{movie_id}/credits',\n\tpathMovieRecommendations: 'movie/{movie_id}/recommendations',\n\tpathSearchMovies: 'search/movie',\n\turl: 'https://api.themoviedb.org/3/'\n}\n","import tmdbApi from '../helpers/tmdbApi';\n\nexport const fetchMovieCredits = (movieId) => {\n\tconst url = `${tmdbApi.url}${tmdbApi.pathMovieCredits}?${tmdbApi.key}`.replace('{movie_id}', movieId);\n\treturn fetch(url).then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n\nexport const fetchMovieInfo = (movie) => {\n\treturn fetch(`${tmdbApi.url}${tmdbApi.pathSearchMovies}?${tmdbApi.key}&query=${movie.Name}&year=${movie.Year}`).then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n\nexport const fetchMovieRecommendations = (movieId) => {\n\tconst url = `${tmdbApi.url}${tmdbApi.pathMovieRecommendations}?${tmdbApi.key}`.replace('{movie_id}', movieId);\n\treturn fetch(url).then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport { fetchMovieInfo } from '../helpers/tmdbServices';\nimport tmdbApi from '../helpers/tmdbApi';\n\nconst MovieInfoContext = React.createContext();\n\nconst initialState = {\n\tmovieInfo: {\n\t\tbackdrop_url: tmdbApi.img.fallbackUrl,\n\t\tid: '',\n\t\tLetterboxdURI: '',\n\t\toverview: '',\n\t\tposter_url: tmdbApi.img.fallbackUrl,\n\t\tRating: '',\n\t\ttitle: '',\n\t\tvote_average: ''\n\t},\n\tmovieInfoStatus: ''\n};\n\nconst MovieInfoStore = ({ children, movie }) => {\n\tconst [state, setState] = useState(initialState);\n\n\tfunction loadMovieInfo(movie) {\n\t\tif (movie !== undefined) {\n\t\t\tsetState(prevState => ({\n\t\t\t\t...prevState,\n\t\t\t\tmovieInfoStatus: 'loading',\n\t\t\t}));\n\t\t\tfetchMovieInfo(movie)\n\t\t\t\t.then((json) => {\n\t\t\t\t\tif (json.results.length) {\n\t\t\t\t\t\tconst newMovie = json.results.find(obj => (obj.title === movie.Name && obj.release_date.indexOf(movie.Year) > -1));\n\t\t\t\t\t\tif (newMovie !== undefined) {\n\t\t\t\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\t\tmovieInfoStatus: 'loaded',\n\t\t\t\t\t\t\t\tmovieInfo: {\n\t\t\t\t\t\t\t\t\tbackdrop_url: (newMovie.backdrop_path ? tmdbApi.img.baseUrl + tmdbApi.img.backdropSize + newMovie.backdrop_path : null),\n\t\t\t\t\t\t\t\t\tid: newMovie.id,\n\t\t\t\t\t\t\t\t\tLetterboxdURI: movie.LetterboxdURI,\n\t\t\t\t\t\t\t\t\toverview: newMovie.overview,\n\t\t\t\t\t\t\t\t\tposter_url: (newMovie.poster_path ? tmdbApi.img.baseUrl + tmdbApi.img.posterSize + newMovie.poster_path : null),\n\t\t\t\t\t\t\t\t\tRating: movie.Rating,\n\t\t\t\t\t\t\t\t\ttitle: newMovie.title,\n\t\t\t\t\t\t\t\t\ttmdbURI: `https://www.themoviedb.org/movie/${newMovie.id}`,\n\t\t\t\t\t\t\t\t\tvote_average: newMovie.vote_average\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow Error('No movie found');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow Error('No movie found');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\tmovieInfoStatus: 'error',\n\t\t\t\t\t}));\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tloadMovieInfo(movie);\n\t}, [movie]);\n\n\tconst providerValue = useMemo(() => state, [state]);\n\treturn (\n\t\t<MovieInfoContext.Provider value={providerValue}>\n\t\t\t{children}\n\t\t</MovieInfoContext.Provider>\n\t);\n};\n\nexport {\n\tMovieInfoContext as default,\n\tMovieInfoStore,\n};\n","import Message from './Message';\n\nexport default Message;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\nconst Message = memo(function Message({ type }) {\n\tconst messages = {\n\t\terror: {\n\t\t\ticon: 'sad-tear',\n\t\t\ttext: 'An error has ocurred'\n\t\t},\n\t\tloading: {\n\t\t\ticon: 'hourglass-half',\n\t\t\ttext: 'Loading...'\n\t\t},\n\t\tnoData: {\n\t\t\ticon: 'frown',\n\t\t\ttext: 'No data to show'\n\t\t},\n\t\tnoMovies: {\n\t\t\ticon: 'frown',\n\t\t\ttext: 'No movies to show'\n\t\t},\n\t\tnoStats: {\n\t\t\ticon: 'frown',\n\t\t\ttext: 'No stats to show'\n\t\t},\n\t\tpageNotFound: {\n\t\t\ticon: 'dizzy',\n\t\t\ttext: 'Page not found'\n\t\t},\n\t};\n\treturn (\n\t\t<div className=\"lead p-3 text-center\">\n\t\t\t<div className=\"h3 mb-3\">\n\t\t\t\t<span className=\"bg-secondary p-2 rounded\">\n\t\t\t\t\t<FontAwesomeIcon icon={messages[type].icon} />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t{messages[type].text}\n\t\t</div>\n\t);\n});\n\nMessage.propTypes = {\n\ttype: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\nimport Message from '../Message';\n\nconst LoadingHandler = memo(function LoadingHandler({\n\tchildren,\n\tdataStatus,\n\thasData,\n\tmessageNoData,\n}) {\n\treturn (\n\t\t<>\n\t\t\t{(dataStatus === 'loaded' && hasData) && (\n\t\t\t\t<>{children}</>\n\t\t\t)}\n\t\t\t{(dataStatus === 'loaded' && !hasData) && (\n\t\t\t\t<Message type={messageNoData} />\n\t\t\t)}\n\t\t\t{(dataStatus === 'loading' || dataStatus === 'error') && (\n\t\t\t\t<Message type={dataStatus} />\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nLoadingHandler.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node\n\t]).isRequired,\n\tdataStatus: PropTypes.string,\n\thasData: PropTypes.bool,\n\tmessageNoData: PropTypes.string,\n};\n\nLoadingHandler.defaultProps = {\n\tdataStatus: '',\n\thasData: true,\n\tmessageNoData: 'noData',\n};\n\nexport default LoadingHandler;\n","import LoadingHandler from './LoadingHandler';\n\nexport default LoadingHandler;\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport { fetchMovieCredits } from '../helpers/tmdbServices';\n\nconst MovieCreditsContext = React.createContext();\n\nconst initialState = {\n\tmovieCredits: {\n\t\tcast: [],\n\t\tcrew: [],\n\t\tid: ''\n\t},\n\tmovieCreditsStatus: ''\n};\n\nconst MovieCreditsStore = ({ children, movieId }) => {\n\tconst [state, setState] = useState(initialState);\n\n\tfunction loadMovieCredits(movieId) {\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieCreditsStatus: 'loading',\n\t\t}));\n\t\tfetchMovieCredits(movieId)\n\t\t\t.then((json) => {\n\t\t\t\tjson.cast.forEach(person => {\n\t\t\t\t\tperson.tmdbURI = `https://www.themoviedb.org/person/${person.id}`;\n\t\t\t\t});\n\t\t\t\tjson.crew.forEach(person => {\n\t\t\t\t\tperson.tmdbURI = `https://www.themoviedb.org/person/${person.id}`;\n\t\t\t\t});\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieCredits: json,\n\t\t\t\t\tmovieCreditsStatus: 'loaded',\n\t\t\t\t}));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieCreditsStatus: 'error',\n\t\t\t\t}));\n\t\t\t\tconsole.log(error.message);\n\t\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tloadMovieCredits(movieId);\n\t}, [movieId]);\n\n\tconst providerValue = useMemo(() => ({ ...state }), [state]);\n\treturn (\n\t\t<MovieCreditsContext.Provider value={providerValue}>\n\t\t\t{children}\n\t\t</MovieCreditsContext.Provider>\n\t);\n};\n\nexport {\n\tMovieCreditsContext as default,\n\tMovieCreditsStore,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport tmdbApi from '../helpers/tmdbApi';\nimport { fetchMovieRecommendations } from '../helpers/tmdbServices';\n\nconst MovieRecommendationsContext = React.createContext();\n\nconst initialState = {\n\tmovieRecommendations: [],\n\tmovieRecommendationsStatus: ''\n};\n\nconst MovieRecommendationsStore = ({ children, movieId }) => {\n\tconst [state, setState] = useState(initialState);\n\n\tfunction loadMovieRecommendations(movieId) {\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmovieRecommendationsStatus: 'loading',\n\t\t}));\n\t\tfetchMovieRecommendations(movieId)\n\t\t\t.then((json) => {\n\t\t\t\tjson.results.forEach(movie => {\n\t\t\t\t\tmovie.poster_url = (movie.poster_path ? tmdbApi.img.baseUrl + tmdbApi.img.posterSize + movie.poster_path : null);\n\t\t\t\t\tmovie.tmdbURI = `https://www.themoviedb.org/movie/${movie.id}`;\n\t\t\t\t});\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieRecommendations: json.results,\n\t\t\t\t\tmovieRecommendationsStatus: 'loaded',\n\t\t\t\t}));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetState(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmovieRecommendationsStatus: 'error',\n\t\t\t\t}));\n\t\t\t\tconsole.log(error.message);\n\t\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tloadMovieRecommendations(movieId);\n\t}, [movieId]);\n\n\tconst providerValue = useMemo(() => ({ ...state }), [state]);\n\treturn (\n\t\t<MovieRecommendationsContext.Provider value={providerValue}>\n\t\t\t{children}\n\t\t</MovieRecommendationsContext.Provider>\n\t);\n};\n\nexport {\n\tMovieRecommendationsContext as default,\n\tMovieRecommendationsStore,\n};\n","import MovieBackdrop from './MovieBackdrop';\n\nexport default MovieBackdrop;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MovieBackdrop = ({ backdrop_url, title }) => {\n\tconst movieBackdropStyle = {\n\t\tpaddingTop: `${300/533*100}%`,\n\t};\n\treturn (\n\t\t<div className=\"bg-secondary embed-responsive text-white\" style={movieBackdropStyle}>\n\t\t\t{backdrop_url ? (\n\t\t\t\t<img alt={`Backdrop for ${title}`} className=\"embed-responsive-item\" src={backdrop_url} />\n\t\t\t) : (\n\t\t\t\t<div className=\"embed-responsive-item text-center\">\n\t\t\t\t\t{`No backdrop available for ${title}`}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nMovieBackdrop.propTypes = {\n\tbackdrop_url: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n};\n\nexport default MovieBackdrop;\n","import MovieInfoCastCrew from './MovieInfoCastCrew';\n\nexport default MovieInfoCastCrew;\n","import React, { useContext } from 'react';\n\nimport movieCreditsContext from '../../../contexts/movieCreditsContext';\nimport LoadingHandler from '../../LoadingHandler';\n\nconst MovieInfoCastCrew = () => {\n\tconst { movieCredits, movieCreditsStatus } = useContext(movieCreditsContext);\n\tconst verticalListStyle = {\n\t\toverflowX: 'scroll',\n\t\tWebkitOverflowScrolling: 'touch',\n\t};\n\treturn (\n\t\t<LoadingHandler dataStatus={movieCreditsStatus} hasData={!!movieCredits.id}>\n\t\t\t<h2 className=\"h4\">Cast</h2>\n\t\t\t{!!movieCredits.cast.length ? (\n\t\t\t\t<ul className=\"flex-nowrap form-row list-unstyled mb-0\" style={verticalListStyle}>\n\t\t\t\t\t{movieCredits.cast.map(person => (\n\t\t\t\t\t\t<li className=\"col-auto mb-3\" key={person.credit_id}>\n\t\t\t\t\t\t\t<a className=\"btn btn-secondary btn-sm\" href={person.tmdbURI} rel=\"noopener noreferrer\" target=\"_blank\">\n\t\t\t\t\t\t\t\t{person.name}\n\t\t\t\t\t\t\t\t<div className=\"small\">{person.character}</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<p>No data available</p>\n\t\t\t)}\n\t\t\t<h2 className=\"h4\">Crew</h2>\n\t\t\t{!!movieCredits.crew.length ? (\n\t\t\t\t<ul className=\"flex-nowrap form-row list-unstyled mb-0\" style={verticalListStyle}>\n\t\t\t\t\t{movieCredits.crew.map(person => (\n\t\t\t\t\t\t<li className=\"col-auto mb-3\" key={person.credit_id}>\n\t\t\t\t\t\t\t<a className=\"btn btn-secondary btn-sm\" href={person.tmdbURI} rel=\"noopener noreferrer\" target=\"_blank\">\n\t\t\t\t\t\t\t\t{person.name}\n\t\t\t\t\t\t\t\t<div className=\"small\">{person.job}</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<p>No data available</p>\n\t\t\t)}\n\t\t</LoadingHandler>\n\t);\n};\n\nexport default MovieInfoCastCrew;\n","import MoviePoster from './MoviePoster';\n\nexport default MoviePoster;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MoviePoster = ({ poster_url, title }) => {\n\tconst moviePosterStyle = {\n\t\tpaddingTop: `${450/300*100}%`,\n\t};\n\treturn (\n\t\t<div className=\"bg-secondary embed-responsive text-white\" style={moviePosterStyle}>\n\t\t\t{poster_url ? (\n\t\t\t\t<img alt={`Poster for ${title}`} className=\"embed-responsive-item\" src={poster_url} />\n\t\t\t) : (\n\t\t\t\t<div className=\"embed-responsive-item text-center\">\n\t\t\t\t\t{`No poster available for ${title}`}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nMoviePoster.propTypes = {\n\tposter_url: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n};\n\nexport default MoviePoster;\n","import MovieInfoRecommendations from './MovieInfoRecommendations';\n\nexport default MovieInfoRecommendations;\n","import React, { useContext } from 'react';\n\nimport movieRecommendationsContext from '../../../contexts/movieRecommendationsContext';\nimport LoadingHandler from '../../LoadingHandler';\nimport MoviePoster from '../../MoviePoster';\n\nconst MovieInfoRecommendations = () => {\n\tconst { movieRecommendations, movieRecommendationsStatus } = useContext(movieRecommendationsContext);\n\tconst verticalListStyle = {\n\t\toverflowX: 'scroll',\n\t\tWebkitOverflowScrolling: 'touch',\n\t};\n\treturn (\n\t\t<LoadingHandler dataStatus={movieRecommendationsStatus} hasData={!!movieRecommendations.length}>\n\t\t\t<div className=\"p-3\">\n\t\t\t\t<h2 className=\"h4\">Recommendations</h2>\n\t\t\t\t<ul className=\"flex-nowrap form-row list-unstyled mb-0\" style={verticalListStyle}>\n\t\t\t\t\t{movieRecommendations.map(movie => (\n\t\t\t\t\t\t<li className=\"col-5 col-md-3 col-lg-2 mb-3\" key={movie.id}>\n\t\t\t\t\t\t\t<a className=\"text-danger\" href={movie.tmdbURI} rel=\"noopener noreferrer\" target=\"_blank\">\n\t\t\t\t\t\t\t\t<MoviePoster poster_url={movie.poster_url} title={movie.title} />\n\t\t\t\t\t\t\t\t{movie.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</LoadingHandler>\n\t);\n};\n\nexport default MovieInfoRecommendations;\n","import MovieInfoBody from './MovieInfoBody';\n\nexport default MovieInfoBody;\n","import React, { useContext } from 'react';\n\nimport { MovieCreditsStore } from '../../../contexts/movieCreditsContext';\nimport { MovieRecommendationsStore } from '../../../contexts/movieRecommendationsContext';\nimport movieInfoContext from '../../../contexts/movieInfoContext';\nimport MovieBackdrop from '../../MovieBackdrop';\nimport MovieInfoCastCrew from '../MovieInfoCastCrew';\nimport MovieInfoRecommendations from '../MovieInfoRecommendations';\n\nconst MovieInfoBody = () => {\n\tconst { movieInfo } = useContext(movieInfoContext);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"p-3\">\n\t\t\t\t<p className=\"lead\">{movieInfo.overview}</p>\n\t\t\t\t<MovieCreditsStore movieId={movieInfo.id}>\n\t\t\t\t\t<MovieInfoCastCrew />\n\t\t\t\t</MovieCreditsStore>\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<a className=\"btn btn-danger btn-sm\" href={movieInfo.LetterboxdURI} target=\"_blank\" rel=\"noopener noreferrer\">View movie at Letterboxd</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<a className=\"btn btn-danger btn-sm\" href={movieInfo.tmdbURI} target=\"_blank\" rel=\"noopener noreferrer\">View movie at TMDB</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MovieBackdrop backdrop_url={movieInfo.backdrop_url} title={movieInfo.title} />\n\t\t\t<MovieRecommendationsStore movieId={movieInfo.id}>\n\t\t\t\t<MovieInfoRecommendations />\n\t\t\t</MovieRecommendationsStore>\n\t\t</>\n\t);\n};\n\nexport default MovieInfoBody;\n","import MovieInfoHeader from './MovieInfoHeader';\n\nexport default MovieInfoHeader;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useContext } from 'react';\n\nimport movieInfoContext from '../../../contexts/movieInfoContext';\nimport MoviePoster from '../..//MoviePoster';\n\nconst MovieInfoHeader = () => {\n\tconst { movieInfo } = useContext(movieInfoContext);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"p-3 row\">\n\t\t\t\t<div className=\"col-6 col-md-4 col-lg-3\">\n\t\t\t\t\t<MoviePoster poster_url={movieInfo.poster_url} title={movieInfo.title} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t{movieInfo.Rating} of 5\n\t\t\t\t\t\t<FontAwesomeIcon className=\"ml-1 text-warning\" icon=\"star\" />\n\t\t\t\t\t\t<div className=\"small\">by me</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t{movieInfo.vote_average} of 10\n\t\t\t\t\t\t<FontAwesomeIcon className=\"ml-1 text-warning\" icon=\"star\" />\n\t\t\t\t\t\t<div className=\"small\">by TMDb users</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h1 className=\"bg-secondary h3 mb-0 p-3\">{movieInfo.title}</h1>\n\t\t</>\n\t);\n};\n\nexport default MovieInfoHeader;\n","import MovieInfo from './MovieInfo';\n\nexport default MovieInfo;\n","import React, { useContext } from 'react';\n\nimport movieInfoContext from '../../contexts/movieInfoContext';\nimport LoadingHandler from '../LoadingHandler';\nimport MovieInfoBody from './MovieInfoBody';\nimport MovieInfoHeader from './MovieInfoHeader';\n\nconst MovieInfo = () => {\n\tconst { movieInfo, movieInfoStatus } = useContext(movieInfoContext);\n\treturn (\n\t\t<LoadingHandler dataStatus={movieInfoStatus} hasData={(movieInfo.id !== '')}>\n\t\t\t<div className=\"border border-secondary mb-3 rounded\">\n\t\t\t\t<MovieInfoHeader />\n\t\t\t\t<MovieInfoBody />\n\t\t\t</div>\n\t\t</LoadingHandler>\n\t);\n};\n\nexport default MovieInfo;\n","import React, { useContext } from 'react';\n\nimport { MovieInfoStore } from '../contexts/movieInfoContext';\nimport movieRatingsContext from '../contexts/movieRatingsContext';\nimport LoadingHandler from '../components/LoadingHandler';\nimport MovieInfo from '../components/MovieInfo';\n\nconst PageMovieInfo = ({ match }) => {\n\tconst { movieRatings, movieRatingsStatus } = useContext(movieRatingsContext);\n\tconst { movieId } = match.params;\n\tconst movie = movieRatings.find((obj) => (obj.Id === movieId));\n\treturn (\n\t\t<LoadingHandler dataStatus={movieRatingsStatus}>\n\t\t\t<MovieInfoStore movie={movie}>\n\t\t\t\t<MovieInfo />\n\t\t\t</MovieInfoStore>\n\t\t</LoadingHandler>\n\t);\n};\n\nexport default PageMovieInfo;\n","import MovieButton from './MovieButton';\n\nexport default MovieButton;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieButton = memo(function MovieButton({ movie, type }) {\n\tlet dateText;\n\tif (type === 'Diary' && movie.WatchedDateFormatted) {\n\t\tdateText = `watched in ${movie.WatchedDateFormatted}`;\n\t} else if (type === 'Ratings' && movie.DateFormatted) {\n\t\tdateText = `rated in ${movie.DateFormatted}`;\n\t}\n\treturn (\n\t\t<Link className=\"btn btn-secondary btn-block\" to={`/movie/${movie.Id}`}>\n\t\t\t<div className=\"text-left text-truncate\">\n\t\t\t\t{movie.Name}\n\t\t\t\t<span className=\"ml-1 small\">({movie.Year})</span>\n\t\t\t</div>\n\t\t\t<div className=\"align-items-end row small\">\n\t\t\t\t<div className=\"col text-left text-warning\">\n\t\t\t\t\t{Array.from(Array(movie.Rating)).map((item, i) => (\n\t\t\t\t\t\t<FontAwesomeIcon key={i} className=\"mr-1\" icon=\"star\" />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col small text-right\">\n\t\t\t\t\t{dateText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n});\n\nMovieButton.propTypes = {\n\tmovie: PropTypes.shape({\n\t\tId: PropTypes.string.isRequired,\n\t\tDate: PropTypes.string.isRequired,\n\t\tDateFormatted: PropTypes.string.isRequired,\n\t\tLetterboxdURI: PropTypes.string.isRequired,\n\t\tName: PropTypes.string.isRequired,\n\t\tRating: PropTypes.number.isRequired,\n\t\tWatchedDate: PropTypes.string,\n\t\tWatchedDateFormatted: PropTypes.string,\n\t\tYear: PropTypes.number.isRequired\n\t}),\n\ttype: PropTypes.string.isRequired\n};\n\nexport default MovieButton;\n","import MovieList from './MovieList';\n\nexport default MovieList;\n","import PropTypes from 'prop-types';\nimport React, { memo, useContext, useEffect, useState } from 'react';\n\nimport movieDiaryContext from '../../contexts/movieDiaryContext';\nimport movieRatingsContext from '../../contexts/movieRatingsContext';\nimport LoadingHandler from '../LoadingHandler';\nimport MovieButton from '../MovieButton';\n\nconst MovieList = memo(function MovieList ({ type }) {\n\tconst [state, setState] = useState({\n\t\tincreasePage: null,\n\t\tmoviesFiltered: [],\n\t\tmoviesPaginated: [],\n\t\tmoviesStatus: null,\n\t});\n\tconst {\n\t\tincreaseMovieDiaryPage,\n\t\tmovieDiaryFiltered,\n\t\tmovieDiaryPage,\n\t\tmovieDiaryPaginated,\n\t\tmovieDiarySearchString,\n\t\tmovieDiaryStatus,\n\t} = useContext(movieDiaryContext);\n\tconst {\n\t\tincreaseMovieRatingsPage,\n\t\tmovieRatingsFiltered,\n\t\tmovieRatingsPage,\n\t\tmovieRatingsPaginated,\n\t\tmovieRatingsSearchString,\n\t\tmovieRatingsStatus,\n\t} = useContext(movieRatingsContext);\n\n\tuseEffect(() => {\n\t\tif (type === 'Diary') {\n\t\t\tsetState(prevState => ({\n\t\t\t\t...prevState,\n\t\t\t\tincreasePage: increaseMovieDiaryPage,\n\t\t\t\tmoviesFiltered: movieDiaryFiltered,\n\t\t\t\tmoviesPaginated: movieDiaryPaginated,\n\t\t\t\tmoviesStatus: movieDiaryStatus,\n\t\t\t}));\n\t\t} else if (type === 'Ratings') {\n\t\t\tsetState(prevState => ({\n\t\t\t\t...prevState,\n\t\t\t\tincreasePage: increaseMovieRatingsPage,\n\t\t\t\tmoviesFiltered: movieRatingsFiltered,\n\t\t\t\tmoviesPaginated: movieRatingsPaginated,\n\t\t\t\tmoviesStatus: movieRatingsStatus,\n\t\t\t}));\n\t\t}\n\t}, [\n\t\tincreaseMovieDiaryPage,\n\t\tincreaseMovieRatingsPage,\n\t\tmovieDiaryFiltered,\n\t\tmovieDiaryPage,\n\t\tmovieDiaryPaginated,\n\t\tmovieDiarySearchString,\n\t\tmovieDiaryStatus,\n\t\tmovieRatingsFiltered,\n\t\tmovieRatingsPage,\n\t\tmovieRatingsPaginated,\n\t\tmovieRatingsSearchString,\n\t\tmovieRatingsStatus,\n\t\ttype,\n\t]);\n\n\tconst {\n\t\tincreasePage,\n\t\tmoviesFiltered,\n\t\tmoviesPaginated,\n\t\tmoviesStatus,\n\t} = state;\n\treturn (\n\t\t<LoadingHandler dataStatus={moviesStatus} hasData={(!!moviesFiltered.length)} messageNoData=\"noMovies\">\n\t\t\t<>\n\t\t\t\t<ul className=\"list-unstyled\">\n\t\t\t\t\t{moviesPaginated.map(movie => (\n\t\t\t\t\t\t<li className=\"mb-3\" key={movie.Id}>\n\t\t\t\t\t\t\t<MovieButton movie={movie} type={type} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t{moviesPaginated.length < moviesFiltered.length && <div className=\"mb-3 text-center\">\n\t\t\t\t\t<button className=\"btn btn-danger\" type=\"button\" onClick={increasePage}>Show more</button>\n\t\t\t\t</div>}\n\t\t\t</>\n\t\t</LoadingHandler>\n\t);\n});\n\nMovieList.propTypes = {\n\ttype: PropTypes.string.isRequired\n};\n\nexport default MovieList;\n","import MovieNameSearch from './MovieNameSearch';\n\nexport default MovieNameSearch;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useContext, useEffect, useState } from 'react';\n\nimport movieDiaryContext from '../../contexts/movieDiaryContext';\nimport movieRatingsContext from '../../contexts/movieRatingsContext';\n\nconst MovieNameSearch = ({ type }) => {\n\tconst [state, setState] = useState({\n\t\tmovieSearchString: '',\n\t\tmoviesFiltered: [],\n\t\tsetMovieSearchString: null,\n\t});\n\tconst {\n\t\tmovieDiaryFiltered,\n\t\tmovieDiarySearchString,\n\t\tmovieDiaryStatus,\n\t\tsetMovieDiarySearchString,\n\t} = useContext(movieDiaryContext);\n\tconst {\n\t\tmovieRatingsFiltered,\n\t\tmovieRatingsSearchString,\n\t\tmovieRatingsStatus,\n\t\tsetMovieRatingsSearchString,\n\t} = useContext(movieRatingsContext);\n\n\tuseEffect(() => {\n\t\tif (type === 'Diary') {\n\t\t\tsetState(prevState => ({\n\t\t\t\t...prevState,\n\t\t\t\tmovieSearchString: movieDiarySearchString,\n\t\t\t\tmoviesFiltered: movieDiaryFiltered,\n\t\t\t\tsetMovieSearchString: setMovieDiarySearchString,\n\t\t\t}));\n\t\t} else if (type === 'Ratings') {\n\t\t\tsetState(prevState => ({\n\t\t\t\t...prevState,\n\t\t\t\tmovieSearchString: movieRatingsSearchString,\n\t\t\t\tmoviesFiltered: movieRatingsFiltered,\n\t\t\t\tsetMovieSearchString: setMovieRatingsSearchString,\n\t\t\t}));\n\t\t};\n\t}, [\n\t\tmovieDiaryFiltered,\n\t\tmovieDiarySearchString,\n\t\tmovieDiaryStatus,\n\t\tmovieRatingsFiltered,\n\t\tmovieRatingsSearchString,\n\t\tmovieRatingsStatus,\n\t\tsetMovieDiarySearchString,\n\t\tsetMovieRatingsSearchString,\n\t\ttype,\n\t]);\n\n\tconst {\n\t\tmovieSearchString,\n\t\tmoviesFiltered,\n\t\tsetMovieSearchString,\n\t} = state;\n\treturn (\n\t\t<div className=\"mb-3\">\n\t\t\t<div className=\"input-group mb-1\">\n\t\t\t\t<input id=\"search-movie\" className=\"form-control\" placeholder=\"Search...\" type=\"text\" value={movieSearchString} onChange={(event) => setMovieSearchString(event.target.value)} />\n\t\t\t\t<span className=\"input-group-append\">\n\t\t\t\t\t<button className=\"btn btn-secondary\" type=\"button\" onClick={() => setMovieSearchString('')}>\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<p className=\"small text-right\">{moviesFiltered.length} movies</p>\n\t\t</div>\n\t);\n};\n\nexport default MovieNameSearch;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MovieList from '../components/MovieList';\nimport MovieNameSearch from '../components/MovieNameSearch';\n\nconst PageMovies = ({ type }) => (\n\t<>\n\t\t<h1 className=\"h4\">{type}</h1>\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-12 col-sm-4\">\n\t\t\t\t<MovieNameSearch type={type} />\n\t\t\t</div>\n\t\t\t<div className=\"col-12 col-sm-8\">\n\t\t\t\t<MovieList type={type} />\n\t\t\t</div>\n\t\t</div>\n\t</>\n);\n\nPageMovies.propTypes = {\n\ttype: PropTypes.string.isRequired\n};\n\nexport default PageMovies;\n","import React from 'react';\n\nimport Message from '../components/Message';\n\nconst PageNotFound = () => (\n\t<Message type=\"pageNotFound\" />\n)\n\nexport default PageNotFound;\n","import ProgressBar from './ProgressBar';\n\nexport default ProgressBar;\n","import PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\nconst ProgressBar = memo(function ProgressBar({ width }) {\n\treturn (\n\t\t<div className=\"bg-secondary rounded\">\n\t\t\t<div className=\"bg-danger pb-2 rounded\" style={{width: `${width}%`}}></div>\n\t\t</div>\n\t);\n});\n\nProgressBar.propTypes = {\n\twidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n};\n\nexport default ProgressBar;\n","import MovieStats from './MovieStats';\n\nexport default MovieStats;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\nimport LoadingHandler from '../LoadingHandler';\nimport ProgressBar from '../ProgressBar';\n\nconst MovieStats = memo(function MovieStats({ movies, moviesStatus, type }) {\n\treturn (\n\t\t<LoadingHandler dataStatus={moviesStatus} hasData={!!movies.groups} messageNoData=\"noStats\">\n\t\t\t<ul className=\"list-unstyled\">\n\t\t\t\t{Object.entries(movies.groups).reverse().map(([key, value]) => {\n\t\t\t\t\tconst text = () => {\n\t\t\t\t\t\tif (type === 'moviesPerRatingGiven') {\n\t\t\t\t\t\t\tlet stars = [];\n\t\t\t\t\t\t\tfor (let i = 0; i < key; i++) {\n\t\t\t\t\t\t\t\tstars.push(<FontAwesomeIcon key={i} className=\"mr-1 text-warning\" icon=\"star\" />);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn stars;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn key;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tconst width = value * 100 / movies.max;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className=\"mb-2\" key={key}>\n\t\t\t\t\t\t\t<div className=\"no-gutters row\">\n\t\t\t\t\t\t\t\t<div className=\"col-auto\">{text()}</div>\n\t\t\t\t\t\t\t\t<div className=\"col font-weight-bold text-right\">{value}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ProgressBar width={width} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</LoadingHandler>\n\t);\n});\n\nMovieStats.propTypes = {\n\tmovies: PropTypes.shape({\n\t\tgroups: PropTypes.object.isRequired,\n\t\tmax: PropTypes.number.isRequired\n\t}),\n\tmoviesStatus: PropTypes.string.isRequired,\n\ttype: PropTypes.string.isRequired\n};\n\nexport default MovieStats;\n","import React, { useContext } from 'react';\n\nimport MovieStats from '../components/MovieStats';\nimport movieDiaryContext from '../contexts/movieDiaryContext';\nimport movieRatingsContext from '../contexts/movieRatingsContext';\n\nconst PageStats = () => {\n\tconst { moviesPerYearWatched, movieDiaryStatus } = useContext(movieDiaryContext);\n\tconst { moviesPerDecadeReleased, moviesPerRatingGiven, movieRatingsStatus } = useContext(movieRatingsContext);\n\treturn (\n\t\t<>\n\t\t\t<h1 className=\"h4\">Stats</h1>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n\t\t\t\t\t<div className=\"border border-secondary p-3 rounded\">\n\t\t\t\t\t\t<h1 className=\"h5\">Per year watched</h1>\n\t\t\t\t\t\t<MovieStats\n\t\t\t\t\t\t\tmovies={moviesPerYearWatched}\n\t\t\t\t\t\t\tmoviesStatus={movieDiaryStatus}\n\t\t\t\t\t\t\ttype=\"moviesPerYearWatched\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n\t\t\t\t\t<div className=\"border border-secondary p-3 rounded\">\n\t\t\t\t\t\t<h1 className=\"h5\">Per rating given</h1>\n\t\t\t\t\t\t<MovieStats\n\t\t\t\t\t\t\tmovies={moviesPerRatingGiven}\n\t\t\t\t\t\t\tmoviesStatus={movieRatingsStatus}\n\t\t\t\t\t\t\ttype=\"moviesPerRatingGiven\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n\t\t\t\t\t<div className=\"border border-secondary p-3 rounded\">\n\t\t\t\t\t\t<h1 className=\"h5\">Per decade released</h1>\n\t\t\t\t\t\t<MovieStats\n\t\t\t\t\t\t\tmovies={moviesPerDecadeReleased}\n\t\t\t\t\t\t\tmoviesStatus={movieRatingsStatus}\n\t\t\t\t\t\t\ttype=\"moviesPerDecadeReleased\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default PageStats;\n","import SiteInfo from './SiteInfo';\n\nexport default SiteInfo;\n","import React, { memo } from 'react';\n\nimport tmdbApi from '../../helpers/tmdbApi';\n\nconst SiteInfo = memo(function SiteInfo() {\n\treturn (\n\t\t<div className=\"border-secondary border-top pt-3 small text-center\">\n\t\t\t<div className=\"mb-3\">\n\t\t\t\tMy Ratings and Diary data are exported from Letterboxd from time to time.<br />\n\t\t\t\tSo my <a className=\"text-danger\" href=\"https://letterboxd.com/saviomd\" target=\"_blank\" rel=\"noopener noreferrer\">profile</a> will have more up to date information.\n\t\t\t</div>\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<img alt=\"Powered by TMDB\" src={tmdbApi.img.attributionUrl} height=\"38\" />\n\t\t\t\t<br />\n\t\t\t\tThis product uses the TMDb API but is not endorsed or certified by TMDb.\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default SiteInfo;\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCalendarAlt, faChartBar, faDizzy, faFrown, faHourglassHalf, faSadTear, faStar, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport { MovieDiaryStore } from './contexts/movieDiaryContext';\nimport { MovieRatingsStore } from './contexts/movieRatingsContext';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport PageMovieInfo from './pages/PageMovieInfo';\nimport PageMovies from './pages/PageMovies';\nimport PageNotFound from './pages/PageNotFound';\nimport PageStats from './pages/PageStats';\nimport SiteInfo from './components/SiteInfo';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nlibrary.add(faCalendarAlt, faChartBar, faDizzy, faFrown, faHourglassHalf, faSadTear, faStar, faTimes);\n\nconst App = () => {\n\tconst [state] = useState({\n\t\tnavLinks: [\n\t\t\t{\n\t\t\t\ticon: 'star',\n\t\t\t\tname: 'Ratings',\n\t\t\t\tpath: '/',\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: 'calendar-alt',\n\t\t\t\tname: 'Diary',\n\t\t\t\tpath: '/diary',\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: 'chart-bar',\n\t\t\t\tname: 'Stats',\n\t\t\t\tpath: '/stats',\n\t\t\t},\n\t\t],\n\t});\n\n\treturn (\n\t\t<MovieDiaryStore>\n\t\t\t<MovieRatingsStore>\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div className=\"justify-content-center row\">\n\t\t\t\t\t\t<div className=\"col-12 col-md-10\">\n\t\t\t\t\t\t\t<Header navLinks={state.navLinks} />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/\" exact render={() => <PageMovies type='Ratings' />} />\n\t\t\t\t\t\t\t\t<Route path=\"/diary\" render={() => <PageMovies type='Diary' />} />\n\t\t\t\t\t\t\t\t<Route path=\"/movie/:movieId\" render={({ match }) => <PageMovieInfo match={match} />} />\n\t\t\t\t\t\t\t\t<Route path=\"/stats\" component={PageStats} />\n\t\t\t\t\t\t\t\t<Route component={PageNotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t<SiteInfo />\n\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</MovieRatingsStore>\n\t\t</MovieDiaryStore>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst router = (\n\t<Router>\n\t\t<App />\n\t</Router>\n)\n\nReactDOM.render(router, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}