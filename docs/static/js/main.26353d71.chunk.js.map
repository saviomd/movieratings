{"version":3,"sources":["helpers/filterMoviesByName.js","helpers/formatMovieList.js","contexts/movieDiaryContext.jsx","helpers/letterboxdServices.js","contexts/movieRatingsContext.jsx","components/Anchor/Anchor.jsx","components/Anchor/index.js","components/Footer/index.js","components/Footer/Footer.jsx","components/NavItem/index.js","components/NavItem/NavItem.jsx","components/Nav/index.js","components/Nav/Nav.jsx","components/Header/index.js","components/Header/Header.jsx","helpers/tmdbApi.js","helpers/formatMovieInfo.js","contexts/movieInfoContext.jsx","helpers/tmdbServices.js","components/Message/index.js","components/Message/Message.jsx","components/LoadingHandler/LoadingHandler.jsx","components/LoadingHandler/index.js","helpers/formatMovieCredits.js","contexts/movieCreditsContext.jsx","helpers/formatMovieRecommendations.js","contexts/movieRecommendationsContext.jsx","components/Image/Image.jsx","components/Image/index.js","components/ScrollableHorizontalList/index.js","components/ScrollableHorizontalList/ScrollableHorizontalList.jsx","components/MovieInfo/MovieInfoCastCrew/index.js","components/MovieInfo/MovieInfoCastCrew/MovieInfoCastCrew.jsx","components/MovieInfo/MovieInfoRecommendations/index.js","components/MovieInfo/MovieInfoRecommendations/MovieInfoRecommendations.jsx","components/MovieInfo/MovieInfoBody/index.js","components/MovieInfo/MovieInfoBody/MovieInfoBody.jsx","components/MovieInfo/MovieInfoHeader/index.js","components/MovieInfo/MovieInfoHeader/MovieInfoHeader.jsx","components/MovieInfo/index.js","components/MovieInfo/MovieInfo.jsx","pages/PageMovieInfo.jsx","components/MovieButton/index.js","components/MovieButton/MovieButton.jsx","components/MovieList/MovieList.jsx","components/MovieList/index.js","components/MovieNameSearch/MovieNameSearch.jsx","components/MovieNameSearch/index.js","pages/PageMovies.jsx","pages/PageNotFound.jsx","components/ProgressBar/ProgressBar.jsx","components/ProgressBar/index.js","components/MovieStats/MovieStats.jsx","components/MovieStats/index.js","pages/PageStats.jsx","components/SiteInfo/index.js","components/SiteInfo/SiteInfo.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["filterMoviesByName","movieList","value","filter","movie","Name","toLowerCase","includes","formatMovieList","reverse","map","index","Id","LetterboxdURI","length","split","toString","DateFormatted","Date","toLocaleDateString","day","month","year","WatchedDate","WatchedDateFormatted","MovieDiaryContext","React","createContext","initialState","movieDiary","movieDiaryPage","movieDiarySearchString","movieDiaryStatus","reducer","state","action","type","payload","Error","MovieDiaryStore","children","useReducer","dispatchMovieDiary","movieDiaryFiltered","useMemo","movieDiaryPaginated","size","slice","moviesPerYearWatched","groups","reduce","acc","curr","max","Object","values","forEach","loadMovieDiary","fetch","then","response","ok","status","json","movieDiaryFormatted","catch","useEffect","providerValue","Provider","MovieRatingsContext","movieRatings","movieRatingsPage","movieRatingsSearchString","movieRatingsStatus","MovieRatingsStore","dispatchMovieRatings","movieRatingsFiltered","movieRatingsPaginated","moviesPerDecadeReleased","decade","Year","substr","moviesPerRatingGiven","rating","Rating","loadMovieRatings","movieRatingsFormatted","Anchor","href","margin","target","marginClass","both","left","none","right","className","rel","defaultProps","Footer","memo","getFullYear","alt","src","height","width","icon","NavItem","link","to","path","exact","activeClassName","name","Nav","navLinks","Header","tmdbApi","img","attributionUrl","baseUrl","backdropSize","fallbackUrl","posterSize","key","pathMovieCredits","pathMovieRecommendations","pathSearchMovies","url","formatMovieInfo","newMovie","backdrop_url","backdrop_path","id","original_language","toUpperCase","original_title","overview","poster_url","poster_path","release_year","release_date","title","tmdbURI","vote_average","vote_count","MovieInfoContext","movieInfo","movieInfoStatus","MovieInfoStore","dispatchMovieInfo","loadMovieInfo","useCallback","undefined","fetchMovieInfo","results","find","obj","indexOf","Message","messages","error","text","loading","noData","noMovies","noStats","pageNotFound","animation","LoadingHandler","dataStatus","hasData","messageNoData","propTypes","PropTypes","oneOfType","arrayOf","node","isRequired","string","bool","formatMovieCredits","movieCredits","cast","person","crew","MovieCreditsContext","movieCreditsStatus","MovieCreditsStore","movieId","dispatchMovieCredits","loadMovieCredits","replace","fetchMovieCredits","formatMovieRecommendations","MovieRecommendationsContext","movieRecommendations","movieRecommendationsStatus","MovieRecommendationsStore","dispatchMovieRecommendations","loadMovieRecommendations","fetchMovieRecommendations","Image","dimensions","backdrop","poster","style","paddingTop","ScrollableHorizontalList","overflowX","WebkitOverflowScrolling","MovieInfoCastCrew","useContext","movieCreditsContext","character","credit_id","job","MovieInfoRecommendations","movieRecommendationsContext","MovieInfoBody","movieInfoContext","MovieInfoHeader","MovieInfo","PageMovieInfo","match","movieDiaryContext","movieRatingsContext","params","MovieButton","dateText","Array","from","item","i","dispatchMovie","dispatchMovieType","moviesFiltered","moviesPaginated","moviesStatus","MovieList","dispatchMovieList","onClick","movieSearchString","MovieNameSearch","dispatchMovieNameSearch","placeholder","onChange","event","PageMovies","PageNotFound","ProgressBar","number","MovieStats","movies","entries","stars","push","PageStats","SiteInfo","library","add","faCalendarAlt","faChartBar","faDizzy","faExternalLinkAlt","faFrown","faHourglassHalf","faSadTear","faStar","faTimes","App","useState","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26353d71.chunk.js","sourcesContent":["const filterMoviesByName = (movieList, value) =>\n  movieList.filter((movie) => {\n    const movieName = movie.Name.toLowerCase();\n    return movieName.includes(value.toLowerCase());\n  });\n\nexport default filterMoviesByName;\n","const formatMovieList = (movieList) => {\n  movieList.reverse();\n  return movieList.map((movie, index) => ({\n    ...movie,\n    Id: movie.LetterboxdURI.length\n      ? movie.LetterboxdURI.split(\"boxd.it/\")[1]\n      : index.toString(),\n    Name: movie.Name.toString(),\n    DateFormatted: new Date(movie.Date).toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\",\n    }),\n    ...(movie.WatchedDate && {\n      WatchedDateFormatted: new Date(movie.WatchedDate).toLocaleDateString(\n        \"en-GB\",\n        {\n          day: \"2-digit\",\n          month: \"short\",\n          year: \"numeric\",\n        }\n      ),\n    }),\n  }));\n};\n\nexport default formatMovieList;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useMemo, useReducer } from \"react\";\n\nimport filterMoviesByName from \"../helpers/filterMoviesByName\";\nimport formatMovieList from \"../helpers/formatMovieList\";\nimport { fetchMovieDiary } from \"../helpers/letterboxdServices\";\n\nconst MovieDiaryContext = React.createContext();\n\nconst initialState = {\n  movieDiary: [],\n  movieDiaryPage: 1,\n  movieDiarySearchString: \"\",\n  movieDiaryStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieDiary\":\n      return {\n        ...state,\n        movieDiary: action.payload,\n        movieDiaryStatus: \"loaded\",\n      };\n    case \"setMovieDiaryPage\":\n      return { ...state, movieDiaryPage: state.movieDiaryPage + 1 };\n    case \"setMovieDiarySearchString\":\n      return { ...state, movieDiarySearchString: action.payload.toLowerCase() };\n    case \"setMovieDiaryStatus\":\n      return { ...state, movieDiaryStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieDiaryStore = ({ children }) => {\n  const [state, dispatchMovieDiary] = useReducer(reducer, initialState);\n\n  const movieDiaryFiltered = useMemo(\n    () => filterMoviesByName(state.movieDiary, state.movieDiarySearchString),\n    [state.movieDiary, state.movieDiarySearchString]\n  );\n\n  const movieDiaryPaginated = useMemo(() => {\n    const size = state.movieDiaryPage * 100;\n    return movieDiaryFiltered.slice(0, size);\n  }, [movieDiaryFiltered, state.movieDiaryPage]);\n\n  const moviesPerYearWatched = useMemo(() => {\n    const groups = state.movieDiary.reduce((acc, curr) => {\n      const year = curr.WatchedDate.split(\"-\")[0];\n      acc[year] = acc[year] ? (acc[year] += 1) : (acc[year] = 1);\n      return acc;\n    }, {});\n    let max = 0;\n    Object.values(groups).forEach((year) => {\n      max = year > max ? year : max;\n    });\n    return { groups, max };\n  }, [state.movieDiary]);\n\n  function loadMovieDiary() {\n    dispatchMovieDiary({ type: \"setMovieDiaryStatus\", payload: \"loading\" });\n    return fetchMovieDiary()\n      .then((json) => {\n        const movieDiaryFormatted = formatMovieList(json);\n        dispatchMovieDiary({\n          type: \"setMovieDiary\",\n          payload: movieDiaryFormatted,\n        });\n        return movieDiaryFormatted;\n      })\n      .catch(() => {\n        dispatchMovieDiary({ type: \"setMovieDiaryStatus\", payload: \"error\" });\n      });\n  }\n\n  useEffect(() => {\n    loadMovieDiary();\n  }, []);\n\n  const providerValue = useMemo(\n    () => ({\n      ...state,\n      dispatchMovieDiary,\n      movieDiaryFiltered,\n      movieDiaryPaginated,\n      moviesPerYearWatched,\n    }),\n    [movieDiaryFiltered, movieDiaryPaginated, moviesPerYearWatched, state]\n  );\n  return (\n    <MovieDiaryContext.Provider value={providerValue}>\n      {children}\n    </MovieDiaryContext.Provider>\n  );\n};\n\nMovieDiaryStore.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { MovieDiaryContext as default, MovieDiaryStore };\n","export const fetchMovieDiary = () =>\n  fetch(\"https://saviomd.com/movieratings/data/diary.json\").then((response) => {\n    if (!response.ok) {\n      throw Error(response.status);\n    }\n    return response.json();\n  });\n\nexport const fetchMovieRatings = () =>\n  fetch(\"https://saviomd.com/movieratings/data/ratings.json\").then(\n    (response) => {\n      if (!response.ok) {\n        throw Error(response.status);\n      }\n      return response.json();\n    }\n  );\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useMemo, useReducer } from \"react\";\n\nimport filterMoviesByName from \"../helpers/filterMoviesByName\";\nimport formatMovieList from \"../helpers/formatMovieList\";\nimport { fetchMovieRatings } from \"../helpers/letterboxdServices\";\n\nconst MovieRatingsContext = React.createContext();\n\nconst initialState = {\n  movieRatings: [],\n  movieRatingsPage: 1,\n  movieRatingsSearchString: \"\",\n  movieRatingsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieRatings\":\n      return {\n        ...state,\n        movieRatings: action.payload,\n        movieRatingsStatus: \"loaded\",\n      };\n    case \"setMovieRatingsPage\":\n      return { ...state, movieRatingsPage: state.movieRatingsPage + 1 };\n    case \"setMovieRatingsSearchString\":\n      return {\n        ...state,\n        movieRatingsSearchString: action.payload.toLowerCase(),\n      };\n    case \"setMovieRatingsStatus\":\n      return { ...state, movieRatingsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieRatingsStore = ({ children }) => {\n  const [state, dispatchMovieRatings] = useReducer(reducer, initialState);\n\n  const movieRatingsFiltered = useMemo(\n    () =>\n      filterMoviesByName(state.movieRatings, state.movieRatingsSearchString),\n    [state.movieRatings, state.movieRatingsSearchString]\n  );\n\n  const movieRatingsPaginated = useMemo(() => {\n    const size = state.movieRatingsPage * 100;\n    return movieRatingsFiltered.slice(0, size);\n  }, [movieRatingsFiltered, state.movieRatingsPage]);\n\n  const moviesPerDecadeReleased = useMemo(() => {\n    const groups = state.movieRatings.reduce((acc, curr) => {\n      const decade = `${curr.Year.toString().substr(0, 3)}0`;\n      acc[decade] = acc[decade] ? (acc[decade] += 1) : (acc[decade] = 1);\n      return acc;\n    }, {});\n    let max = 0;\n    Object.values(groups).forEach((decade) => {\n      max = decade > max ? decade : max;\n    });\n    return { groups, max };\n  }, [state.movieRatings]);\n\n  const moviesPerRatingGiven = useMemo(() => {\n    const groups = state.movieRatings.reduce((acc, curr) => {\n      const rating = curr.Rating;\n      acc[rating] = acc[rating] ? (acc[rating] += 1) : (acc[rating] = 1);\n      return acc;\n    }, {});\n    let max = 0;\n    Object.values(groups).forEach((rating) => {\n      max = rating > max ? rating : max;\n    });\n    return { groups, max };\n  }, [state.movieRatings]);\n\n  function loadMovieRatings() {\n    dispatchMovieRatings({ type: \"setMovieRatingsStatus\", payload: \"loading\" });\n    return fetchMovieRatings()\n      .then((json) => {\n        const movieRatingsFormatted = formatMovieList(json);\n        dispatchMovieRatings({\n          type: \"setMovieRatings\",\n          payload: movieRatingsFormatted,\n        });\n        return movieRatingsFormatted;\n      })\n      .catch(() => {\n        dispatchMovieRatings({\n          type: \"setMovieRatingsStatus\",\n          payload: \"error\",\n        });\n      });\n  }\n\n  useEffect(() => {\n    loadMovieRatings();\n  }, []);\n\n  const providerValue = useMemo(\n    () => ({\n      ...state,\n      dispatchMovieRatings,\n      movieRatingsFiltered,\n      movieRatingsPaginated,\n      moviesPerDecadeReleased,\n      moviesPerRatingGiven,\n    }),\n    [\n      movieRatingsFiltered,\n      movieRatingsPaginated,\n      moviesPerDecadeReleased,\n      moviesPerRatingGiven,\n      state,\n    ]\n  );\n  return (\n    <MovieRatingsContext.Provider value={providerValue}>\n      {children}\n    </MovieRatingsContext.Provider>\n  );\n};\n\nMovieRatingsStore.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { MovieRatingsContext as default, MovieRatingsStore };\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Anchor = ({ children, href, margin, target }) => {\n  const marginClasses = {\n    both: \"m-1\",\n    left: \"ms-1\",\n    none: \"\",\n    right: \"me-1\",\n  };\n  const marginClass = marginClasses[margin];\n  return (\n    <a\n      className={`${marginClass} text-danger text-decoration-none`}\n      href={href}\n      target={target}\n      rel={target === \"_blank\" ? \"noopener noreferrer\" : null}\n    >\n      {children}\n    </a>\n  );\n};\n\nAnchor.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  href: PropTypes.string.isRequired,\n  margin: PropTypes.oneOf([\"both\", \"left\", \"none\", \"right\"]),\n  target: PropTypes.oneOf([\"_blank\", \"_parent\", \"_self\", \"_top\"]),\n};\n\nAnchor.defaultProps = {\n  margin: null,\n  target: null,\n};\n\nexport default Anchor;\n","import Anchor from \"./Anchor\";\n\nexport default Anchor;\n","import Footer from \"./Footer\";\n\nexport default Footer;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { memo } from \"react\";\n\nimport Anchor from \"../Anchor\";\n\nconst Footer = memo(() => {\n  const year = new Date().getFullYear();\n  return (\n    <footer className=\"border-secondary border-top mb-3 pt-3 small text-center\">\n      &copy; 2017-{year}\n      <Anchor href=\"http://saviomd.com/\" margin=\"left\" target=\"_blank\">\n        <img\n          alt=\"saviomd.com\"\n          className=\"me-1\"\n          src=\"https://saviomd.com/img/favicon.png\"\n          height=\"15\"\n          width=\"15\"\n        />\n        Sávio Mendes\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </Anchor>\n    </footer>\n  );\n});\n\nexport default Footer;\n","import NavItem from \"./NavItem\";\n\nexport default NavItem;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavItem = ({ link }) => (\n  <NavLink\n    to={link.path}\n    exact\n    activeClassName=\"active\"\n    className=\"btn btn-danger btn-sm\"\n  >\n    <FontAwesomeIcon icon={link.icon} />\n    <span className=\"d-none d-sm-inline-block ms-1\">{link.name}</span>\n  </NavLink>\n);\n\nNavItem.propTypes = {\n  link: PropTypes.shape({\n    icon: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default NavItem;\n","import Nav from \"./Nav\";\n\nexport default Nav;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport NavItem from \"../NavItem\";\n\nconst Nav = ({ navLinks }) => (\n  <nav className=\"btn-group\">\n    {navLinks.map((link) => (\n      <NavItem key={link.path} link={link} />\n    ))}\n  </nav>\n);\n\nNav.propTypes = {\n  navLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Nav;\n","import Header from \"./Header\";\n\nexport default Header;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Nav from \"../Nav\";\n\nconst Header = ({ navLinks }) => (\n  <header className=\"border-bottom border-secondary mb-3\">\n    <div className=\"align-items-center my-2 row\">\n      <h1 className=\"col h5 mb-0\">\n        <NavLink to=\"/\" exact className=\"text-decoration-none text-white\">\n          Movie Ratings\n        </NavLink>\n      </h1>\n      <div className=\"col-auto\">\n        <Nav navLinks={navLinks} />\n      </div>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  navLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Header;\n","const tmdbApi = {\n  img: {\n    attributionUrl:\n      \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\",\n    baseUrl: \"https://image.tmdb.org/t/p/\",\n    backdropSize: \"w1280\",\n    fallbackUrl:\n      \"https://www.themoviedb.org/assets/1/v4/logos/293x302-powered-by-square-blue-ee05c47ab249273a6f9f1dcafec63daba386ca30544567629deb1809395d8516.png\",\n    posterSize: \"w780\",\n  },\n  key: \"api_key=6f875d4fba2e999f480afa6275a08f75\",\n  pathMovieCredits: \"movie/{movie_id}/credits\",\n  pathMovieRecommendations: \"movie/{movie_id}/recommendations\",\n  pathSearchMovies: \"search/movie\",\n  url: \"https://api.themoviedb.org/3/\",\n};\n\nexport default tmdbApi;\n","import tmdbApi from \"./tmdbApi\";\n\nconst formatMovieInfo = (movie, newMovie) => ({\n  backdrop_url: newMovie.backdrop_path\n    ? tmdbApi.img.baseUrl + tmdbApi.img.backdropSize + newMovie.backdrop_path\n    : null,\n  id: newMovie.id,\n  LetterboxdURI: movie.LetterboxdURI,\n  original_language: newMovie.original_language.toUpperCase(),\n  original_title: newMovie.original_title,\n  overview: newMovie.overview,\n  poster_url: newMovie.poster_path\n    ? tmdbApi.img.baseUrl + tmdbApi.img.posterSize + newMovie.poster_path\n    : null,\n  Rating: movie.Rating,\n  release_year: newMovie.release_date.split(\"-\")[0],\n  title: newMovie.title,\n  tmdbURI: `https://www.themoviedb.org/movie/${newMovie.id}`,\n  vote_average: newMovie.vote_average,\n  vote_count: newMovie.vote_count,\n});\n\nexport default formatMovieInfo;\n","import PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useMemo, useReducer } from \"react\";\n\nimport { fetchMovieInfo } from \"../helpers/tmdbServices\";\nimport tmdbApi from \"../helpers/tmdbApi\";\nimport formatMovieInfo from \"../helpers/formatMovieInfo\";\n\nconst MovieInfoContext = React.createContext();\n\nconst initialState = {\n  movieInfo: {\n    backdrop_url: tmdbApi.img.fallbackUrl,\n    id: \"\",\n    LetterboxdURI: \"\",\n    overview: \"\",\n    poster_url: tmdbApi.img.fallbackUrl,\n    Rating: \"\",\n    title: \"\",\n    vote_average: \"\",\n  },\n  movieInfoStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieInfo\":\n      return { ...state, movieInfo: action.payload, movieInfoStatus: \"loaded\" };\n    case \"setMovieInfoStatus\":\n      return { ...state, movieInfoStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieInfoStore = ({ children, movie }) => {\n  const [state, dispatchMovieInfo] = useReducer(reducer, initialState);\n\n  const loadMovieInfo = useCallback(() => {\n    if (movie !== undefined) {\n      dispatchMovieInfo({ type: \"setMovieInfoStatus\", payload: \"loading\" });\n      fetchMovieInfo(movie)\n        .then((json) => {\n          if (json.results.length) {\n            const newMovie = json.results.find(\n              (obj) =>\n                obj.title === movie.Name &&\n                obj.release_date.indexOf(movie.Year) > -1\n            );\n            if (newMovie !== undefined) {\n              dispatchMovieInfo({\n                type: \"setMovieInfo\",\n                payload: formatMovieInfo(movie, newMovie),\n              });\n            } else {\n              throw Error(\"No movie found\");\n            }\n          } else {\n            throw Error(\"No movie found\");\n          }\n        })\n        .catch(() => {\n          dispatchMovieInfo({ type: \"setMovieInfoStatus\", payload: \"error\" });\n        });\n    } else {\n      dispatchMovieInfo({ type: \"setMovieInfoStatus\", payload: \"error\" });\n    }\n  }, [movie]);\n\n  useEffect(() => {\n    loadMovieInfo();\n  }, [loadMovieInfo]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieInfoContext.Provider value={providerValue}>\n      {children}\n    </MovieInfoContext.Provider>\n  );\n};\n\nMovieInfoStore.propTypes = {\n  children: PropTypes.node.isRequired,\n  movie: PropTypes.shape({\n    Name: PropTypes.string.isRequired,\n    Year: PropTypes.number.isRequired,\n  }),\n};\n\nMovieInfoStore.defaultProps = {\n  movie: undefined,\n};\n\nexport { MovieInfoContext as default, MovieInfoStore };\n","import tmdbApi from \"./tmdbApi\";\n\nexport const fetchMovieCredits = (movieId) => {\n  const url =\n    `${tmdbApi.url}${tmdbApi.pathMovieCredits}?${tmdbApi.key}`.replace(\n      \"{movie_id}\",\n      movieId\n    );\n  return fetch(url).then((response) => {\n    if (!response.ok) {\n      throw Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const fetchMovieInfo = (movie) =>\n  fetch(\n    `${tmdbApi.url}${tmdbApi.pathSearchMovies}?${tmdbApi.key}&query=${movie.Name}&year=${movie.Year}`\n  ).then((response) => {\n    if (!response.ok) {\n      throw Error(response.status);\n    }\n    return response.json();\n  });\n\nexport const fetchMovieRecommendations = (movieId) => {\n  const url =\n    `${tmdbApi.url}${tmdbApi.pathMovieRecommendations}?${tmdbApi.key}`.replace(\n      \"{movie_id}\",\n      movieId\n    );\n  return fetch(url).then((response) => {\n    if (!response.ok) {\n      throw Error(response.status);\n    }\n    return response.json();\n  });\n};\n","import Message from \"./Message\";\n\nexport default Message;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst Message = memo(({ type }) => {\n  const messages = {\n    error: {\n      icon: \"sad-tear\",\n      text: \"An error has ocurred\",\n    },\n    loading: {\n      icon: \"hourglass-half\",\n      text: \"Loading...\",\n    },\n    noData: {\n      icon: \"frown\",\n      text: \"No data to show\",\n    },\n    noMovies: {\n      icon: \"frown\",\n      text: \"No movies to show\",\n    },\n    noStats: {\n      icon: \"frown\",\n      text: \"No stats to show\",\n    },\n    pageNotFound: {\n      icon: \"dizzy\",\n      text: \"Page not found\",\n    },\n  };\n  const animation = `animate__${\n    type === \"loading\" ? \"heartBeat\" : \"headShake\"\n  }`;\n  return (\n    <div className=\"lead p-3 text-center\">\n      <div className={`animate__animated ${animation} h3 mb-3`}>\n        <span className=\"bg-secondary p-2 rounded\">\n          <FontAwesomeIcon icon={messages[type].icon} />\n        </span>\n      </div>\n      {messages[type].text}\n    </div>\n  );\n});\n\nMessage.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nimport Message from \"../Message\";\n\nconst LoadingHandler = memo(\n  ({ children, dataStatus, hasData, messageNoData }) => (\n    <>\n      {dataStatus === \"loaded\" && hasData && <>{children}</>}\n      {dataStatus === \"loaded\" && !hasData && <Message type={messageNoData} />}\n      {(dataStatus === \"loading\" || dataStatus === \"error\") && (\n        <Message type={dataStatus} />\n      )}\n    </>\n  )\n);\n\nLoadingHandler.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  dataStatus: PropTypes.string,\n  hasData: PropTypes.bool,\n  messageNoData: PropTypes.string,\n};\n\nLoadingHandler.defaultProps = {\n  dataStatus: \"\",\n  hasData: true,\n  messageNoData: \"noData\",\n};\n\nexport default LoadingHandler;\n","import LoadingHandler from \"./LoadingHandler\";\n\nexport default LoadingHandler;\n","const formatMovieCredits = (movieCredits) => ({\n  ...movieCredits,\n  cast: movieCredits.cast.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n  crew: movieCredits.crew.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n});\n\nexport default formatMovieCredits;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useMemo, useReducer } from \"react\";\n\nimport formatMovieCredits from \"../helpers/formatMovieCredits\";\nimport { fetchMovieCredits } from \"../helpers/tmdbServices\";\n\nconst MovieCreditsContext = React.createContext();\n\nconst initialState = {\n  movieCredits: {\n    cast: [],\n    crew: [],\n    id: \"\",\n  },\n  movieCreditsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieCredits\":\n      return {\n        ...state,\n        movieCredits: action.payload,\n        movieCreditsStatus: \"loaded\",\n      };\n    case \"setMovieCreditsStatus\":\n      return { ...state, movieCreditsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieCreditsStore = ({ children, movieId }) => {\n  const [state, dispatchMovieCredits] = useReducer(reducer, initialState);\n\n  function loadMovieCredits(id) {\n    dispatchMovieCredits({ type: \"setMovieCreditsStatus\", payload: \"loading\" });\n    fetchMovieCredits(id)\n      .then((json) => {\n        dispatchMovieCredits({\n          type: \"setMovieCredits\",\n          payload: formatMovieCredits(json),\n        });\n      })\n      .catch(() => {\n        dispatchMovieCredits({\n          type: \"setMovieCreditsStatus\",\n          payload: \"error\",\n        });\n      });\n  }\n\n  useEffect(() => {\n    loadMovieCredits(movieId);\n  }, [movieId]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieCreditsContext.Provider value={providerValue}>\n      {children}\n    </MovieCreditsContext.Provider>\n  );\n};\n\nMovieCreditsStore.propTypes = {\n  children: PropTypes.node.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n\nexport { MovieCreditsContext as default, MovieCreditsStore };\n","import tmdbApi from \"./tmdbApi\";\n\nconst formatMovieRecommendations = (results) =>\n  results.map((movie) => ({\n    ...movie,\n    poster_url: movie.poster_path\n      ? tmdbApi.img.baseUrl + tmdbApi.img.posterSize + movie.poster_path\n      : null,\n    tmdbURI: `https://www.themoviedb.org/movie/${movie.id}`,\n  }));\n\nexport default formatMovieRecommendations;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useMemo, useReducer } from \"react\";\n\nimport formatMovieRecommendations from \"../helpers/formatMovieRecommendations\";\nimport { fetchMovieRecommendations } from \"../helpers/tmdbServices\";\n\nconst MovieRecommendationsContext = React.createContext();\n\nconst initialState = {\n  movieRecommendations: [],\n  movieRecommendationsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieRecommendations\":\n      return {\n        ...state,\n        movieRecommendations: action.payload,\n        movieRecommendationsStatus: \"loaded\",\n      };\n    case \"setMovieRecommendationsStatus\":\n      return { ...state, movieRecommendationsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieRecommendationsStore = ({ children, movieId }) => {\n  const [state, dispatchMovieRecommendations] = useReducer(\n    reducer,\n    initialState\n  );\n\n  function loadMovieRecommendations(id) {\n    dispatchMovieRecommendations({\n      type: \"setMovieRecommendationsStatus\",\n      payload: \"loading\",\n    });\n    fetchMovieRecommendations(id)\n      .then((json) => {\n        dispatchMovieRecommendations({\n          type: \"setMovieRecommendations\",\n          payload: formatMovieRecommendations(json.results),\n        });\n      })\n      .catch(() => {\n        dispatchMovieRecommendations({\n          type: \"setMovieRecommendationsStatus\",\n          payload: \"error\",\n        });\n      });\n  }\n\n  useEffect(() => {\n    loadMovieRecommendations(movieId);\n  }, [movieId]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieRecommendationsContext.Provider value={providerValue}>\n      {children}\n    </MovieRecommendationsContext.Provider>\n  );\n};\n\nMovieRecommendationsStore.propTypes = {\n  children: PropTypes.node.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n\nexport { MovieRecommendationsContext as default, MovieRecommendationsStore };\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Image = ({ src, title, type }) => {\n  const types = {\n    backdrop: {\n      height: 300,\n      width: 533,\n    },\n    poster: {\n      height: 450,\n      width: 300,\n    },\n  };\n  const dimensions = types[type];\n  const style = {\n    paddingTop: `${(dimensions.height / dimensions.width) * 100}%`,\n  };\n  return (\n    <div className=\"bg-secondary ratio text-white\" style={style}>\n      {src ? (\n        <img alt={`${type} for ${title}`} loading=\"lazy\" src={src} />\n      ) : (\n        <div className=\"p-3 text-center\">{`No ${type} available for ${title}`}</div>\n      )}\n    </div>\n  );\n};\n\nImage.propTypes = {\n  src: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"backdrop\", \"poster\"]).isRequired,\n};\n\nImage.defaultProps = {\n  src: null,\n};\n\nexport default Image;\n","import Image from \"./Image\";\n\nexport default Image;\n","import ScrollableHorizontalList from \"./ScrollableHorizontalList\";\n\nexport default ScrollableHorizontalList;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst ScrollableHorizontalList = ({ children }) => {\n  const verticalListStyle = {\n    overflowX: \"scroll\",\n    WebkitOverflowScrolling: \"touch\",\n  };\n  return (\n    <ul\n      className=\"flex-nowrap g-3 list-unstyled mb-0 pb-3 row\"\n      style={verticalListStyle}\n    >\n      {children}\n    </ul>\n  );\n};\n\nScrollableHorizontalList.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default ScrollableHorizontalList;\n","import MovieInfoCastCrew from \"./MovieInfoCastCrew\";\n\nexport default MovieInfoCastCrew;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\n\nimport movieCreditsContext from \"../../../contexts/movieCreditsContext\";\nimport LoadingHandler from \"../../LoadingHandler\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nconst MovieInfoCastCrew = () => {\n  const { movieCredits, movieCreditsStatus } = useContext(movieCreditsContext);\n  return (\n    <LoadingHandler dataStatus={movieCreditsStatus} hasData={!!movieCredits.id}>\n      <h2 className=\"h4\">\n        Cast\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieCredits.cast.length ? (\n        <ScrollableHorizontalList>\n          {movieCredits.cast.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.character}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n      <h2 className=\"h4\">\n        Crew\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieCredits.crew.length ? (\n        <ScrollableHorizontalList>\n          {movieCredits.crew.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.job}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n    </LoadingHandler>\n  );\n};\n\nexport default MovieInfoCastCrew;\n","import MovieInfoRecommendations from \"./MovieInfoRecommendations\";\n\nexport default MovieInfoRecommendations;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\n\nimport movieRecommendationsContext from \"../../../contexts/movieRecommendationsContext\";\nimport Anchor from \"../../Anchor\";\nimport Image from \"../../Image\";\nimport LoadingHandler from \"../../LoadingHandler\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nconst MovieInfoRecommendations = () => {\n  const { movieRecommendations, movieRecommendationsStatus } = useContext(\n    movieRecommendationsContext\n  );\n  return (\n    <LoadingHandler\n      dataStatus={movieRecommendationsStatus}\n      hasData={!!movieRecommendations.length}\n    >\n      <div className=\"p-3\">\n        <h2 className=\"h4\">\n          Recommendations\n          <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n        </h2>\n        <ScrollableHorizontalList>\n          {movieRecommendations.map((movie) => (\n            <li className=\"col-5 col-md-3 col-lg-2\" key={movie.id}>\n              <Anchor href={movie.tmdbURI} target=\"_blank\">\n                <Image\n                  src={movie.poster_url}\n                  title={movie.title}\n                  type=\"poster\"\n                />\n                {movie.title}\n              </Anchor>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      </div>\n    </LoadingHandler>\n  );\n};\n\nexport default MovieInfoRecommendations;\n","import MovieInfoBody from \"./MovieInfoBody\";\n\nexport default MovieInfoBody;\n","import React, { useContext } from \"react\";\n\nimport { MovieCreditsStore } from \"../../../contexts/movieCreditsContext\";\nimport { MovieRecommendationsStore } from \"../../../contexts/movieRecommendationsContext\";\nimport movieInfoContext from \"../../../contexts/movieInfoContext\";\nimport Image from \"../../Image\";\nimport MovieInfoCastCrew from \"../MovieInfoCastCrew\";\nimport MovieInfoRecommendations from \"../MovieInfoRecommendations\";\n\nconst MovieInfoBody = () => {\n  const { movieInfo } = useContext(movieInfoContext);\n  return (\n    <>\n      <div className=\"p-3\">\n        <div className=\"animate__animated animate__fadeInUp mb-3 row\">\n          <div className=\"col-6 col-lg-4\">\n            <Image\n              src={movieInfo.poster_url}\n              title={movieInfo.title}\n              type=\"poster\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-lg-8 text-end\">\n            <div className=\"lead text-start\">{movieInfo.overview}</div>\n            <div className=\"mb-3\">\n              <span className=\"badge bg-secondary ms-2\">\n                {movieInfo.original_language}\n              </span>\n            </div>\n            <div className=\"mb-3\">\n              <a\n                className=\"btn btn-danger btn-sm\"\n                href={movieInfo.LetterboxdURI}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View movie at Letterboxd\n              </a>\n            </div>\n            <div className=\"mb-3\">\n              <a\n                className=\"btn btn-danger btn-sm\"\n                href={movieInfo.tmdbURI}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View movie at TMDB\n              </a>\n            </div>\n          </div>\n        </div>\n        <MovieCreditsStore movieId={movieInfo.id}>\n          <MovieInfoCastCrew />\n        </MovieCreditsStore>\n      </div>\n      <Image\n        src={movieInfo.backdrop_url}\n        title={movieInfo.title}\n        type=\"backdrop\"\n      />\n      <MovieRecommendationsStore movieId={movieInfo.id}>\n        <MovieInfoRecommendations />\n      </MovieRecommendationsStore>\n    </>\n  );\n};\n\nexport default MovieInfoBody;\n","import MovieInfoHeader from \"./MovieInfoHeader\";\n\nexport default MovieInfoHeader;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\n\nimport movieInfoContext from \"../../../contexts/movieInfoContext\";\n\nconst MovieInfoHeader = () => {\n  const { movieInfo } = useContext(movieInfoContext);\n  return (\n    <div className=\"bg-secondary p-3\">\n      <h1 className=\"h3\">\n        {movieInfo.title}\n        <span className=\"font-italic ms-2 small\">{`(${movieInfo.release_year}${\n          movieInfo.title !== movieInfo.original_title\n            ? `, \"${movieInfo.original_title}\"`\n            : \"\"\n        })`}</span>\n      </h1>\n      <div className=\"small\">\n        {movieInfo.Rating} of 5\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">by me</span>\n      </div>\n      <div className=\"small\">\n        {movieInfo.vote_average} of 10\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">{`by ${movieInfo.vote_count} TMDb users`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfoHeader;\n","import MovieInfo from \"./MovieInfo\";\n\nexport default MovieInfo;\n","import React, { useContext } from \"react\";\n\nimport movieInfoContext from \"../../contexts/movieInfoContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieInfoBody from \"./MovieInfoBody\";\nimport MovieInfoHeader from \"./MovieInfoHeader\";\n\nconst MovieInfo = () => {\n  const { movieInfo, movieInfoStatus } = useContext(movieInfoContext);\n  return (\n    <LoadingHandler dataStatus={movieInfoStatus} hasData={movieInfo.id !== \"\"}>\n      <div className=\"border border-secondary mb-3 rounded\">\n        <MovieInfoHeader />\n        <MovieInfoBody />\n      </div>\n    </LoadingHandler>\n  );\n};\n\nexport default MovieInfo;\n","import PropTypes from \"prop-types\";\nimport React, { useContext } from \"react\";\n\nimport { MovieInfoStore } from \"../contexts/movieInfoContext\";\nimport movieDiaryContext from \"../contexts/movieDiaryContext\";\nimport movieRatingsContext from \"../contexts/movieRatingsContext\";\nimport MovieInfo from \"../components/MovieInfo\";\n\nconst PageMovieInfo = ({ match }) => {\n  const { movieDiary } = useContext(movieDiaryContext);\n  const { movieRatings } = useContext(movieRatingsContext);\n  const { movieId } = match.params;\n  const movie = [...movieDiary, ...movieRatings].find(\n    (obj) => obj.Id === movieId\n  );\n  return (\n    <MovieInfoStore movie={movie}>\n      <MovieInfo />\n    </MovieInfoStore>\n  );\n};\n\nPageMovieInfo.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default PageMovieInfo;\n","import MovieButton from \"./MovieButton\";\n\nexport default MovieButton;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieButton = memo(({ movie, type }) => {\n  let dateText;\n  if (type === \"Diary\" && movie.WatchedDateFormatted) {\n    dateText = `watched in ${movie.WatchedDateFormatted}`;\n  } else if (type === \"Ratings\" && movie.DateFormatted) {\n    dateText = `rated in ${movie.DateFormatted}`;\n  }\n  return (\n    <Link className=\"btn btn-secondary d-block\" to={`/movie/${movie.Id}`}>\n      <div className=\"text-start text-truncate\">\n        {movie.Name}\n        <span className=\"ms-1 small\">({movie.Year})</span>\n      </div>\n      <div className=\"align-items-end row small\">\n        <div className=\"col text-start text-warning\">\n          {Array.from(Array(movie.Rating)).map((item, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <FontAwesomeIcon key={i} className=\"me-1\" icon=\"star\" />\n          ))}\n        </div>\n        <div className=\"col small text-end\">{dateText}</div>\n      </div>\n    </Link>\n  );\n});\n\nMovieButton.propTypes = {\n  movie: PropTypes.shape({\n    Id: PropTypes.string.isRequired,\n    Date: PropTypes.string.isRequired,\n    DateFormatted: PropTypes.string.isRequired,\n    LetterboxdURI: PropTypes.string.isRequired,\n    Name: PropTypes.string.isRequired,\n    Rating: PropTypes.number.isRequired,\n    WatchedDate: PropTypes.string,\n    WatchedDateFormatted: PropTypes.string,\n    Year: PropTypes.number.isRequired,\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default MovieButton;\n","import PropTypes from \"prop-types\";\nimport React, { memo, useContext, useEffect, useReducer } from \"react\";\n\nimport movieDiaryContext from \"../../contexts/movieDiaryContext\";\nimport movieRatingsContext from \"../../contexts/movieRatingsContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieButton from \"../MovieButton\";\n\nconst initialState = {\n  dispatchMovie: null,\n  dispatchMovieType: \"\",\n  moviesFiltered: [],\n  moviesPaginated: [],\n  moviesStatus: null,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setAll\":\n      return { ...state, ...action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieList = memo(({ type }) => {\n  const [state, dispatchMovieList] = useReducer(reducer, initialState);\n  const {\n    dispatchMovieDiary,\n    movieDiaryFiltered,\n    movieDiaryPage,\n    movieDiaryPaginated,\n    movieDiarySearchString,\n    movieDiaryStatus,\n  } = useContext(movieDiaryContext);\n  const {\n    dispatchMovieRatings,\n    movieRatingsFiltered,\n    movieRatingsPage,\n    movieRatingsPaginated,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n  } = useContext(movieRatingsContext);\n\n  useEffect(() => {\n    let payload;\n    if (type === \"Diary\") {\n      payload = {\n        dispatchMovie: dispatchMovieDiary,\n        dispatchMovieType: \"setMovieDiaryPage\",\n        moviesFiltered: movieDiaryFiltered,\n        moviesPaginated: movieDiaryPaginated,\n        moviesStatus: movieDiaryStatus,\n      };\n    } else if (type === \"Ratings\") {\n      payload = {\n        dispatchMovie: dispatchMovieRatings,\n        dispatchMovieType: \"setMovieRatingsPage\",\n        moviesFiltered: movieRatingsFiltered,\n        moviesPaginated: movieRatingsPaginated,\n        moviesStatus: movieRatingsStatus,\n      };\n    }\n    dispatchMovieList({ type: \"setAll\", payload });\n  }, [\n    dispatchMovieDiary,\n    dispatchMovieRatings,\n    movieDiaryFiltered,\n    movieDiaryPage,\n    movieDiaryPaginated,\n    movieDiarySearchString,\n    movieDiaryStatus,\n    movieRatingsFiltered,\n    movieRatingsPage,\n    movieRatingsPaginated,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n    type,\n  ]);\n\n  return (\n    <LoadingHandler\n      dataStatus={state.moviesStatus}\n      hasData={!!state.moviesFiltered.length}\n      messageNoData=\"noMovies\"\n    >\n      <>\n        <ul className=\"list-unstyled\">\n          {state.moviesPaginated.map((movie) => (\n            <li className=\"mb-3\" key={movie.Id}>\n              <MovieButton movie={movie} type={type} />\n            </li>\n          ))}\n        </ul>\n        {state.moviesPaginated.length < state.moviesFiltered.length && (\n          <div className=\"mb-3 text-center\">\n            <button\n              className=\"btn btn-danger\"\n              type=\"button\"\n              onClick={() =>\n                state.dispatchMovie({ type: state.dispatchMovieType })\n              }\n            >\n              Show more\n            </button>\n          </div>\n        )}\n      </>\n    </LoadingHandler>\n  );\n});\n\nMovieList.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","import MovieList from \"./MovieList\";\n\nexport default MovieList;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { useContext, useEffect, useReducer } from \"react\";\n\nimport movieDiaryContext from \"../../contexts/movieDiaryContext\";\nimport movieRatingsContext from \"../../contexts/movieRatingsContext\";\n\nconst initialState = {\n  dispatchMovie: null,\n  dispatchMovieType: \"\",\n  movieSearchString: \"\",\n  moviesFiltered: [],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setAll\":\n      return { ...state, ...action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieNameSearch = ({ type }) => {\n  const [state, dispatchMovieNameSearch] = useReducer(reducer, initialState);\n  const {\n    dispatchMovieDiary,\n    movieDiaryFiltered,\n    movieDiarySearchString,\n    movieDiaryStatus,\n  } = useContext(movieDiaryContext);\n  const {\n    dispatchMovieRatings,\n    movieRatingsFiltered,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n  } = useContext(movieRatingsContext);\n\n  useEffect(() => {\n    let payload;\n    if (type === \"Diary\") {\n      payload = {\n        dispatchMovie: dispatchMovieDiary,\n        dispatchMovieType: \"setMovieDiarySearchString\",\n        movieSearchString: movieDiarySearchString,\n        moviesFiltered: movieDiaryFiltered,\n      };\n    } else if (type === \"Ratings\") {\n      payload = {\n        dispatchMovie: dispatchMovieRatings,\n        dispatchMovieType: \"setMovieRatingsSearchString\",\n        movieSearchString: movieRatingsSearchString,\n        moviesFiltered: movieRatingsFiltered,\n      };\n    }\n    dispatchMovieNameSearch({ type: \"setAll\", payload });\n  }, [\n    dispatchMovieDiary,\n    dispatchMovieRatings,\n    movieDiaryFiltered,\n    movieDiarySearchString,\n    movieDiaryStatus,\n    movieRatingsFiltered,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n    type,\n  ]);\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"input-group mb-1\">\n        <input\n          id=\"search-movie\"\n          className=\"form-control\"\n          placeholder=\"Search...\"\n          type=\"text\"\n          value={state.movieSearchString}\n          onChange={(event) =>\n            state.dispatchMovie({\n              type: state.dispatchMovieType,\n              payload: event.target.value,\n            })\n          }\n        />\n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={() =>\n            state.dispatchMovie({ type: state.dispatchMovieType, payload: \"\" })\n          }\n        >\n          <FontAwesomeIcon icon=\"times\" />\n        </button>\n      </div>\n      <p className=\"small text-end\">{state.moviesFiltered.length} movies</p>\n    </div>\n  );\n};\n\nMovieNameSearch.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default MovieNameSearch;\n","import MovieNameSearch from \"./MovieNameSearch\";\n\nexport default MovieNameSearch;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport MovieList from \"../components/MovieList\";\nimport MovieNameSearch from \"../components/MovieNameSearch\";\n\nconst PageMovies = ({ type }) => (\n  <>\n    <h1 className=\"h4\">{type}</h1>\n    <div className=\"row\">\n      <div className=\"col-12 col-sm-4\">\n        <MovieNameSearch type={type} />\n      </div>\n      <div className=\"col-12 col-sm-8\">\n        <MovieList type={type} />\n      </div>\n    </div>\n  </>\n);\n\nPageMovies.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default PageMovies;\n","import React from \"react\";\n\nimport Message from \"../components/Message\";\n\nconst PageNotFound = () => <Message type=\"pageNotFound\" />;\n\nexport default PageNotFound;\n","import PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nconst ProgressBar = memo(({ width }) => (\n  <div className=\"bg-secondary overflow-hidden rounded\">\n    <div\n      className=\"animate__animated animate__slideInLeft bg-danger pb-2 rounded\"\n      style={{ width: `${width}%` }}\n    />\n  </div>\n));\n\nProgressBar.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default ProgressBar;\n","import ProgressBar from \"./ProgressBar\";\n\nexport default ProgressBar;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nimport LoadingHandler from \"../LoadingHandler\";\nimport ProgressBar from \"../ProgressBar\";\n\nconst title = {\n  moviesPerDecadeReleased: \"Per decade released\",\n  moviesPerRatingGiven: \"Per rating given\",\n  moviesPerYearWatched: \"Per year watched\",\n};\n\nconst MovieStats = memo(({ movies, moviesStatus, type }) => (\n  <div className=\"border border-secondary p-3 rounded\">\n    <h1 className=\"h5\">{title[type]}</h1>\n    <LoadingHandler\n      dataStatus={moviesStatus}\n      hasData={!!movies.groups}\n      messageNoData=\"noStats\"\n    >\n      <ul className=\"list-unstyled\">\n        {Object.entries(movies.groups)\n          .reverse()\n          .map(([key, value]) => {\n            const text = () => {\n              if (type === \"moviesPerRatingGiven\") {\n                const stars = [];\n                for (let i = 0; i < key; i += 1) {\n                  stars.push(\n                    <FontAwesomeIcon\n                      key={i}\n                      className=\"me-1 text-warning\"\n                      icon=\"star\"\n                    />\n                  );\n                }\n                return stars;\n              }\n              return key;\n            };\n            const width = (value * 100) / movies.max;\n            return (\n              <li className=\"mb-2\" key={key}>\n                <div className=\"g-0 row\">\n                  <div className=\"col\">{text()}</div>\n                  <div className=\"col-auto fw-bold\">{value}</div>\n                </div>\n                <ProgressBar width={width} />\n              </li>\n            );\n          })}\n      </ul>\n    </LoadingHandler>\n  </div>\n));\n\nMovieStats.propTypes = {\n  movies: PropTypes.shape({\n    groups: PropTypes.shape({\n      decade: PropTypes.string,\n      rating: PropTypes.string,\n      year: PropTypes.string,\n    }).isRequired,\n    max: PropTypes.number.isRequired,\n  }).isRequired,\n  moviesStatus: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default MovieStats;\n","import MovieStats from \"./MovieStats\";\n\nexport default MovieStats;\n","import React, { useContext } from \"react\";\n\nimport MovieStats from \"../components/MovieStats\";\nimport movieDiaryContext from \"../contexts/movieDiaryContext\";\nimport movieRatingsContext from \"../contexts/movieRatingsContext\";\n\nconst PageStats = () => {\n  const { moviesPerYearWatched, movieDiaryStatus } =\n    useContext(movieDiaryContext);\n  const { moviesPerDecadeReleased, moviesPerRatingGiven, movieRatingsStatus } =\n    useContext(movieRatingsContext);\n  return (\n    <>\n      <h1 className=\"h4\">Stats</h1>\n      <div className=\"row\">\n        <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n          <MovieStats\n            movies={moviesPerYearWatched}\n            moviesStatus={movieDiaryStatus}\n            type=\"moviesPerYearWatched\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n          <MovieStats\n            movies={moviesPerRatingGiven}\n            moviesStatus={movieRatingsStatus}\n            type=\"moviesPerRatingGiven\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n          <MovieStats\n            movies={moviesPerDecadeReleased}\n            moviesStatus={movieRatingsStatus}\n            type=\"moviesPerDecadeReleased\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PageStats;\n","import SiteInfo from \"./SiteInfo\";\n\nexport default SiteInfo;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { memo } from \"react\";\n\nimport Anchor from \"../Anchor\";\nimport tmdbApi from \"../../helpers/tmdbApi\";\n\nconst SiteInfo = memo(() => (\n  <div className=\"border-secondary border-top pt-3 small text-center\">\n    <div className=\"mb-3\">\n      <img\n        alt=\"Letterboxd\"\n        src=\"https://a.ltrbxd.com/logos/letterboxd-logo-v-neg-rgb-1000px.png\"\n        height=\"48\"\n      />\n      <br />\n      My Ratings and Diary data are exported from Letterboxd from time to time.\n      <br />\n      My\n      <Anchor\n        href=\"https://letterboxd.com/saviomd\"\n        margin=\"both\"\n        target=\"_blank\"\n      >\n        profile\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </Anchor>\n      will have more up to date information.\n    </div>\n    <div className=\"mb-3\">\n      <img alt=\"TMDb\" src={tmdbApi.img.attributionUrl} height=\"48\" />\n      <br />\n      This product uses the TMDb API but is not endorsed or certified by TMDb.\n    </div>\n  </div>\n));\n\nexport default SiteInfo;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCalendarAlt,\n  faChartBar,\n  faDizzy,\n  faExternalLinkAlt,\n  faFrown,\n  faHourglassHalf,\n  faSadTear,\n  faStar,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { MovieDiaryStore } from \"./contexts/movieDiaryContext\";\nimport { MovieRatingsStore } from \"./contexts/movieRatingsContext\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport PageMovieInfo from \"./pages/PageMovieInfo\";\nimport PageMovies from \"./pages/PageMovies\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport PageStats from \"./pages/PageStats\";\nimport SiteInfo from \"./components/SiteInfo\";\n\nimport \"../node_modules/animate.css/animate.min.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nlibrary.add(\n  faCalendarAlt,\n  faChartBar,\n  faDizzy,\n  faExternalLinkAlt,\n  faFrown,\n  faHourglassHalf,\n  faSadTear,\n  faStar,\n  faTimes\n);\n\nconst initialState = {\n  navLinks: [\n    {\n      icon: \"star\",\n      name: \"Ratings\",\n      path: \"/\",\n    },\n    {\n      icon: \"calendar-alt\",\n      name: \"Diary\",\n      path: \"/diary\",\n    },\n    {\n      icon: \"chart-bar\",\n      name: \"Stats\",\n      path: \"/stats\",\n    },\n  ],\n};\n\nconst App = () => {\n  const [state] = useState(initialState);\n\n  return (\n    <Router>\n      <MovieDiaryStore>\n        <MovieRatingsStore>\n          <div className=\"container-fluid\">\n            <div className=\"justify-content-center row\">\n              <div className=\"col-12 col-md-10\">\n                <Header navLinks={state.navLinks} />\n                <Switch>\n                  <Route\n                    path=\"/\"\n                    exact\n                    render={() => <PageMovies type=\"Ratings\" />}\n                  />\n                  <Route\n                    path=\"/diary\"\n                    render={() => <PageMovies type=\"Diary\" />}\n                  />\n                  <Route\n                    path=\"/movie/:movieId\"\n                    render={({ match }) => <PageMovieInfo match={match} />}\n                  />\n                  <Route path=\"/stats\" component={PageStats} />\n                  <Route component={PageNotFound} />\n                </Switch>\n                <SiteInfo />\n                <Footer />\n              </div>\n            </div>\n          </div>\n        </MovieRatingsStore>\n      </MovieDiaryStore>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}