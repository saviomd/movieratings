{"version":3,"file":"static/js/487.87c21c74.chunk.js","mappings":"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","sources":["components/ScrollableHorizontalList/ScrollableHorizontalList.jsx","components/ScrollableHorizontalList/index.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/fetchTmdb.js","helpers/tmdbServices.js","helpers/formatCurrency.js","helpers/formatMovieCredits.js","helpers/formatMovieRecommendations.js","helpers/formatMovieDetails.js","hooks/useMovieDetailsStore.jsx","contexts/MovieDetailsContext.jsx","components/Image/Image.jsx","components/Image/index.js","components/MovieDetails/MovieDetailsCastCrew/MovieDetailsCastCrew.jsx","components/MovieDetails/MovieDetailsCastCrew/index.js","components/MovieDetails/MovieDetailsRecommendations/MovieDetailsRecommendations.jsx","components/MovieDetails/MovieDetailsRecommendations/index.js","components/MovieDetails/MovieDetailsStats/MovieDetailsStats.jsx","components/MovieDetails/MovieDetailsStats/index.js","components/MovieDetails/MovieDetailsBody/MovieDetailsBody.jsx","components/MovieDetails/MovieDetailsBody/index.js","components/MovieDetails/MovieDetailsHeader/MovieDetailsHeader.jsx","components/MovieDetails/MovieDetailsHeader/index.js","components/MovieDetails/MovieDetails.jsx","components/MovieDetails/index.js","pages/PageMovieDetails.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction ScrollableHorizontalList({ children }) {\n  const verticalListStyle = {\n    overflowX: \"scroll\",\n    WebkitOverflowScrolling: \"touch\",\n  };\n  return (\n    <ul className=\"flex-nowrap g-3 list-unstyled row\" style={verticalListStyle}>\n      {children}\n    </ul>\n  );\n}\n\nScrollableHorizontalList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScrollableHorizontalList;\n","import ScrollableHorizontalList from \"./ScrollableHorizontalList\";\n\nexport default ScrollableHorizontalList;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import tmdbApi from \"./tmdbApi\";\n\nconst fetchTmdb = ({ path, queryString = \"\" }) => {\n  const { url, key } = tmdbApi;\n  return fetch(`${url}${path}?api_key=${key}${queryString}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport default fetchTmdb;\n","import fetchTmdb from \"./fetchTmdb\";\nimport tmdbApi from \"./tmdbApi\";\n\nconst { movieDetails, searchMovies } = tmdbApi.methods;\n\nexport const getMovieDetails = ({ movieId }) =>\n  fetchTmdb({\n    path: movieDetails({ movieId }),\n    queryString: \"&append_to_response=credits,recommendations\",\n  });\n\nexport const getSearchMovies = ({ Name, Year }) =>\n  fetchTmdb({\n    path: searchMovies(),\n    queryString: `&query=${Name}&year=${Year}`,\n  });\n","const formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nconst formatCurrency = ({ value }) =>\n  value ? `US${formatter.format(value)}` : \"--\";\n\nexport default formatCurrency;\n","const formatMovieCredits = ({ credits }) => ({\n  ...credits,\n  cast: credits?.cast.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n  crew: credits?.crew.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n});\n\nexport default formatMovieCredits;\n","import tmdbApi from \"./tmdbApi\";\n\nconst { poster } = tmdbApi.img;\n\nconst formatMovieRecommendations = ({ movies }) =>\n  movies.map((movie) => ({\n    ...movie,\n    poster_url: poster({ path: movie.poster_path }),\n    tmdbURI: `https://www.themoviedb.org/movie/${movie.id}`,\n  }));\n\nexport default formatMovieRecommendations;\n","import formatCurrency from \"./formatCurrency\";\nimport formatDate from \"./formatDate\";\nimport formatMovieCredits from \"./formatMovieCredits\";\nimport formatMovieRecommendations from \"./formatMovieRecommendations\";\nimport tmdbApi from \"./tmdbApi\";\n\nconst { backdrop, poster } = tmdbApi.img;\n\nconst formatMovieDetails = ({ movie, movieDetails }) => ({\n  ...movieDetails,\n  backdrop_url: backdrop({ path: movieDetails.backdrop_path }),\n  budget: formatCurrency({ value: movieDetails.budget }),\n  credits: formatMovieCredits({ credits: movieDetails.credits }),\n  LetterboxdURI: movie.LetterboxdURI,\n  original_language: movieDetails.original_language.toUpperCase(),\n  poster_url: poster({ path: movieDetails.poster_path }),\n  Rating: movie.Rating,\n  recommendations: formatMovieRecommendations({\n    movies: movieDetails.recommendations.results,\n  }),\n  release_date: formatDate({ date: movieDetails.release_date }),\n  release_year: movieDetails.release_date.split(\"-\")[0],\n  revenue: formatCurrency({ value: movieDetails.revenue }),\n  tmdbURI: `https://www.themoviedb.org/movie/${movieDetails.id}`,\n});\n\nexport default formatMovieDetails;\n","import { useMemo, useReducer } from \"react\";\n\nimport formatMovieDetails from \"../helpers/formatMovieDetails\";\n\nconst initialState = {\n  movieDetails: {},\n  movieDetailsStatus: \"\",\n};\n\nfunction reducer(state, { payload, type }) {\n  switch (type) {\n    case \"SET_MOVIE_DETAILS\": {\n      const { movie, movieDetails } = payload;\n      return {\n        ...state,\n        movieDetails: formatMovieDetails({ movie, movieDetails }),\n        movieDetailsStatus: \"loaded\",\n      };\n    }\n    case \"SET_MOVIE_DETAILS_STATUS\":\n      return { ...state, movieDetailsStatus: payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst useMovieDetailsStore = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const boundActions = useMemo(\n    () => ({\n      setMovieDetails: (payload) =>\n        dispatch({ type: \"SET_MOVIE_DETAILS\", payload }),\n      setMovieDetailsStatus: (payload) =>\n        dispatch({ type: \"SET_MOVIE_DETAILS_STATUS\", payload }),\n    }),\n    []\n  );\n\n  return { boundActions, state };\n};\n\nexport default useMovieDetailsStore;\n","import PropTypes from \"prop-types\";\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n} from \"react\";\n\nimport { getMovieDetails, getSearchMovies } from \"../helpers/tmdbServices\";\nimport useMovieDetailsStore from \"../hooks/useMovieDetailsStore\";\n\nconst MovieDetailsContext = createContext();\nconst useMovieDetailsContext = () => useContext(MovieDetailsContext);\n\nfunction MovieDetailsProvider({ children, movie }) {\n  const { boundActions, state } = useMovieDetailsStore();\n\n  const loadMovieDetails = useCallback(() => {\n    if (movie !== undefined) {\n      const { Name, Year } = movie;\n      boundActions.setMovieDetailsStatus(\"loading\");\n      getSearchMovies({ Name, Year })\n        .then((json) => {\n          if (json.results.length) {\n            const newMovie = json.results.find(\n              (obj) => obj.title === Name && obj.release_date.indexOf(Year) > -1\n            );\n            if (newMovie !== undefined) {\n              getMovieDetails({ movieId: newMovie.id }).then((movieDetails) => {\n                boundActions.setMovieDetails({ movie, movieDetails });\n              });\n            } else {\n              throw Error(\"No movie found\");\n            }\n          } else {\n            throw Error(\"No movie found\");\n          }\n        })\n        .catch(() => {\n          boundActions.setMovieDetailsStatus(\"error\");\n        });\n    } else {\n      boundActions.setMovieDetailsStatus(\"error\");\n    }\n  }, [boundActions, movie]);\n\n  useEffect(() => {\n    loadMovieDetails();\n  }, [loadMovieDetails]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieDetailsContext.Provider value={providerValue}>\n      {children}\n    </MovieDetailsContext.Provider>\n  );\n}\n\nMovieDetailsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  movie: PropTypes.shape({\n    Name: PropTypes.string.isRequired,\n    Year: PropTypes.number.isRequired,\n  }),\n};\n\nMovieDetailsProvider.defaultProps = {\n  movie: undefined,\n};\n\nexport { MovieDetailsProvider, useMovieDetailsContext };\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction Image({ src, title, type }) {\n  const types = {\n    backdrop: {\n      height: 300,\n      width: 533,\n    },\n    poster: {\n      height: 450,\n      width: 300,\n    },\n  };\n  const dimensions = types[type];\n  const style = {\n    paddingTop: `${(dimensions.height / dimensions.width) * 100}%`,\n  };\n  return (\n    <div className=\"bg-secondary ratio text-white\" style={style}>\n      {src ? (\n        <img alt={`${type} for ${title}`} loading=\"lazy\" src={src} />\n      ) : (\n        <div className=\"p-3 text-center\">{`No ${type} available for ${title}`}</div>\n      )}\n    </div>\n  );\n}\n\nImage.propTypes = {\n  src: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"backdrop\", \"poster\"]).isRequired,\n};\n\nImage.defaultProps = {\n  src: null,\n};\n\nexport default Image;\n","import Image from \"./Image\";\n\nexport default Image;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nfunction MovieDetailsCastCrew() {\n  const { movieDetails } = useMovieDetailsContext();\n  if (!movieDetails.credits) {\n    return null;\n  }\n  return (\n    <>\n      <h2 className=\"h4\">\n        Cast\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieDetails.credits.cast.length ? (\n        <ScrollableHorizontalList>\n          {movieDetails.credits.cast.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.character}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n      <h2 className=\"h4\">\n        Crew\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieDetails.credits.crew.length ? (\n        <ScrollableHorizontalList>\n          {movieDetails.credits.crew.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.job}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetailsCastCrew;\n","import MovieDetailsCastCrew from \"./MovieDetailsCastCrew\";\n\nexport default MovieDetailsCastCrew;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\nimport Anchor from \"../../Anchor\";\nimport Image from \"../../Image\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nfunction MovieDetailsRecommendations() {\n  const { movieDetails } = useMovieDetailsContext();\n  if (!movieDetails.recommendations.length) {\n    return null;\n  }\n  return (\n    <div className=\"p-3\">\n      <h2 className=\"h4\">\n        Recommendations\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      <ScrollableHorizontalList>\n        {movieDetails.recommendations.map((movie) => (\n          <li className=\"col-5 col-md-3 col-lg-2\" key={movie.id}>\n            <Anchor href={movie.tmdbURI} target=\"_blank\">\n              <Image src={movie.poster_url} title={movie.title} type=\"poster\" />\n              {movie.title}\n            </Anchor>\n          </li>\n        ))}\n      </ScrollableHorizontalList>\n    </div>\n  );\n}\n\nexport default MovieDetailsRecommendations;\n","import MovieDetailsRecommendations from \"./MovieDetailsRecommendations\";\n\nexport default MovieDetailsRecommendations;\n","import React from \"react\";\n\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\n\nfunction MovieDetailsStats() {\n  /* eslint-disable camelcase */\n  const {\n    movieDetails: {\n      runtime,\n      release_date,\n      genres,\n      budget,\n      revenue,\n      production_companies,\n      production_countries,\n      spoken_languages,\n    },\n  } = useMovieDetailsContext();\n  const stats = [\n    { title: \"Runtime\", value: `${runtime} minutes` },\n    { title: \"Release date\", value: release_date },\n    { title: \"Genres\", value: genres.map(({ name }) => name) },\n    { title: \"Budget\", value: budget },\n    { title: \"Revenue\", value: revenue },\n    {\n      title: \"Production companies\",\n      value: production_companies.map(({ name }) => name),\n    },\n    {\n      title: \"Production countries\",\n      value: production_countries.map(({ name }) => name),\n    },\n    {\n      title: \"Spoken languages\",\n      value: spoken_languages.map(({ english_name }) => english_name),\n    },\n  ];\n  /* eslint-enable camelcase */\n  return (\n    <ScrollableHorizontalList>\n      {stats.map(({ title, value }) => (\n        <li className=\"col-auto\" key={title}>\n          <div>{title}</div>\n          {Array.isArray(value) ? (\n            <ul className=\"fw-bold list-unstyled mb-0\">\n              {value.map((item) => (\n                <li key={item}>\n                  <span className=\"badge bg-secondary\">{item}</span>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"fw-bold\">{value}</div>\n          )}\n        </li>\n      ))}\n    </ScrollableHorizontalList>\n  );\n}\n\nexport default MovieDetailsStats;\n","import MovieDetailsStats from \"./MovieDetailsStats\";\n\nexport default MovieDetailsStats;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\nimport Image from \"../../Image\";\nimport MovieDetailsCastCrew from \"../MovieDetailsCastCrew\";\nimport MovieDetailsRecommendations from \"../MovieDetailsRecommendations\";\nimport MovieDetailsStats from \"../MovieDetailsStats\";\n\nfunction MovieDetailsBody() {\n  const { movieDetails } = useMovieDetailsContext();\n  const links = [\n    { href: \"LetterboxdURI\", name: \"Letterboxd\" },\n    { href: \"tmdbURI\", name: \"TMDb\" },\n  ];\n  return (\n    <>\n      <div className=\"p-3\">\n        <div className=\"animate__animated animate__fadeInUp mb-3 row\">\n          <div className=\"col-6 col-lg-4\">\n            <Image\n              src={movieDetails.poster_url}\n              title={movieDetails.title}\n              type=\"poster\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-lg-8 lead\">\n            {movieDetails.overview}\n          </div>\n        </div>\n        <MovieDetailsStats />\n        <MovieDetailsCastCrew />\n        {movieDetails.tagline && (\n          <blockquote className=\"blockquote px-5 text-center\">{`\"${movieDetails.tagline}\"`}</blockquote>\n        )}\n      </div>\n      <Image\n        src={movieDetails.backdrop_url}\n        title={movieDetails.title}\n        type=\"backdrop\"\n      />\n      <div className=\"p-3 text-end\">\n        <div>\n          View movie at\n          <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n        </div>\n        <ul className=\"list-inline\">\n          {links.map(({ href, name }) => (\n            <li className=\"list-inline-item\" key={name}>\n              <a\n                className=\"btn btn-danger btn-sm\"\n                href={movieDetails[href]}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <MovieDetailsRecommendations />\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import MovieDetailsBody from \"./MovieDetailsBody\";\n\nexport default MovieDetailsBody;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\n\nfunction MovieDetailsHeader() {\n  const { movieDetails } = useMovieDetailsContext();\n  return (\n    <div className=\"bg-secondary p-3\">\n      <h1 className=\"h3\">\n        {movieDetails.title}\n        <span className=\"font-italic ms-2 small\">\n          {`(${movieDetails.release_year}`}\n          {movieDetails.title !== movieDetails.original_title &&\n            `, \"${movieDetails.original_title}\"`}\n          )\n        </span>\n      </h1>\n      <div className=\"small\">\n        {movieDetails.Rating} of 5\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">by me</span>\n      </div>\n      <div className=\"small\">\n        {movieDetails.vote_average} of 10\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">{`by ${movieDetails.vote_count} TMDb users`}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetailsHeader;\n","import MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nexport default MovieDetailsHeader;\n","import React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../contexts/MovieDetailsContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieDetailsBody from \"./MovieDetailsBody\";\nimport MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nfunction MovieDetails() {\n  const { movieDetails, movieDetailsStatus } = useMovieDetailsContext();\n  return (\n    <LoadingHandler\n      dataStatus={movieDetailsStatus}\n      hasData={movieDetails.id !== \"\"}\n    >\n      <div className=\"border border-secondary mb-3 rounded\">\n        <MovieDetailsHeader />\n        <MovieDetailsBody />\n      </div>\n    </LoadingHandler>\n  );\n}\n\nexport default MovieDetails;\n","import MovieDetails from \"./MovieDetails\";\n\nexport default MovieDetails;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { MovieDetailsProvider } from \"../contexts/MovieDetailsContext\";\nimport { useMovieDiaryContext } from \"../contexts/MovieDiaryContext\";\nimport { useMovieRatingsContext } from \"../contexts/MovieRatingsContext\";\nimport MovieDetails from \"../components/MovieDetails\";\n\nfunction PageMovieDetails() {\n  const { movieDiary } = useMovieDiaryContext();\n  const { movieRatings } = useMovieRatingsContext();\n  const { movieId } = useParams();\n  const movie = [...movieDiary, ...movieRatings].find(\n    (obj) => obj.Id === movieId\n  );\n  return (\n    <MovieDetailsProvider movie={movie}>\n      <MovieDetails />\n    </MovieDetailsProvider>\n  );\n}\n\nexport default PageMovieDetails;\n"],"names":["children","className","style","overflowX","WebkitOverflowScrolling","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","path","queryString","url","tmdbApi","key","fetch","then","response","ok","Error","status","json","movieDetails","searchMovies","formatter","Intl","NumberFormat","currency","value","format","credits","cast","map","person","tmdbURI","id","crew","poster","movies","movie","poster_url","poster_path","backdrop","backdrop_url","backdrop_path","budget","formatCurrency","formatMovieCredits","LetterboxdURI","original_language","toUpperCase","Rating","recommendations","formatMovieRecommendations","results","release_date","formatDate","date","release_year","split","revenue","initialState","movieDetailsStatus","reducer","state","payload","type","formatMovieDetails","useReducer","dispatch","boundActions","useMemo","setMovieDetails","setMovieDetailsStatus","MovieDetailsContext","createContext","useMovieDetailsContext","useContext","MovieDetailsProvider","useMovieDetailsStore","loadMovieDetails","useCallback","undefined","Name","Year","fetchTmdb","getSearchMovies","length","newMovie","find","obj","title","indexOf","movieId","getMovieDetails","catch","useEffect","providerValue","Provider","defaultProps","Image","src","dimensions","height","width","paddingTop","alt","loading","icon","ScrollableHorizontalList","href","rel","target","name","character","credit_id","job","Anchor","runtime","genres","production_companies","production_countries","spoken_languages","stats","english_name","item","overview","tagline","original_title","vote_average","vote_count","LoadingHandler","dataStatus","hasData","movieDiary","useMovieDiaryContext","movieRatings","useMovieRatingsContext","useParams","Id"],"sourceRoot":""}