{"version":3,"sources":["components/MovieButton/index.js","components/MovieButton/MovieButton.jsx","components/MovieList/MovieList.jsx","components/MovieList/index.js","components/MovieNameSearch/MovieNameSearch.jsx","components/MovieNameSearch/index.js","pages/PageMovies.jsx"],"names":["MovieButton","memo","dateText","movie","type","WatchedDateFormatted","DateFormatted","className","to","Id","Name","Year","Array","from","Rating","map","item","i","icon","initialState","dispatcher","dispatcherName","moviesFiltered","moviesPaginated","moviesStatus","reducer","state","action","payload","Error","MovieList","useReducer","dispatch","useMovieDiaryContext","dispatcherMovieDiary","movieDiaryFiltered","movieDiaryPage","movieDiaryPaginated","movieDiarySearchString","movieDiaryStatus","useMovieRatingsContext","dispatcherMovieRatings","movieRatingsFiltered","movieRatingsPage","movieRatingsPaginated","movieRatingsSearchString","movieRatingsStatus","useEffect","LoadingHandler","dataStatus","hasData","length","messageNoData","onClick","movieSearchString","MovieNameSearch","id","placeholder","value","onChange","event","target","PageMovies"],"mappings":"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","file":"static/js/5.fa33e2d8.chunk.js","sourcesContent":["import MovieButton from \"./MovieButton\";\n\nexport default MovieButton;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst types = [\"Diary\", \"Ratings\"];\n\nconst MovieButton = memo(({ movie, type }) => {\n  let dateText;\n  if (type === \"Diary\" && movie.WatchedDateFormatted) {\n    dateText = `watched in ${movie.WatchedDateFormatted}`;\n  } else if (type === \"Ratings\" && movie.DateFormatted) {\n    dateText = `rated in ${movie.DateFormatted}`;\n  }\n  return (\n    <Link className=\"btn btn-secondary d-block\" to={`/movie/${movie.Id}`}>\n      <div className=\"text-start text-truncate\">\n        {movie.Name}\n        <span className=\"ms-1 small\">({movie.Year})</span>\n      </div>\n      <div className=\"align-items-end row small\">\n        <div className=\"col text-start text-warning\">\n          {Array.from(Array(movie.Rating)).map((item, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <FontAwesomeIcon key={i} className=\"me-1\" icon=\"star\" />\n          ))}\n        </div>\n        <div className=\"col small text-end\">{dateText}</div>\n      </div>\n    </Link>\n  );\n});\n\nMovieButton.propTypes = {\n  movie: PropTypes.shape({\n    Id: PropTypes.string.isRequired,\n    Date: PropTypes.string.isRequired,\n    DateFormatted: PropTypes.string.isRequired,\n    LetterboxdURI: PropTypes.string.isRequired,\n    Name: PropTypes.string.isRequired,\n    Rating: PropTypes.number.isRequired,\n    WatchedDate: PropTypes.string,\n    WatchedDateFormatted: PropTypes.string,\n    Year: PropTypes.number.isRequired,\n  }).isRequired,\n  type: PropTypes.oneOf(types).isRequired,\n};\n\nexport default MovieButton;\nexport { types };\n","import PropTypes from \"prop-types\";\nimport React, { memo, useEffect, useReducer } from \"react\";\n\nimport { useMovieDiaryContext } from \"../../contexts/MovieDiaryContext\";\nimport { useMovieRatingsContext } from \"../../contexts/MovieRatingsContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieButton from \"../MovieButton\";\n\nconst initialState = {\n  dispatcher: null,\n  dispatcherName: \"\",\n  moviesFiltered: [],\n  moviesPaginated: [],\n  moviesStatus: null,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setAll\":\n      return { ...state, ...action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieList = memo(({ type }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    dispatcher: dispatcherMovieDiary,\n    movieDiaryFiltered,\n    movieDiaryPage,\n    movieDiaryPaginated,\n    movieDiarySearchString,\n    movieDiaryStatus,\n  } = useMovieDiaryContext();\n  const {\n    dispatcher: dispatcherMovieRatings,\n    movieRatingsFiltered,\n    movieRatingsPage,\n    movieRatingsPaginated,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n  } = useMovieRatingsContext();\n\n  useEffect(() => {\n    let payload;\n    if (type === \"Diary\") {\n      payload = {\n        dispatcher: dispatcherMovieDiary,\n        dispatcherName: \"setMovieDiaryPage\",\n        moviesFiltered: movieDiaryFiltered,\n        moviesPaginated: movieDiaryPaginated,\n        moviesStatus: movieDiaryStatus,\n      };\n    } else if (type === \"Ratings\") {\n      payload = {\n        dispatcher: dispatcherMovieRatings,\n        dispatcherName: \"setMovieRatingsPage\",\n        moviesFiltered: movieRatingsFiltered,\n        moviesPaginated: movieRatingsPaginated,\n        moviesStatus: movieRatingsStatus,\n      };\n    }\n    dispatch({ type: \"setAll\", payload });\n  }, [\n    dispatcherMovieDiary,\n    dispatcherMovieRatings,\n    movieDiaryFiltered,\n    movieDiaryPage,\n    movieDiaryPaginated,\n    movieDiarySearchString,\n    movieDiaryStatus,\n    movieRatingsFiltered,\n    movieRatingsPage,\n    movieRatingsPaginated,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n    type,\n  ]);\n\n  return (\n    <LoadingHandler\n      dataStatus={state.moviesStatus}\n      hasData={!!state.moviesFiltered.length}\n      messageNoData=\"noMovies\"\n    >\n      <>\n        <ul className=\"list-unstyled\">\n          {state.moviesPaginated.map((movie) => (\n            <li className=\"mb-3\" key={movie.Id}>\n              <MovieButton movie={movie} type={type} />\n            </li>\n          ))}\n        </ul>\n        {state.moviesPaginated.length < state.moviesFiltered.length && (\n          <div className=\"mb-3 text-center\">\n            <button\n              className=\"btn btn-danger\"\n              type=\"button\"\n              onClick={() => state.dispatcher[state.dispatcherName]()}\n            >\n              Show more\n            </button>\n          </div>\n        )}\n      </>\n    </LoadingHandler>\n  );\n});\n\nMovieList.propTypes = {\n  type: PropTypes.oneOf([\"Diary\", \"Ratings\"]).isRequired,\n};\n\nexport default MovieList;\n","import MovieList from \"./MovieList\";\n\nexport default MovieList;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useReducer } from \"react\";\n\nimport { useMovieDiaryContext } from \"../../contexts/MovieDiaryContext\";\nimport { useMovieRatingsContext } from \"../../contexts/MovieRatingsContext\";\n\nconst initialState = {\n  dispatcher: null,\n  dispatcherName: \"\",\n  movieSearchString: \"\",\n  moviesFiltered: [],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setAll\":\n      return { ...state, ...action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieNameSearch = ({ type }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    dispatcher: dispatcherMovieDiary,\n    movieDiaryFiltered,\n    movieDiarySearchString,\n    movieDiaryStatus,\n  } = useMovieDiaryContext();\n  const {\n    dispatcher: dispatcherMovieRatings,\n    movieRatingsFiltered,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n  } = useMovieRatingsContext();\n\n  useEffect(() => {\n    let payload;\n    if (type === \"Diary\") {\n      payload = {\n        dispatcher: dispatcherMovieDiary,\n        dispatcherName: \"setMovieDiarySearchString\",\n        movieSearchString: movieDiarySearchString,\n        moviesFiltered: movieDiaryFiltered,\n      };\n    } else if (type === \"Ratings\") {\n      payload = {\n        dispatcher: dispatcherMovieRatings,\n        dispatcherName: \"setMovieRatingsSearchString\",\n        movieSearchString: movieRatingsSearchString,\n        moviesFiltered: movieRatingsFiltered,\n      };\n    }\n    dispatch({ type: \"setAll\", payload });\n  }, [\n    dispatcherMovieDiary,\n    dispatcherMovieRatings,\n    movieDiaryFiltered,\n    movieDiarySearchString,\n    movieDiaryStatus,\n    movieRatingsFiltered,\n    movieRatingsSearchString,\n    movieRatingsStatus,\n    type,\n  ]);\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"input-group mb-1\">\n        <input\n          id=\"search-movie\"\n          className=\"form-control\"\n          placeholder=\"Search...\"\n          type=\"text\"\n          value={state.movieSearchString}\n          onChange={(event) =>\n            state.dispatcher[state.dispatcherName](event.target.value)\n          }\n        />\n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={() => state.dispatcher[state.dispatcherName](\"\")}\n        >\n          <FontAwesomeIcon icon=\"times\" />\n        </button>\n      </div>\n      <p className=\"small text-end\">{state.moviesFiltered.length} movies</p>\n    </div>\n  );\n};\n\nMovieNameSearch.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default MovieNameSearch;\n","import MovieNameSearch from \"./MovieNameSearch\";\n\nexport default MovieNameSearch;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport MovieList from \"../components/MovieList\";\nimport MovieNameSearch from \"../components/MovieNameSearch\";\n\nconst PageMovies = ({ type }) => (\n  <>\n    <h1 className=\"h4\">{type}</h1>\n    <div className=\"row\">\n      <div className=\"col-12 col-sm-4\">\n        <MovieNameSearch type={type} />\n      </div>\n      <div className=\"col-12 col-sm-8\">\n        <MovieList type={type} />\n      </div>\n    </div>\n  </>\n);\n\nPageMovies.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default PageMovies;\n"],"sourceRoot":""}