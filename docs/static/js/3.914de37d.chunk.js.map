{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/fetchTmdb.js","helpers/tmdbServices.js","helpers/formatMovieDetails.js","contexts/movieDetailsContext.jsx","helpers/formatMovieCredits.js","contexts/movieCreditsContext.jsx","helpers/formatMovieRecommendations.js","contexts/movieRecommendationsContext.jsx","components/Image/Image.jsx","components/Image/index.js","components/ScrollableHorizontalList/index.js","components/ScrollableHorizontalList/ScrollableHorizontalList.jsx","components/MovieDetails/MovieDetailsCastCrew/index.js","components/MovieDetails/MovieDetailsCastCrew/MovieDetailsCastCrew.jsx","components/MovieDetails/MovieDetailsRecommendations/index.js","components/MovieDetails/MovieDetailsRecommendations/MovieDetailsRecommendations.jsx","components/MovieDetails/MovieDetailsBody/index.js","components/MovieDetails/MovieDetailsBody/MovieDetailsBody.jsx","components/MovieDetails/MovieDetailsHeader/index.js","components/MovieDetails/MovieDetailsHeader/MovieDetailsHeader.jsx","components/MovieDetails/index.js","components/MovieDetails/MovieDetails.jsx","pages/PageMovieDetails.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","fetchTmdb","path","queryString","url","tmdbApi","key","fetch","then","response","ok","Error","status","json","methods","movieCredits","movieRecommendations","searchMovies","formatMovieDetails","movie","newMovie","backdrop_url","backdrop_path","img","baseUrl","backdropSize","id","LetterboxdURI","original_language","toUpperCase","original_title","overview","poster_url","poster_path","posterSize","Rating","release_year","release_date","split","title","tmdbURI","vote_average","vote_count","MovieDetailsContext","React","createContext","initialState","movieDetails","fallbackUrl","movieDetailsStatus","reducer","state","action","type","payload","MovieDetailsStore","children","useReducer","dispatchMovieDetails","loadMovieDetails","useCallback","undefined","Name","Year","getSearchMovies","results","length","find","obj","indexOf","catch","useEffect","providerValue","useMemo","Provider","value","defaultProps","formatMovieCredits","cast","map","person","crew","MovieCreditsContext","movieCreditsStatus","MovieCreditsStore","movieId","dispatchMovieCredits","loadMovieCredits","getMovieCredits","formatMovieRecommendations","MovieRecommendationsContext","movieRecommendationsStatus","MovieRecommendationsStore","dispatchMovieRecommendations","loadMovieRecommendations","getMovieRecommendations","Image","src","dimensions","backdrop","height","width","poster","style","paddingTop","className","alt","loading","ScrollableHorizontalList","overflowX","WebkitOverflowScrolling","MovieDetailsCastCrew","useContext","movieCreditsContext","LoadingHandler","dataStatus","hasData","icon","href","rel","target","name","character","credit_id","job","MovieDetailsRecommendations","movieRecommendationsContext","Anchor","MovieDetailsBody","MovieDetailsHeader","MovieDetails","PageMovieDetails","match","movieDiary","movieDiaryContext","movieRatings","movieRatingsContext","params","Id"],"mappings":"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","file":"static/js/3.914de37d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import tmdbApi from \"./tmdbApi\";\n\nconst fetchTmdb = ({ path, queryString = \"\" }) => {\n  const { url, key } = tmdbApi;\n  return fetch(`${url}${path}?api_key=${key}${queryString}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport default fetchTmdb;\n","import fetchTmdb from \"./fetchTmdb\";\nimport tmdbApi from \"./tmdbApi\";\n\nconst { movieCredits, movieRecommendations, searchMovies } = tmdbApi.methods;\n\nexport const getMovieCredits = ({ movieId }) =>\n  fetchTmdb({ path: movieCredits({ movieId }) });\n\nexport const getMovieRecommendations = ({ movieId }) =>\n  fetchTmdb({\n    path: movieRecommendations({ movieId }),\n  });\n\nexport const getSearchMovies = ({ Name, Year }) =>\n  fetchTmdb({\n    path: searchMovies(),\n    queryString: `&query=${Name}&year=${Year}`,\n  });\n","import tmdbApi from \"./tmdbApi\";\n\nconst formatMovieDetails = (movie, newMovie) => ({\n  backdrop_url: newMovie.backdrop_path\n    ? tmdbApi.img.baseUrl + tmdbApi.img.backdropSize + newMovie.backdrop_path\n    : null,\n  id: newMovie.id,\n  LetterboxdURI: movie.LetterboxdURI,\n  original_language: newMovie.original_language.toUpperCase(),\n  original_title: newMovie.original_title,\n  overview: newMovie.overview,\n  poster_url: newMovie.poster_path\n    ? tmdbApi.img.baseUrl + tmdbApi.img.posterSize + newMovie.poster_path\n    : null,\n  Rating: movie.Rating,\n  release_year: newMovie.release_date.split(\"-\")[0],\n  title: newMovie.title,\n  tmdbURI: `https://www.themoviedb.org/movie/${newMovie.id}`,\n  vote_average: newMovie.vote_average,\n  vote_count: newMovie.vote_count,\n});\n\nexport default formatMovieDetails;\n","import PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useMemo, useReducer } from \"react\";\n\nimport { getSearchMovies } from \"../helpers/tmdbServices\";\nimport tmdbApi from \"../helpers/tmdbApi\";\nimport formatMovieDetails from \"../helpers/formatMovieDetails\";\n\nconst MovieDetailsContext = React.createContext();\n\nconst initialState = {\n  movieDetails: {\n    backdrop_url: tmdbApi.img.fallbackUrl,\n    id: \"\",\n    LetterboxdURI: \"\",\n    overview: \"\",\n    poster_url: tmdbApi.img.fallbackUrl,\n    Rating: \"\",\n    title: \"\",\n    vote_average: \"\",\n  },\n  movieDetailsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieDetails\":\n      return {\n        ...state,\n        movieDetails: action.payload,\n        movieDetailsStatus: \"loaded\",\n      };\n    case \"setMovieDetailsStatus\":\n      return { ...state, movieDetailsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieDetailsStore = ({ children, movie }) => {\n  const [state, dispatchMovieDetails] = useReducer(reducer, initialState);\n\n  const loadMovieDetails = useCallback(() => {\n    if (movie !== undefined) {\n      const { Name, Year } = movie;\n      dispatchMovieDetails({\n        type: \"setMovieDetailsStatus\",\n        payload: \"loading\",\n      });\n      getSearchMovies({ Name, Year })\n        .then((json) => {\n          if (json.results.length) {\n            const newMovie = json.results.find(\n              (obj) => obj.title === Name && obj.release_date.indexOf(Year) > -1\n            );\n            if (newMovie !== undefined) {\n              dispatchMovieDetails({\n                type: \"setMovieDetails\",\n                payload: formatMovieDetails(movie, newMovie),\n              });\n            } else {\n              throw Error(\"No movie found\");\n            }\n          } else {\n            throw Error(\"No movie found\");\n          }\n        })\n        .catch(() => {\n          dispatchMovieDetails({\n            type: \"setMovieDetailsStatus\",\n            payload: \"error\",\n          });\n        });\n    } else {\n      dispatchMovieDetails({ type: \"setMovieDetailsStatus\", payload: \"error\" });\n    }\n  }, [movie]);\n\n  useEffect(() => {\n    loadMovieDetails();\n  }, [loadMovieDetails]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieDetailsContext.Provider value={providerValue}>\n      {children}\n    </MovieDetailsContext.Provider>\n  );\n};\n\nMovieDetailsStore.propTypes = {\n  children: PropTypes.node.isRequired,\n  movie: PropTypes.shape({\n    Name: PropTypes.string.isRequired,\n    Year: PropTypes.number.isRequired,\n  }),\n};\n\nMovieDetailsStore.defaultProps = {\n  movie: undefined,\n};\n\nexport { MovieDetailsContext as default, MovieDetailsStore };\n","const formatMovieCredits = (movieCredits) => ({\n  ...movieCredits,\n  cast: movieCredits.cast.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n  crew: movieCredits.crew.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n});\n\nexport default formatMovieCredits;\n","import PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useMemo, useReducer } from \"react\";\n\nimport formatMovieCredits from \"../helpers/formatMovieCredits\";\nimport { getMovieCredits } from \"../helpers/tmdbServices\";\n\nconst MovieCreditsContext = React.createContext();\n\nconst initialState = {\n  movieCredits: {\n    cast: [],\n    crew: [],\n    id: \"\",\n  },\n  movieCreditsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieCredits\":\n      return {\n        ...state,\n        movieCredits: action.payload,\n        movieCreditsStatus: \"loaded\",\n      };\n    case \"setMovieCreditsStatus\":\n      return { ...state, movieCreditsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieCreditsStore = ({ children, movieId }) => {\n  const [state, dispatchMovieCredits] = useReducer(reducer, initialState);\n\n  const loadMovieCredits = useCallback(() => {\n    dispatchMovieCredits({ type: \"setMovieCreditsStatus\", payload: \"loading\" });\n    getMovieCredits({ movieId })\n      .then((json) => {\n        dispatchMovieCredits({\n          type: \"setMovieCredits\",\n          payload: formatMovieCredits(json),\n        });\n      })\n      .catch(() => {\n        dispatchMovieCredits({\n          type: \"setMovieCreditsStatus\",\n          payload: \"error\",\n        });\n      });\n  }, [movieId]);\n\n  useEffect(() => {\n    loadMovieCredits();\n  }, [loadMovieCredits]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieCreditsContext.Provider value={providerValue}>\n      {children}\n    </MovieCreditsContext.Provider>\n  );\n};\n\nMovieCreditsStore.propTypes = {\n  children: PropTypes.node.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n\nexport { MovieCreditsContext as default, MovieCreditsStore };\n","import tmdbApi from \"./tmdbApi\";\n\nconst formatMovieRecommendations = (results) =>\n  results.map((movie) => ({\n    ...movie,\n    poster_url: movie.poster_path\n      ? tmdbApi.img.baseUrl + tmdbApi.img.posterSize + movie.poster_path\n      : null,\n    tmdbURI: `https://www.themoviedb.org/movie/${movie.id}`,\n  }));\n\nexport default formatMovieRecommendations;\n","import PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useMemo, useReducer } from \"react\";\n\nimport formatMovieRecommendations from \"../helpers/formatMovieRecommendations\";\nimport { getMovieRecommendations } from \"../helpers/tmdbServices\";\n\nconst MovieRecommendationsContext = React.createContext();\n\nconst initialState = {\n  movieRecommendations: [],\n  movieRecommendationsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieRecommendations\":\n      return {\n        ...state,\n        movieRecommendations: action.payload,\n        movieRecommendationsStatus: \"loaded\",\n      };\n    case \"setMovieRecommendationsStatus\":\n      return { ...state, movieRecommendationsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieRecommendationsStore = ({ children, movieId }) => {\n  const [state, dispatchMovieRecommendations] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const loadMovieRecommendations = useCallback(() => {\n    dispatchMovieRecommendations({\n      type: \"setMovieRecommendationsStatus\",\n      payload: \"loading\",\n    });\n    getMovieRecommendations({ movieId })\n      .then((json) => {\n        dispatchMovieRecommendations({\n          type: \"setMovieRecommendations\",\n          payload: formatMovieRecommendations(json.results),\n        });\n      })\n      .catch(() => {\n        dispatchMovieRecommendations({\n          type: \"setMovieRecommendationsStatus\",\n          payload: \"error\",\n        });\n      });\n  }, [movieId]);\n\n  useEffect(() => {\n    loadMovieRecommendations();\n  }, [loadMovieRecommendations]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieRecommendationsContext.Provider value={providerValue}>\n      {children}\n    </MovieRecommendationsContext.Provider>\n  );\n};\n\nMovieRecommendationsStore.propTypes = {\n  children: PropTypes.node.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n\nexport { MovieRecommendationsContext as default, MovieRecommendationsStore };\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Image = ({ src, title, type }) => {\n  const types = {\n    backdrop: {\n      height: 300,\n      width: 533,\n    },\n    poster: {\n      height: 450,\n      width: 300,\n    },\n  };\n  const dimensions = types[type];\n  const style = {\n    paddingTop: `${(dimensions.height / dimensions.width) * 100}%`,\n  };\n  return (\n    <div className=\"bg-secondary ratio text-white\" style={style}>\n      {src ? (\n        <img alt={`${type} for ${title}`} loading=\"lazy\" src={src} />\n      ) : (\n        <div className=\"p-3 text-center\">{`No ${type} available for ${title}`}</div>\n      )}\n    </div>\n  );\n};\n\nImage.propTypes = {\n  src: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"backdrop\", \"poster\"]).isRequired,\n};\n\nImage.defaultProps = {\n  src: null,\n};\n\nexport default Image;\n","import Image from \"./Image\";\n\nexport default Image;\n","import ScrollableHorizontalList from \"./ScrollableHorizontalList\";\n\nexport default ScrollableHorizontalList;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst ScrollableHorizontalList = ({ children }) => {\n  const verticalListStyle = {\n    overflowX: \"scroll\",\n    WebkitOverflowScrolling: \"touch\",\n  };\n  return (\n    <ul\n      className=\"flex-nowrap g-3 list-unstyled mb-0 pb-3 row\"\n      style={verticalListStyle}\n    >\n      {children}\n    </ul>\n  );\n};\n\nScrollableHorizontalList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScrollableHorizontalList;\n","import MovieDetailsCastCrew from \"./MovieDetailsCastCrew\";\n\nexport default MovieDetailsCastCrew;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\n\nimport movieCreditsContext from \"../../../contexts/movieCreditsContext\";\nimport LoadingHandler from \"../../LoadingHandler\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nconst MovieDetailsCastCrew = () => {\n  const { movieCredits, movieCreditsStatus } = useContext(movieCreditsContext);\n  return (\n    <LoadingHandler dataStatus={movieCreditsStatus} hasData={!!movieCredits.id}>\n      <h2 className=\"h4\">\n        Cast\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieCredits.cast.length ? (\n        <ScrollableHorizontalList>\n          {movieCredits.cast.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.character}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n      <h2 className=\"h4\">\n        Crew\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieCredits.crew.length ? (\n        <ScrollableHorizontalList>\n          {movieCredits.crew.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.job}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n    </LoadingHandler>\n  );\n};\n\nexport default MovieDetailsCastCrew;\n","import MovieDetailsRecommendations from \"./MovieDetailsRecommendations\";\n\nexport default MovieDetailsRecommendations;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\n\nimport movieRecommendationsContext from \"../../../contexts/movieRecommendationsContext\";\nimport Anchor from \"../../Anchor\";\nimport Image from \"../../Image\";\nimport LoadingHandler from \"../../LoadingHandler\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nconst MovieDetailsRecommendations = () => {\n  const { movieRecommendations, movieRecommendationsStatus } = useContext(\n    movieRecommendationsContext\n  );\n  return (\n    <LoadingHandler\n      dataStatus={movieRecommendationsStatus}\n      hasData={!!movieRecommendations.length}\n    >\n      <div className=\"p-3\">\n        <h2 className=\"h4\">\n          Recommendations\n          <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n        </h2>\n        <ScrollableHorizontalList>\n          {movieRecommendations.map((movie) => (\n            <li className=\"col-5 col-md-3 col-lg-2\" key={movie.id}>\n              <Anchor href={movie.tmdbURI} target=\"_blank\">\n                <Image\n                  src={movie.poster_url}\n                  title={movie.title}\n                  type=\"poster\"\n                />\n                {movie.title}\n              </Anchor>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      </div>\n    </LoadingHandler>\n  );\n};\n\nexport default MovieDetailsRecommendations;\n","import MovieDetailsBody from \"./MovieDetailsBody\";\n\nexport default MovieDetailsBody;\n","import React, { useContext } from \"react\";\n\nimport { MovieCreditsStore } from \"../../../contexts/movieCreditsContext\";\nimport { MovieRecommendationsStore } from \"../../../contexts/movieRecommendationsContext\";\nimport MovieDetailsContext from \"../../../contexts/movieDetailsContext\";\nimport Image from \"../../Image\";\nimport MovieDetailsCastCrew from \"../MovieDetailsCastCrew\";\nimport MovieDetailsRecommendations from \"../MovieDetailsRecommendations\";\n\nconst MovieDetailsBody = () => {\n  const { movieDetails } = useContext(MovieDetailsContext);\n  return (\n    <>\n      <div className=\"p-3\">\n        <div className=\"animate__animated animate__fadeInUp mb-3 row\">\n          <div className=\"col-6 col-lg-4\">\n            <Image\n              src={movieDetails.poster_url}\n              title={movieDetails.title}\n              type=\"poster\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-lg-8 text-end\">\n            <div className=\"lead text-start\">{movieDetails.overview}</div>\n            <div className=\"mb-3\">\n              <span className=\"badge bg-secondary ms-2\">\n                {movieDetails.original_language}\n              </span>\n            </div>\n            <div className=\"mb-3\">\n              <a\n                className=\"btn btn-danger btn-sm\"\n                href={movieDetails.LetterboxdURI}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View movie at Letterboxd\n              </a>\n            </div>\n            <div className=\"mb-3\">\n              <a\n                className=\"btn btn-danger btn-sm\"\n                href={movieDetails.tmdbURI}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View movie at TMDB\n              </a>\n            </div>\n          </div>\n        </div>\n        <MovieCreditsStore movieId={movieDetails.id}>\n          <MovieDetailsCastCrew />\n        </MovieCreditsStore>\n      </div>\n      <Image\n        src={movieDetails.backdrop_url}\n        title={movieDetails.title}\n        type=\"backdrop\"\n      />\n      <MovieRecommendationsStore movieId={movieDetails.id}>\n        <MovieDetailsRecommendations />\n      </MovieRecommendationsStore>\n    </>\n  );\n};\n\nexport default MovieDetailsBody;\n","import MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nexport default MovieDetailsHeader;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\n\nimport MovieDetailsContext from \"../../../contexts/movieDetailsContext\";\n\nconst MovieDetailsHeader = () => {\n  const { movieDetails } = useContext(MovieDetailsContext);\n  return (\n    <div className=\"bg-secondary p-3\">\n      <h1 className=\"h3\">\n        {movieDetails.title}\n        <span className=\"font-italic ms-2 small\">{`(${\n          movieDetails.release_year\n        }${\n          movieDetails.title !== movieDetails.original_title\n            ? `, \"${movieDetails.original_title}\"`\n            : \"\"\n        })`}</span>\n      </h1>\n      <div className=\"small\">\n        {movieDetails.Rating} of 5\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">by me</span>\n      </div>\n      <div className=\"small\">\n        {movieDetails.vote_average} of 10\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">{`by ${movieDetails.vote_count} TMDb users`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsHeader;\n","import MovieDetails from \"./MovieDetails\";\n\nexport default MovieDetails;\n","import React, { useContext } from \"react\";\n\nimport MovieDetailsContext from \"../../contexts/movieDetailsContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieDetailsBody from \"./MovieDetailsBody\";\nimport MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nconst MovieDetails = () => {\n  const { movieDetails, movieDetailsStatus } = useContext(MovieDetailsContext);\n  return (\n    <LoadingHandler\n      dataStatus={movieDetailsStatus}\n      hasData={movieDetails.id !== \"\"}\n    >\n      <div className=\"border border-secondary mb-3 rounded\">\n        <MovieDetailsHeader />\n        <MovieDetailsBody />\n      </div>\n    </LoadingHandler>\n  );\n};\n\nexport default MovieDetails;\n","import PropTypes from \"prop-types\";\nimport React, { useContext } from \"react\";\n\nimport { MovieDetailsStore } from \"../contexts/movieDetailsContext\";\nimport movieDiaryContext from \"../contexts/movieDiaryContext\";\nimport movieRatingsContext from \"../contexts/movieRatingsContext\";\nimport MovieDetails from \"../components/MovieDetails\";\n\nconst PageMovieDetails = ({ match }) => {\n  const { movieDiary } = useContext(movieDiaryContext);\n  const { movieRatings } = useContext(movieRatingsContext);\n  const { movieId } = match.params;\n  const movie = [...movieDiary, ...movieRatings].find(\n    (obj) => obj.Id === movieId\n  );\n  return (\n    <MovieDetailsStore movie={movie}>\n      <MovieDetails />\n    </MovieDetailsStore>\n  );\n};\n\nPageMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default PageMovieDetails;\n"],"sourceRoot":""}