{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/fetchTmdb.js","helpers/tmdbServices.js","helpers/formatCurrency.js","helpers/formatMovieCredits.js","helpers/formatMovieRecommendations.js","helpers/formatMovieDetails.js","contexts/MovieDetailsContext.jsx","components/Image/Image.jsx","components/Image/index.js","components/ScrollableHorizontalList/index.js","components/ScrollableHorizontalList/ScrollableHorizontalList.jsx","components/MovieDetails/MovieDetailsCastCrew/index.js","components/MovieDetails/MovieDetailsCastCrew/MovieDetailsCastCrew.jsx","components/MovieDetails/MovieDetailsRecommendations/index.js","components/MovieDetails/MovieDetailsRecommendations/MovieDetailsRecommendations.jsx","components/MovieDetails/MovieDetailsStats/index.js","components/MovieDetails/MovieDetailsStats/MovieDetailsStats.jsx","components/MovieDetails/MovieDetailsBody/index.js","components/MovieDetails/MovieDetailsBody/MovieDetailsBody.jsx","components/MovieDetails/MovieDetailsHeader/index.js","components/MovieDetails/MovieDetailsHeader/MovieDetailsHeader.jsx","components/MovieDetails/index.js","components/MovieDetails/MovieDetails.jsx","pages/PageMovieDetails.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","fetchTmdb","path","queryString","url","tmdbApi","key","fetch","then","response","ok","Error","status","json","methods","movieDetails","searchMovies","formatter","Intl","NumberFormat","style","currency","formatCurrency","value","format","formatMovieCredits","credits","cast","map","person","tmdbURI","id","crew","poster","img","formatMovieRecommendations","movies","movie","poster_url","poster_path","backdrop","formatMovieDetails","backdrop_url","backdrop_path","budget","LetterboxdURI","original_language","toUpperCase","Rating","recommendations","results","release_date","formatDate","date","release_year","split","revenue","MovieDetailsContext","createContext","useMovieDetails","useContext","initialState","movieDetailsStatus","reducer","state","action","type","payload","MovieDetailsProvider","children","useReducer","dispatchMovieDetails","loadMovieDetails","useCallback","undefined","Name","Year","getSearchMovies","length","newMovie","find","obj","title","indexOf","movieId","getMovieDetails","catch","useEffect","providerValue","useMemo","Provider","defaultProps","Image","src","dimensions","height","width","paddingTop","className","alt","loading","ScrollableHorizontalList","overflowX","WebkitOverflowScrolling","MovieDetailsCastCrew","icon","href","rel","target","name","character","credit_id","job","MovieDetailsRecommendations","Anchor","MovieDetailsStats","runtime","genres","production_companies","production_countries","spoken_languages","stats","english_name","item","MovieDetailsBody","overview","tagline","MovieDetailsHeader","original_title","vote_average","vote_count","MovieDetails","LoadingHandler","dataStatus","hasData","PageMovieDetails","match","movieDiary","useMovieDiary","movieRatings","useMovieRatings","params","Id"],"mappings":"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","file":"static/js/3.6c48f8df.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import tmdbApi from \"./tmdbApi\";\n\nconst fetchTmdb = ({ path, queryString = \"\" }) => {\n  const { url, key } = tmdbApi;\n  return fetch(`${url}${path}?api_key=${key}${queryString}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport default fetchTmdb;\n","import fetchTmdb from \"./fetchTmdb\";\nimport tmdbApi from \"./tmdbApi\";\n\nconst { movieDetails, searchMovies } = tmdbApi.methods;\n\nexport const getMovieDetails = ({ movieId }) =>\n  fetchTmdb({\n    path: movieDetails({ movieId }),\n    queryString: \"&append_to_response=credits,recommendations\",\n  });\n\nexport const getSearchMovies = ({ Name, Year }) =>\n  fetchTmdb({\n    path: searchMovies(),\n    queryString: `&query=${Name}&year=${Year}`,\n  });\n","const formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nconst formatCurrency = ({ value }) =>\n  value ? `US${formatter.format(value)}` : \"--\";\n\nexport default formatCurrency;\n","const formatMovieCredits = ({ credits }) => ({\n  ...credits,\n  cast: credits?.cast.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n  crew: credits?.crew.map((person) => ({\n    ...person,\n    tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n  })),\n});\n\nexport default formatMovieCredits;\n","import tmdbApi from \"./tmdbApi\";\n\nconst { poster } = tmdbApi.img;\n\nconst formatMovieRecommendations = ({ movies }) =>\n  movies.map((movie) => ({\n    ...movie,\n    poster_url: poster({ path: movie.poster_path }),\n    tmdbURI: `https://www.themoviedb.org/movie/${movie.id}`,\n  }));\n\nexport default formatMovieRecommendations;\n","import formatCurrency from \"./formatCurrency\";\nimport formatDate from \"./formatDate\";\nimport formatMovieCredits from \"./formatMovieCredits\";\nimport formatMovieRecommendations from \"./formatMovieRecommendations\";\nimport tmdbApi from \"./tmdbApi\";\n\nconst { backdrop, poster } = tmdbApi.img;\n\nconst formatMovieDetails = ({ movie, movieDetails }) => ({\n  ...movieDetails,\n  backdrop_url: backdrop({ path: movieDetails.backdrop_path }),\n  budget: formatCurrency({ value: movieDetails.budget }),\n  credits: formatMovieCredits({ credits: movieDetails.credits }),\n  LetterboxdURI: movie.LetterboxdURI,\n  original_language: movieDetails.original_language.toUpperCase(),\n  poster_url: poster({ path: movieDetails.poster_path }),\n  Rating: movie.Rating,\n  recommendations: formatMovieRecommendations({\n    movies: movieDetails.recommendations.results,\n  }),\n  release_date: formatDate({ date: movieDetails.release_date }),\n  release_year: movieDetails.release_date.split(\"-\")[0],\n  revenue: formatCurrency({ value: movieDetails.revenue }),\n  tmdbURI: `https://www.themoviedb.org/movie/${movieDetails.id}`,\n});\n\nexport default formatMovieDetails;\n","import PropTypes from \"prop-types\";\nimport React, {\n  createContext,\n  useContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n} from \"react\";\n\nimport { getMovieDetails, getSearchMovies } from \"../helpers/tmdbServices\";\nimport formatMovieDetails from \"../helpers/formatMovieDetails\";\n\nconst MovieDetailsContext = createContext();\nconst useMovieDetails = () => useContext(MovieDetailsContext);\n\nconst initialState = {\n  movieDetails: {},\n  movieDetailsStatus: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setMovieDetails\":\n      return {\n        ...state,\n        movieDetails: action.payload,\n        movieDetailsStatus: \"loaded\",\n      };\n    case \"setMovieDetailsStatus\":\n      return { ...state, movieDetailsStatus: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst MovieDetailsProvider = ({ children, movie }) => {\n  const [state, dispatchMovieDetails] = useReducer(reducer, initialState);\n\n  const loadMovieDetails = useCallback(() => {\n    if (movie !== undefined) {\n      const { Name, Year } = movie;\n      dispatchMovieDetails({\n        type: \"setMovieDetailsStatus\",\n        payload: \"loading\",\n      });\n      getSearchMovies({ Name, Year })\n        .then((json) => {\n          if (json.results.length) {\n            const newMovie = json.results.find(\n              (obj) => obj.title === Name && obj.release_date.indexOf(Year) > -1\n            );\n            if (newMovie !== undefined) {\n              getMovieDetails({ movieId: newMovie.id }).then((movieDetails) => {\n                dispatchMovieDetails({\n                  type: \"setMovieDetails\",\n                  payload: formatMovieDetails({ movie, movieDetails }),\n                });\n              });\n            } else {\n              throw Error(\"No movie found\");\n            }\n          } else {\n            throw Error(\"No movie found\");\n          }\n        })\n        .catch(() => {\n          dispatchMovieDetails({\n            type: \"setMovieDetailsStatus\",\n            payload: \"error\",\n          });\n        });\n    } else {\n      dispatchMovieDetails({ type: \"setMovieDetailsStatus\", payload: \"error\" });\n    }\n  }, [movie]);\n\n  useEffect(() => {\n    loadMovieDetails();\n  }, [loadMovieDetails]);\n\n  const providerValue = useMemo(() => state, [state]);\n  return (\n    <MovieDetailsContext.Provider value={providerValue}>\n      {children}\n    </MovieDetailsContext.Provider>\n  );\n};\n\nMovieDetailsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  movie: PropTypes.shape({\n    Name: PropTypes.string.isRequired,\n    Year: PropTypes.number.isRequired,\n  }),\n};\n\nMovieDetailsProvider.defaultProps = {\n  movie: undefined,\n};\n\nexport { MovieDetailsProvider, useMovieDetails };\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Image = ({ src, title, type }) => {\n  const types = {\n    backdrop: {\n      height: 300,\n      width: 533,\n    },\n    poster: {\n      height: 450,\n      width: 300,\n    },\n  };\n  const dimensions = types[type];\n  const style = {\n    paddingTop: `${(dimensions.height / dimensions.width) * 100}%`,\n  };\n  return (\n    <div className=\"bg-secondary ratio text-white\" style={style}>\n      {src ? (\n        <img alt={`${type} for ${title}`} loading=\"lazy\" src={src} />\n      ) : (\n        <div className=\"p-3 text-center\">{`No ${type} available for ${title}`}</div>\n      )}\n    </div>\n  );\n};\n\nImage.propTypes = {\n  src: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"backdrop\", \"poster\"]).isRequired,\n};\n\nImage.defaultProps = {\n  src: null,\n};\n\nexport default Image;\n","import Image from \"./Image\";\n\nexport default Image;\n","import ScrollableHorizontalList from \"./ScrollableHorizontalList\";\n\nexport default ScrollableHorizontalList;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst ScrollableHorizontalList = ({ children }) => {\n  const verticalListStyle = {\n    overflowX: \"scroll\",\n    WebkitOverflowScrolling: \"touch\",\n  };\n  return (\n    <ul className=\"flex-nowrap g-3 list-unstyled row\" style={verticalListStyle}>\n      {children}\n    </ul>\n  );\n};\n\nScrollableHorizontalList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScrollableHorizontalList;\n","import MovieDetailsCastCrew from \"./MovieDetailsCastCrew\";\n\nexport default MovieDetailsCastCrew;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetails } from \"../../../contexts/MovieDetailsContext\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nconst MovieDetailsCastCrew = () => {\n  const { movieDetails } = useMovieDetails();\n  if (!movieDetails.credits) {\n    return null;\n  }\n  return (\n    <>\n      <h2 className=\"h4\">\n        Cast\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieDetails.credits.cast.length ? (\n        <ScrollableHorizontalList>\n          {movieDetails.credits.cast.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.character}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n      <h2 className=\"h4\">\n        Crew\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieDetails.credits.crew.length ? (\n        <ScrollableHorizontalList>\n          {movieDetails.credits.crew.map((person) => (\n            <li className=\"col-auto\" key={person.credit_id}>\n              <a\n                className=\"btn btn-secondary btn-sm\"\n                href={person.tmdbURI}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {person.name}\n                <div className=\"small\">{person.job}</div>\n              </a>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsCastCrew;\n","import MovieDetailsRecommendations from \"./MovieDetailsRecommendations\";\n\nexport default MovieDetailsRecommendations;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetails } from \"../../../contexts/MovieDetailsContext\";\nimport Anchor from \"../../Anchor\";\nimport Image from \"../../Image\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nconst MovieDetailsRecommendations = () => {\n  const { movieDetails } = useMovieDetails();\n  if (!movieDetails.recommendations.length) {\n    return null;\n  }\n  return (\n    <div className=\"p-3\">\n      <h2 className=\"h4\">\n        Recommendations\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      <ScrollableHorizontalList>\n        {movieDetails.recommendations.map((movie) => (\n          <li className=\"col-5 col-md-3 col-lg-2\" key={movie.id}>\n            <Anchor href={movie.tmdbURI} target=\"_blank\">\n              <Image src={movie.poster_url} title={movie.title} type=\"poster\" />\n              {movie.title}\n            </Anchor>\n          </li>\n        ))}\n      </ScrollableHorizontalList>\n    </div>\n  );\n};\n\nexport default MovieDetailsRecommendations;\n","import MovieDetailsStats from \"./MovieDetailsStats\";\n\nexport default MovieDetailsStats;\n","import React from \"react\";\n\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\nimport { useMovieDetails } from \"../../../contexts/MovieDetailsContext\";\n\nconst MovieDetailsStats = () => {\n  /* eslint-disable camelcase */\n  const {\n    movieDetails: {\n      runtime,\n      release_date,\n      genres,\n      budget,\n      revenue,\n      production_companies,\n      production_countries,\n      spoken_languages,\n    },\n  } = useMovieDetails();\n  const stats = [\n    { title: \"Runtime\", value: `${runtime} minutes` },\n    { title: \"Release date\", value: release_date },\n    { title: \"Genres\", value: genres.map(({ name }) => name) },\n    { title: \"Budget\", value: budget },\n    { title: \"Revenue\", value: revenue },\n    {\n      title: \"Production companies\",\n      value: production_companies.map(({ name }) => name),\n    },\n    {\n      title: \"Production countries\",\n      value: production_countries.map(({ name }) => name),\n    },\n    {\n      title: \"Spoken languages\",\n      value: spoken_languages.map(({ english_name }) => english_name),\n    },\n  ];\n  /* eslint-enable camelcase */\n  return (\n    <ScrollableHorizontalList>\n      {stats.map(({ title, value }) => (\n        <li className=\"col-auto\" key={title}>\n          <div>{title}</div>\n          {Array.isArray(value) ? (\n            <ul className=\"fw-bold list-unstyled mb-0\">\n              {value.map((item) => (\n                <li key={item}>\n                  <span className=\"badge bg-secondary\">{item}</span>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"fw-bold\">{value}</div>\n          )}\n        </li>\n      ))}\n    </ScrollableHorizontalList>\n  );\n};\n\nexport default MovieDetailsStats;\n","import MovieDetailsBody from \"./MovieDetailsBody\";\n\nexport default MovieDetailsBody;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetails } from \"../../../contexts/MovieDetailsContext\";\nimport Image from \"../../Image\";\nimport MovieDetailsCastCrew from \"../MovieDetailsCastCrew\";\nimport MovieDetailsRecommendations from \"../MovieDetailsRecommendations\";\nimport MovieDetailsStats from \"../MovieDetailsStats\";\n\nconst MovieDetailsBody = () => {\n  const { movieDetails } = useMovieDetails();\n  const links = [\n    { href: \"LetterboxdURI\", name: \"Letterboxd\" },\n    { href: \"tmdbURI\", name: \"TMDb\" },\n  ];\n  return (\n    <>\n      <div className=\"p-3\">\n        <div className=\"animate__animated animate__fadeInUp mb-3 row\">\n          <div className=\"col-6 col-lg-4\">\n            <Image\n              src={movieDetails.poster_url}\n              title={movieDetails.title}\n              type=\"poster\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-lg-8 lead\">\n            {movieDetails.overview}\n          </div>\n        </div>\n        <MovieDetailsStats />\n        <MovieDetailsCastCrew />\n        {movieDetails.tagline && (\n          <blockquote className=\"blockquote px-5 text-center\">{`\"${movieDetails.tagline}\"`}</blockquote>\n        )}\n      </div>\n      <Image\n        src={movieDetails.backdrop_url}\n        title={movieDetails.title}\n        type=\"backdrop\"\n      />\n      <div className=\"p-3 text-end\">\n        <div>\n          View movie at\n          <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n        </div>\n        <ul className=\"list-inline\">\n          {links.map(({ href, name }) => (\n            <li className=\"list-inline-item\" key={name}>\n              <a\n                className=\"btn btn-danger btn-sm\"\n                href={movieDetails[href]}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <MovieDetailsRecommendations />\n    </>\n  );\n};\n\nexport default MovieDetailsBody;\n","import MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nexport default MovieDetailsHeader;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetails } from \"../../../contexts/MovieDetailsContext\";\n\nconst MovieDetailsHeader = () => {\n  const { movieDetails } = useMovieDetails();\n  return (\n    <div className=\"bg-secondary p-3\">\n      <h1 className=\"h3\">\n        {movieDetails.title}\n        <span className=\"font-italic ms-2 small\">\n          {`(${movieDetails.release_year}`}\n          {movieDetails.title !== movieDetails.original_title &&\n            `, \"${movieDetails.original_title}\"`}\n          {\")\"}\n        </span>\n      </h1>\n      <div className=\"small\">\n        {movieDetails.Rating} of 5\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">by me</span>\n      </div>\n      <div className=\"small\">\n        {movieDetails.vote_average} of 10\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">{`by ${movieDetails.vote_count} TMDb users`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsHeader;\n","import MovieDetails from \"./MovieDetails\";\n\nexport default MovieDetails;\n","import React from \"react\";\n\nimport { useMovieDetails } from \"../../contexts/MovieDetailsContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieDetailsBody from \"./MovieDetailsBody\";\nimport MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nconst MovieDetails = () => {\n  const { movieDetails, movieDetailsStatus } = useMovieDetails();\n  return (\n    <LoadingHandler\n      dataStatus={movieDetailsStatus}\n      hasData={movieDetails.id !== \"\"}\n    >\n      <div className=\"border border-secondary mb-3 rounded\">\n        <MovieDetailsHeader />\n        <MovieDetailsBody />\n      </div>\n    </LoadingHandler>\n  );\n};\n\nexport default MovieDetails;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { MovieDetailsProvider } from \"../contexts/MovieDetailsContext\";\nimport { useMovieDiary } from \"../contexts/MovieDiaryContext\";\nimport { useMovieRatings } from \"../contexts/MovieRatingsContext\";\nimport MovieDetails from \"../components/MovieDetails\";\n\nconst PageMovieDetails = ({ match }) => {\n  const { movieDiary } = useMovieDiary();\n  const { movieRatings } = useMovieRatings();\n  const { movieId } = match.params;\n  const movie = [...movieDiary, ...movieRatings].find(\n    (obj) => obj.Id === movieId\n  );\n  return (\n    <MovieDetailsProvider movie={movie}>\n      <MovieDetails />\n    </MovieDetailsProvider>\n  );\n};\n\nPageMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default PageMovieDetails;\n"],"sourceRoot":""}