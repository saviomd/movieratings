{"version":3,"sources":["components/MovieButton/index.js","components/MovieButton/MovieButton.jsx","components/MovieList/index.js","components/MovieList/MovieList.jsx","components/MovieNameSearch/index.js","components/MovieNameSearch/MovieNameSearch.jsx","pages/PageMovies.jsx"],"names":["MovieButton","memo","dateText","movie","type","WatchedDateFormatted","DateFormatted","className","to","Id","Name","Year","Array","from","Rating","map","item","i","icon","MovieList","useMovieDiaryContext","dispatcherMovieDiary","dispatcher","movieDiaryFiltered","movieDiaryPaginated","movieDiaryStatus","useMovieRatingsContext","dispatcherMovieRatings","movieRatingsFiltered","movieRatingsPaginated","movieRatingsStatus","dispatcherName","moviesFiltered","moviesPaginated","moviesStatus","Error","LoadingHandler","dataStatus","hasData","length","messageNoData","onClick","MovieNameSearch","movieDiarySearchString","movieRatingsSearchString","movieSearchString","id","placeholder","value","onChange","target","PageMovies"],"mappings":"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","file":"static/js/5.6ef62008.chunk.js","sourcesContent":["import MovieButton from \"./MovieButton\";\n\nexport default MovieButton;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst types = [\"Diary\", \"Ratings\"];\n\nconst MovieButton = memo(({ movie, type }) => {\n  let dateText;\n  if (type === \"Diary\" && movie.WatchedDateFormatted) {\n    dateText = `watched in ${movie.WatchedDateFormatted}`;\n  } else if (type === \"Ratings\" && movie.DateFormatted) {\n    dateText = `rated in ${movie.DateFormatted}`;\n  }\n  return (\n    <Link className=\"btn btn-secondary d-block\" to={`/movie/${movie.Id}`}>\n      <div className=\"text-start text-truncate\">\n        {movie.Name}\n        <span className=\"ms-1 small\">({movie.Year})</span>\n      </div>\n      <div className=\"align-items-end row small\">\n        <div className=\"col text-start text-warning\">\n          {Array.from(Array(movie.Rating)).map((item, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <FontAwesomeIcon key={i} className=\"me-1\" icon=\"star\" />\n          ))}\n        </div>\n        <div className=\"col small text-end\">{dateText}</div>\n      </div>\n    </Link>\n  );\n});\n\nMovieButton.propTypes = {\n  movie: PropTypes.shape({\n    Id: PropTypes.string.isRequired,\n    Date: PropTypes.string.isRequired,\n    DateFormatted: PropTypes.string.isRequired,\n    LetterboxdURI: PropTypes.string.isRequired,\n    Name: PropTypes.string.isRequired,\n    Rating: PropTypes.number.isRequired,\n    WatchedDate: PropTypes.string,\n    WatchedDateFormatted: PropTypes.string,\n    Year: PropTypes.number.isRequired,\n  }).isRequired,\n  type: PropTypes.oneOf(types).isRequired,\n};\n\nexport default MovieButton;\nexport { types };\n","import MovieList from \"./MovieList\";\n\nexport default MovieList;\n","import PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\n\nimport { useMovieDiaryContext } from \"../../contexts/MovieDiaryContext\";\nimport { useMovieRatingsContext } from \"../../contexts/MovieRatingsContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieButton from \"../MovieButton\";\n\nconst MovieList = memo(({ type }) => {\n  const {\n    dispatcher: dispatcherMovieDiary,\n    movieDiaryFiltered,\n    movieDiaryPaginated,\n    movieDiaryStatus,\n  } = useMovieDiaryContext();\n  const {\n    dispatcher: dispatcherMovieRatings,\n    movieRatingsFiltered,\n    movieRatingsPaginated,\n    movieRatingsStatus,\n  } = useMovieRatingsContext();\n\n  const {\n    dispatcher,\n    dispatcherName,\n    moviesFiltered,\n    moviesPaginated,\n    moviesStatus,\n  } = (() => {\n    switch (type) {\n      case \"Diary\":\n        return {\n          dispatcher: dispatcherMovieDiary,\n          dispatcherName: \"setMovieDiaryPage\",\n          moviesFiltered: movieDiaryFiltered,\n          moviesPaginated: movieDiaryPaginated,\n          moviesStatus: movieDiaryStatus,\n        };\n      case \"Ratings\":\n        return {\n          dispatcher: dispatcherMovieRatings,\n          dispatcherName: \"setMovieRatingsPage\",\n          moviesFiltered: movieRatingsFiltered,\n          moviesPaginated: movieRatingsPaginated,\n          moviesStatus: movieRatingsStatus,\n        };\n      default:\n        throw new Error();\n    }\n  })();\n\n  const handleShowMore = () => dispatcher[dispatcherName]();\n\n  return (\n    <LoadingHandler\n      dataStatus={moviesStatus}\n      hasData={!!moviesFiltered.length}\n      messageNoData=\"noMovies\"\n    >\n      <>\n        <ul className=\"list-unstyled\">\n          {moviesPaginated.map((movie) => (\n            <li className=\"mb-3\" key={movie.Id}>\n              <MovieButton movie={movie} type={type} />\n            </li>\n          ))}\n        </ul>\n        {moviesPaginated.length < moviesFiltered.length && (\n          <div className=\"mb-3 text-center\">\n            <button\n              className=\"btn btn-danger\"\n              type=\"button\"\n              onClick={handleShowMore}\n            >\n              Show more\n            </button>\n          </div>\n        )}\n      </>\n    </LoadingHandler>\n  );\n});\n\nMovieList.propTypes = {\n  type: PropTypes.oneOf([\"Diary\", \"Ratings\"]).isRequired,\n};\n\nexport default MovieList;\n","import MovieNameSearch from \"./MovieNameSearch\";\n\nexport default MovieNameSearch;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { useMovieDiaryContext } from \"../../contexts/MovieDiaryContext\";\nimport { useMovieRatingsContext } from \"../../contexts/MovieRatingsContext\";\n\nconst MovieNameSearch = ({ type }) => {\n  const {\n    dispatcher: dispatcherMovieDiary,\n    movieDiaryFiltered,\n    movieDiarySearchString,\n  } = useMovieDiaryContext();\n  const {\n    dispatcher: dispatcherMovieRatings,\n    movieRatingsFiltered,\n    movieRatingsSearchString,\n  } = useMovieRatingsContext();\n\n  const { dispatcher, dispatcherName, movieSearchString, moviesFiltered } =\n    (() => {\n      switch (type) {\n        case \"Diary\":\n          return {\n            dispatcher: dispatcherMovieDiary,\n            dispatcherName: \"setMovieDiarySearchString\",\n            movieSearchString: movieDiarySearchString,\n            moviesFiltered: movieDiaryFiltered,\n          };\n        case \"Ratings\":\n          return {\n            dispatcher: dispatcherMovieRatings,\n            dispatcherName: \"setMovieRatingsSearchString\",\n            movieSearchString: movieRatingsSearchString,\n            moviesFiltered: movieRatingsFiltered,\n          };\n        default:\n          throw new Error();\n      }\n    })();\n\n  const handleReset = () => dispatcher[dispatcherName](\"\");\n\n  const handleSearch = ({ target }) => dispatcher[dispatcherName](target.value);\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"input-group mb-1\">\n        <input\n          id=\"search-movie\"\n          className=\"form-control\"\n          placeholder=\"Search...\"\n          type=\"text\"\n          value={movieSearchString}\n          onChange={handleSearch}\n        />\n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={handleReset}\n        >\n          <FontAwesomeIcon icon=\"times\" />\n        </button>\n      </div>\n      <p className=\"small text-end\">{moviesFiltered.length} movies</p>\n    </div>\n  );\n};\n\nMovieNameSearch.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default MovieNameSearch;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport MovieList from \"../components/MovieList\";\nimport MovieNameSearch from \"../components/MovieNameSearch\";\n\nconst PageMovies = ({ type }) => (\n  <>\n    <h1 className=\"h4\">{type}</h1>\n    <div className=\"row\">\n      <div className=\"col-12 col-sm-4\">\n        <MovieNameSearch type={type} />\n      </div>\n      <div className=\"col-12 col-sm-8\">\n        <MovieList type={type} />\n      </div>\n    </div>\n  </>\n);\n\nPageMovies.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default PageMovies;\n"],"sourceRoot":""}