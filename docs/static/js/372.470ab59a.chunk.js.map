{"version":3,"file":"static/js/372.470ab59a.chunk.js","mappings":"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","sources":["components/ScrollableHorizontalList/ScrollableHorizontalList.jsx","components/ScrollableHorizontalList/index.js","helpers/fetchTmdb.js","helpers/tmdbServices.js","helpers/formatCurrency.js","helpers/formatPerson.js","helpers/formatMovieCredits.js","helpers/formatMovieRecommendations.js","helpers/formatMovieDetails.js","hooks/useMovieDetailsStore.jsx","contexts/MovieDetailsContext.jsx","components/Image/Image.jsx","components/Image/index.js","components/MovieDetails/MovieDetailsCastCrew/MovieDetailsCastCrew.jsx","components/MovieDetails/MovieDetailsCastCrew/index.js","components/MovieDetails/MovieDetailsRecommendations/MovieDetailsRecommendations.jsx","components/MovieDetails/MovieDetailsRecommendations/index.js","components/MovieDetails/MovieDetailsStats/MovieDetailsStats.jsx","components/MovieDetails/MovieDetailsStats/index.js","components/MovieDetails/MovieDetailsBody/MovieDetailsBody.jsx","components/MovieDetails/MovieDetailsBody/index.js","components/MovieDetails/MovieDetailsHeader/MovieDetailsHeader.jsx","components/MovieDetails/MovieDetailsHeader/index.js","components/MovieDetails/MovieDetails.jsx","components/MovieDetails/index.js","pages/PageMovieDetails.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction ScrollableHorizontalList({ children }) {\n  const verticalListStyle = {\n    overflowX: \"scroll\",\n    WebkitOverflowScrolling: \"touch\",\n  };\n  return (\n    <ul className=\"flex-nowrap g-3 list-unstyled row\" style={verticalListStyle}>\n      {children}\n    </ul>\n  );\n}\n\nScrollableHorizontalList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScrollableHorizontalList;\n","import ScrollableHorizontalList from \"./ScrollableHorizontalList\";\n\nexport default ScrollableHorizontalList;\n","import tmdbApi from \"./tmdbApi\";\n\nconst fetchTmdb = ({ path, queryString = \"\" }) => {\n  const { url, key } = tmdbApi;\n  return fetch(`${url}${path}?api_key=${key}${queryString}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport default fetchTmdb;\n","import fetchTmdb from \"./fetchTmdb\";\nimport tmdbApi from \"./tmdbApi\";\n\nconst { movieDetails, searchMovies } = tmdbApi.methods;\n\nexport const getMovieDetails = ({ movieId }) =>\n  fetchTmdb({\n    path: movieDetails({ movieId }),\n    queryString: \"&append_to_response=credits,recommendations,watch/providers\",\n  });\n\nexport const getSearchMovies = ({ Name, Year }) =>\n  fetchTmdb({\n    path: searchMovies(),\n    queryString: `&query=${Name}&year=${Year}`,\n  });\n","const formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nconst formatCurrency = ({ value }) =>\n  value ? `US${formatter.format(value)}` : \"--\";\n\nexport default formatCurrency;\n","import tmdbApi from \"./tmdbApi\";\n\nconst { profile } = tmdbApi.img;\n\nconst formatPerson = ({ person }) => ({\n  ...person,\n  ...(person.job && { job: [person.job] }),\n  profile_url: profile({ path: person.profile_path }),\n  tmdbURI: `https://www.themoviedb.org/person/${person.id}`,\n});\n\nexport default formatPerson;\n","import formatPerson from \"./formatPerson\";\n\nconst formatMovieCredits = ({ credits }) => ({\n  ...credits,\n  cast: credits?.cast\n    .map((person) => formatPerson({ person }))\n    .sort((a, b) => a.order - b.order),\n  crew: credits?.crew\n    .reduce((previous, current) => {\n      const found = previous.find(({ id }) => id === current.id);\n      if (found) {\n        found.job = [...found.job, current.job];\n        return previous;\n      }\n      return [...previous, formatPerson({ person: current })];\n    }, [])\n    .sort((a, b) => b.popularity - a.popularity),\n});\n\nexport default formatMovieCredits;\n","import tmdbApi from \"./tmdbApi\";\n\nconst { poster } = tmdbApi.img;\n\nconst formatMovieRecommendations = ({ movies }) =>\n  movies.map((movie) => ({\n    ...movie,\n    poster_url: poster({ path: movie.poster_path }),\n    tmdbURI: `https://www.themoviedb.org/movie/${movie.id}`,\n  }));\n\nexport default formatMovieRecommendations;\n","import formatCurrency from \"./formatCurrency\";\nimport formatDate from \"./formatDate\";\nimport formatMovieCredits from \"./formatMovieCredits\";\nimport formatMovieRecommendations from \"./formatMovieRecommendations\";\nimport tmdbApi from \"./tmdbApi\";\n\nconst { backdrop, logo, poster } = tmdbApi.img;\n\nconst formatMovieDetails = ({ movie, movieDetails }) => ({\n  ...movieDetails,\n  backdrop_url: backdrop({ path: movieDetails.backdrop_path }),\n  budget: formatCurrency({ value: movieDetails.budget }),\n  credits: formatMovieCredits({ credits: movieDetails.credits }),\n  flatrate:\n    movieDetails[\"watch/providers\"]?.results?.BR?.flatrate?.map((item) => ({\n      ...item,\n      ...(item.logo_path && { logo_url: logo({ path: item.logo_path }) }),\n    })) || [],\n  LetterboxdURI: movie.LetterboxdURI,\n  original_language: movieDetails.original_language.toUpperCase(),\n  poster_url: poster({ path: movieDetails.poster_path }),\n  Rating: movie.Rating,\n  recommendations: formatMovieRecommendations({\n    movies: movieDetails.recommendations.results,\n  }),\n  release_date: formatDate({ date: movieDetails.release_date }),\n  release_year: movieDetails.release_date.split(\"-\")[0],\n  revenue: formatCurrency({ value: movieDetails.revenue }),\n  tmdbURI: `https://www.themoviedb.org/movie/${movieDetails.id}`,\n});\n\nexport default formatMovieDetails;\n","import { useMemo, useReducer } from \"react\";\n\nimport formatMovieDetails from \"../helpers/formatMovieDetails\";\n\nconst initialState = {\n  movieDetails: {},\n  movieDetailsStatus: \"\",\n};\n\nfunction reducer(state, { payload, type }) {\n  switch (type) {\n    case \"SET_MOVIE_DETAILS\": {\n      const { movie, movieDetails } = payload;\n      return {\n        ...state,\n        movieDetails: formatMovieDetails({ movie, movieDetails }),\n        movieDetailsStatus: \"loaded\",\n      };\n    }\n    case \"SET_MOVIE_DETAILS_STATUS\":\n      return { ...state, movieDetailsStatus: payload };\n    default:\n      throw new Error();\n  }\n}\n\nconst useMovieDetailsStore = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const boundActions = useMemo(\n    () => ({\n      setMovieDetails: (payload) =>\n        dispatch({ type: \"SET_MOVIE_DETAILS\", payload }),\n      setMovieDetailsStatus: (payload) =>\n        dispatch({ type: \"SET_MOVIE_DETAILS_STATUS\", payload }),\n    }),\n    []\n  );\n\n  return { ...state, boundActions };\n};\n\nexport default useMovieDetailsStore;\n","import PropTypes from \"prop-types\";\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n} from \"react\";\n\nimport { getMovieDetails, getSearchMovies } from \"../helpers/tmdbServices\";\nimport useMovieDetailsStore from \"../hooks/useMovieDetailsStore\";\n\nconst MovieDetailsContext = createContext();\nconst useMovieDetailsContext = () => useContext(MovieDetailsContext);\n\nfunction MovieDetailsProvider({ children, movie }) {\n  const store = useMovieDetailsStore();\n\n  const loadMovieDetails = useCallback(() => {\n    if (movie !== undefined) {\n      const { Name, Year } = movie;\n      store.boundActions.setMovieDetailsStatus(\"loading\");\n      getSearchMovies({ Name, Year })\n        .then((json) => {\n          if (json.results.length) {\n            const newMovie = json.results.find(\n              (obj) => obj.title === Name && obj.release_date.indexOf(Year) > -1\n            );\n            if (newMovie !== undefined) {\n              getMovieDetails({ movieId: newMovie.id }).then((movieDetails) => {\n                store.boundActions.setMovieDetails({ movie, movieDetails });\n              });\n            } else {\n              throw Error(\"No movie found\");\n            }\n          } else {\n            throw Error(\"No movie found\");\n          }\n        })\n        .catch(() => {\n          store.boundActions.setMovieDetailsStatus(\"error\");\n        });\n    } else {\n      store.boundActions.setMovieDetailsStatus(\"error\");\n    }\n  }, [movie, store.boundActions]);\n\n  useEffect(() => {\n    loadMovieDetails();\n  }, [loadMovieDetails]);\n\n  return (\n    <MovieDetailsContext.Provider value={store}>\n      {children}\n    </MovieDetailsContext.Provider>\n  );\n}\n\nMovieDetailsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  movie: PropTypes.shape({\n    Name: PropTypes.string.isRequired,\n    Year: PropTypes.number.isRequired,\n  }),\n};\n\nMovieDetailsProvider.defaultProps = {\n  movie: undefined,\n};\n\nexport {\n  MovieDetailsContext as MovieDetailsContextMock,\n  MovieDetailsProvider,\n  useMovieDetailsContext,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction Image({ src, title, type }) {\n  const types = {\n    backdrop: {\n      height: 300,\n      width: 533,\n    },\n    poster: {\n      height: 450,\n      width: 300,\n    },\n    profile: {\n      height: 278,\n      width: 185,\n    },\n  };\n  const dimensions = types[type];\n  const style = {\n    paddingTop: `${(dimensions.height / dimensions.width) * 100}%`,\n  };\n  return (\n    <div\n      className=\"bg-secondary ratio overflow-hidden text-white\"\n      style={style}\n    >\n      {src ? (\n        <img alt={`${type} for ${title}`} loading=\"lazy\" src={src} />\n      ) : (\n        <div className=\"p-3 small text-center\">{`No ${type} image available for ${title}`}</div>\n      )}\n    </div>\n  );\n}\n\nImage.propTypes = {\n  src: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"backdrop\", \"poster\", \"profile\"]).isRequired,\n};\n\nImage.defaultProps = {\n  src: null,\n};\n\nexport default Image;\n","import Image from \"./Image\";\n\nexport default Image;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\nimport Anchor from \"../../Anchor\";\nimport Image from \"../../Image\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nfunction MovieDetailsCastCrew() {\n  const { movieDetails } = useMovieDetailsContext();\n  if (!movieDetails.credits) {\n    return null;\n  }\n  return [\"cast\", \"crew\"].map((item) => (\n    <React.Fragment key={item}>\n      <h2 className=\"h4\">\n        {`${item[0].toUpperCase()}${item.slice(1)}`}\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      {movieDetails.credits[item].length ? (\n        <ScrollableHorizontalList>\n          {movieDetails.credits[item].map((person) => (\n            <li className=\"col-5 col-sm-3 col-md-2\" key={person.id}>\n              <Anchor href={person.tmdbURI} target=\"_blank\">\n                <Image\n                  src={person.profile_url}\n                  title={person.name}\n                  type=\"profile\"\n                />\n                {person.name}\n                <div className=\"fst-italic small\">\n                  {person.character || person.job?.join(\" / \")}\n                </div>\n              </Anchor>\n            </li>\n          ))}\n        </ScrollableHorizontalList>\n      ) : (\n        <p>No data available</p>\n      )}\n    </React.Fragment>\n  ));\n}\n\nexport default MovieDetailsCastCrew;\n","import MovieDetailsCastCrew from \"./MovieDetailsCastCrew\";\n\nexport default MovieDetailsCastCrew;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\nimport Anchor from \"../../Anchor\";\nimport Image from \"../../Image\";\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\n\nfunction MovieDetailsRecommendations() {\n  const { movieDetails } = useMovieDetailsContext();\n  if (!movieDetails.recommendations.length) {\n    return null;\n  }\n  return (\n    <div className=\"p-3\">\n      <h2 className=\"h4\">\n        Recommendations\n        <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n      </h2>\n      <ScrollableHorizontalList>\n        {movieDetails.recommendations.map((movie) => (\n          <li className=\"col-5 col-md-3 col-lg-2\" key={movie.id}>\n            <Anchor href={movie.tmdbURI} target=\"_blank\">\n              <Image src={movie.poster_url} title={movie.title} type=\"poster\" />\n              {movie.title}\n            </Anchor>\n          </li>\n        ))}\n      </ScrollableHorizontalList>\n    </div>\n  );\n}\n\nexport default MovieDetailsRecommendations;\n","import MovieDetailsRecommendations from \"./MovieDetailsRecommendations\";\n\nexport default MovieDetailsRecommendations;\n","import React from \"react\";\n\nimport ScrollableHorizontalList from \"../../ScrollableHorizontalList\";\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\n\nfunction MovieDetailsStats() {\n  /* eslint-disable camelcase */\n  const {\n    movieDetails: {\n      budget,\n      flatrate,\n      genres,\n      production_companies,\n      production_countries,\n      release_date,\n      revenue,\n      runtime,\n      spoken_languages,\n    },\n  } = useMovieDetailsContext();\n  const stats = [\n    { title: \"Runtime\", value: `${runtime} minutes` },\n    { title: \"Release date\", value: release_date },\n    { title: \"Genres\", value: genres.map(({ name }) => name) },\n    { title: \"Budget\", value: budget },\n    { title: \"Revenue\", value: revenue },\n    {\n      title: \"Production companies\",\n      value: production_companies.map(({ name }) => name),\n    },\n    {\n      title: \"Production countries\",\n      value: production_countries.map(({ name }) => name),\n    },\n    {\n      title: \"Spoken languages\",\n      value: spoken_languages.map(({ english_name }) => english_name),\n    },\n  ];\n  return (\n    <ScrollableHorizontalList>\n      <li className=\"col-auto\">\n        <div>Streaming in Brazil on</div>\n        {flatrate.length ? (\n          <ul className=\"list-inline\">\n            {flatrate.map(({ logo_url, provider_name }) => (\n              <li className=\"list-inline-item\" key={provider_name}>\n                <img alt={provider_name} height={16 * 3} src={logo_url} />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"fw-bold\">None</div>\n        )}\n      </li>\n      {stats.map(({ title, value }) => (\n        <li className=\"col-auto\" key={title}>\n          <div>{title}</div>\n          {Array.isArray(value) ? (\n            <ul className=\"fw-bold list-unstyled\">\n              {value.map((item) => (\n                <li key={item}>\n                  <span className=\"badge bg-secondary\">{item}</span>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"fw-bold\">{value}</div>\n          )}\n        </li>\n      ))}\n    </ScrollableHorizontalList>\n  );\n  /* eslint-enable camelcase */\n}\n\nexport default MovieDetailsStats;\n","import MovieDetailsStats from \"./MovieDetailsStats\";\n\nexport default MovieDetailsStats;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\nimport Image from \"../../Image\";\nimport MovieDetailsCastCrew from \"../MovieDetailsCastCrew\";\nimport MovieDetailsRecommendations from \"../MovieDetailsRecommendations\";\nimport MovieDetailsStats from \"../MovieDetailsStats\";\n\nfunction MovieDetailsBody() {\n  const { movieDetails } = useMovieDetailsContext();\n  const links = [\n    { href: \"LetterboxdURI\", name: \"Letterboxd\" },\n    { href: \"tmdbURI\", name: \"TMDb\" },\n  ];\n  return (\n    <>\n      <div className=\"p-3\">\n        <div className=\"animate__animated animate__fadeInUp mb-3 row\">\n          <div className=\"col-6 col-lg-4\">\n            <Image\n              src={movieDetails.poster_url}\n              title={movieDetails.title}\n              type=\"poster\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-lg-8 lead\">\n            {movieDetails.overview}\n          </div>\n        </div>\n        <MovieDetailsStats />\n        <MovieDetailsCastCrew />\n        {movieDetails.tagline && (\n          <blockquote className=\"blockquote px-5 text-center\">{`\"${movieDetails.tagline}\"`}</blockquote>\n        )}\n      </div>\n      <Image\n        src={movieDetails.backdrop_url}\n        title={movieDetails.title}\n        type=\"backdrop\"\n      />\n      <div className=\"p-3 text-end\">\n        <div>\n          View movie at\n          <FontAwesomeIcon className=\"ms-1 small\" icon=\"external-link-alt\" />\n        </div>\n        <ul className=\"list-inline\">\n          {links.map(({ href, name }) => (\n            <li className=\"list-inline-item\" key={name}>\n              <a\n                className=\"btn btn-danger btn-sm\"\n                href={movieDetails[href]}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <MovieDetailsRecommendations />\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import MovieDetailsBody from \"./MovieDetailsBody\";\n\nexport default MovieDetailsBody;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../../contexts/MovieDetailsContext\";\n\nfunction MovieDetailsHeader() {\n  const { movieDetails } = useMovieDetailsContext();\n  return (\n    <div className=\"bg-secondary p-3\">\n      <h1 className=\"h3\">\n        {movieDetails.title}\n        <span className=\"font-italic ms-2 small\">\n          {`(${movieDetails.release_year}`}\n          {movieDetails.title !== movieDetails.original_title &&\n            `, \"${movieDetails.original_title}\"`}\n          )\n        </span>\n      </h1>\n      <div className=\"small\">\n        {movieDetails.Rating} of 5\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">by me</span>\n      </div>\n      <div className=\"small\">\n        {movieDetails.vote_average} of 10\n        <FontAwesomeIcon className=\"mx-1 text-warning\" icon=\"star\" />\n        <span className=\"small\">{`by ${movieDetails.vote_count} TMDb users`}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetailsHeader;\n","import MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nexport default MovieDetailsHeader;\n","import React from \"react\";\n\nimport { useMovieDetailsContext } from \"../../contexts/MovieDetailsContext\";\nimport LoadingHandler from \"../LoadingHandler\";\nimport MovieDetailsBody from \"./MovieDetailsBody\";\nimport MovieDetailsHeader from \"./MovieDetailsHeader\";\n\nfunction MovieDetails() {\n  const { movieDetails, movieDetailsStatus } = useMovieDetailsContext();\n  return (\n    <LoadingHandler\n      dataStatus={movieDetailsStatus}\n      hasData={movieDetails.id !== \"\"}\n    >\n      <div className=\"border border-secondary mb-3 rounded\">\n        <MovieDetailsHeader />\n        <MovieDetailsBody />\n      </div>\n    </LoadingHandler>\n  );\n}\n\nexport default MovieDetails;\n","import MovieDetails from \"./MovieDetails\";\n\nexport default MovieDetails;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { MovieDetailsProvider } from \"../contexts/MovieDetailsContext\";\nimport { useMovieDiaryContext } from \"../contexts/MovieDiaryContext\";\nimport { useMovieRatingsContext } from \"../contexts/MovieRatingsContext\";\nimport MovieDetails from \"../components/MovieDetails\";\n\nfunction PageMovieDetails() {\n  const { movieDiary } = useMovieDiaryContext();\n  const { movieRatings } = useMovieRatingsContext();\n  const { movieId } = useParams();\n  const movie = [...movieDiary, ...movieRatings].find(\n    (obj) => obj.Id === movieId\n  );\n  return (\n    <MovieDetailsProvider movie={movie}>\n      <MovieDetails />\n    </MovieDetailsProvider>\n  );\n}\n\nexport default PageMovieDetails;\n"],"names":["children","className","style","overflowX","WebkitOverflowScrolling","path","queryString","url","tmdbApi","key","fetch","then","response","ok","Error","status","json","movieDetails","searchMovies","formatter","Intl","NumberFormat","currency","value","format","profile","person","job","profile_url","profile_path","tmdbURI","id","credits","cast","map","formatPerson","sort","a","b","order","crew","reduce","previous","current","found","find","popularity","poster","movies","movie","poster_url","poster_path","backdrop","logo","backdrop_url","backdrop_path","budget","formatCurrency","formatMovieCredits","flatrate","results","BR","item","logo_path","logo_url","LetterboxdURI","original_language","toUpperCase","Rating","recommendations","formatMovieRecommendations","release_date","formatDate","date","release_year","split","revenue","initialState","movieDetailsStatus","reducer","state","payload","type","formatMovieDetails","useReducer","dispatch","boundActions","useMemo","setMovieDetails","setMovieDetailsStatus","MovieDetailsContext","createContext","useMovieDetailsContext","useContext","MovieDetailsProvider","store","useMovieDetailsStore","loadMovieDetails","useCallback","undefined","Name","Year","fetchTmdb","getSearchMovies","length","newMovie","obj","title","indexOf","movieId","getMovieDetails","catch","useEffect","Provider","defaultProps","Image","src","dimensions","height","width","paddingTop","alt","loading","slice","icon","ScrollableHorizontalList","Anchor","href","target","name","character","join","genres","production_companies","production_countries","runtime","spoken_languages","stats","english_name","provider_name","Array","isArray","overview","tagline","rel","original_title","vote_average","vote_count","LoadingHandler","dataStatus","hasData","movieDiary","useMovieDiaryContext","movieRatings","useMovieRatingsContext","useParams","Id"],"sourceRoot":""}