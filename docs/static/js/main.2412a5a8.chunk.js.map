{"version":3,"sources":["components/Footer/index.js","components/Footer/Footer.js","components/NavItem/index.js","components/NavItem/NavItem.js","components/Nav/index.js","components/Nav/Nav.js","components/Header/index.js","components/Header/Header.js","components/Message/index.js","components/Message/Message.js","components/MovieInfo/MovieInfoBody/index.js","components/MovieInfo/MovieInfoBody/MovieInfoBody.js","components/MovieInfo/MovieInfoHeader/index.js","components/MovieInfo/MovieInfoHeader/MovieInfoHeader.js","components/MovieInfo/index.js","components/MovieInfo/MovieInfo.js","helpers/tmdbApi.js","helpers/formatMovieList.js","helpers/movieRatingsServices.js","reducers/moviesPerDecadeReleased.js","reducers/moviesPerRatingGiven.js","reducers/movieRatings.js","reducers/movieInfo.js","pages/PageMovieInfo.js","helpers/movieInfoServices.js","components/MovieButton/index.js","components/MovieButton/MovieButton.js","components/MovieList/index.js","components/MovieList/MovieList.js","components/MovieNameSearch/index.js","components/MovieNameSearch/MovieNameSearch.js","helpers/movieDiaryServices.js","reducers/moviesPerYearWatched.js","reducers/movieDiary.js","pages/PageMovies.js","helpers/filterMoviesByName.js","pages/PageNotFound.js","components/ProgressBar/index.js","components/ProgressBar/ProgressBar.js","components/MovieStats/index.js","components/MovieStats/MovieStats.js","pages/PageStats.js","components/SiteInfo/index.js","components/SiteInfo/SiteInfo.js","App.js","serviceWorker.js","store.js","index.js"],"names":["Footer","year","Date","getFullYear","react_default","a","createElement","className","href","target","rel","alt","src","height","width","NavItem","_ref","link","NavLink","to","path","exact","activeClassName","react_fontawesome_index_es","icon","name","Nav","navLinks","map","components_NavItem","key","Header","components_Nav","Message","type","messages","error","text","loading","noMovies","noStats","pageNotFound","MovieInfoBody","movieInfo","Fragment","overview","LetterboxdURI","concat","id","title","backdrop_url","MovieInfoHeader","poster_url","Rating","vote_average","MovieInfo","MovieInfo_MovieInfoHeader","MovieInfo_MovieInfoBody","tmdbApi","attributionUrl","baseUrl","backdropSize","fallbackUrl","posterSize","formatMovieList","movieList","reverse","movie","index","Id","length","split","toString","Name","DateFormatted","toLocaleDateString","day","month","WatchedDate","WatchedDateFormatted","initState","groups","max","updateMoviesPerDecadeReleased","value","payload","updateMoviesPerRatingGiven","list","listStatus","loadMovieRatings","dispatch","getState","movieRatings","Promise","resolve","updateMovieRatingsStatus","fetch","then","response","ok","Error","status","json","updateMovieRatings","reduce","acc","curr","decade","Year","substr","loadMoviesPerDecadeReleased","rating","loadMoviesPerRatingGiven","catch","console","log","message","dataStatus","updateMovieInfo","updateMovieInfoStatus","PageMovieInfo","this","props","loadMovieInfo","match","params","movieId","html","components_Message","components_MovieInfo","React","Component","connect","state","movieFromList","find","obj","undefined","results","release_date","indexOf","Object","objectSpread","backdrop_path","poster_path","MovieButton","dateText","stars","i","push","Link","MovieList","movies","components_MovieButton","MovieNameSearch","handleOnChangeMovieNameSearch","movieCount","movieSearchString","placeholder","onChange","event","onClick","updateMoviesPerYearWatched","loadMovieDiary","movieDiary","updateMovieDiaryStatus","updateMovieDiary","loadMoviesPerYearWatched","PageMovies","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","trim","toLowerCase","setState","prevProps","_this$props","movieListToRender","filter","includes","movieListStatus","components_MovieList","components_MovieNameSearch","PageNotFound","ProgressBar","style","MovieStats","source","stats","_loop","item","unshift","components_ProgressBar","PageStats","components_MovieStats","moviesPerYearWatched","moviesPerRatingGiven","moviesPerDecadeReleased","SiteInfo","library","add","faCalendarAlt","faChartBar","faDizzy","faFrown","faHourglassHalf","faSadTear","faStar","faTimes","App","components_Header","Switch","Route","render","pages_PageMovies","pages_PageMovieInfo","pages_PageStats","component","components_SiteInfo","components_Footer","Boolean","window","location","hostname","reducer","combineReducers","arguments","action","_action$payload","createStore","composeWithDevTools","applyMiddleware","thunk","router","es","store","HashRouter","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2412a5a8.chunk.js","sourcesContent":["import Footer from './Footer';\n\nexport default Footer;\n","import React from 'react';\n\nconst Footer = () => {\n\tconst year = (new Date()).getFullYear();\n\treturn (\n\t\t<footer className=\"border-secondary border-top mb-3 pt-3 small text-center\">\n\t\t\t&copy; 2017-{year}\n\t\t\t<a className=\"ml-1 text-danger\" href=\"http://saviomd.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img alt=\"saviomd.com\" className=\"mr-1\" src=\"https://saviomd.com/img/favicon.png\" height=\"15\" width=\"15\" />\n\t\t\t\tSávio Mendes\n\t\t\t</a>\n\t\t</footer>\n\t)\n}\n\nexport default Footer;\n","import NavItem from './NavItem';\n\nexport default NavItem;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavItem = ({ link }) => (\n\t<NavLink to={link.path} exact activeClassName=\"active\" className=\"btn btn-danger btn-sm\">\n\t\t<FontAwesomeIcon icon={link.icon} />\n\t\t<span className=\"d-none d-sm-inline-block ml-1\">{link.name}</span>\n\t</NavLink>\n);\n\nNavItem.propTypes = {\n\tlink: PropTypes.shape({\n\t\ticon: PropTypes.string.isRequired,\n\t\tname: PropTypes.string.isRequired,\n\t\tpath: PropTypes.string.isRequired\n\t})\n};\n\nexport default NavItem;\n","import Nav from './Nav';\n\nexport default Nav;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport NavItem from '../NavItem';\n\nconst Nav = ({ navLinks }) => (\n\t<nav className=\"btn-group\">\n\t\t{navLinks.map(link => (\n\t\t\t<NavItem key={link.path} link={link} />\n\t\t))}\n\t</nav>\n);\n\nNav.propTypes = {\n\tnavLinks: PropTypes.array.isRequired\n};\n\nexport default Nav;\n","import Header from './Header';\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Nav from '../Nav';\n\nconst Header = ({ navLinks }) => (\n\t<header className=\"border-bottom border-secondary mb-3\">\n\t\t<div className=\"align-items-center my-2 row\">\n\t\t\t<h1 className=\"col-auto h5 mb-0\">\n\t\t\t\t<NavLink to=\"/\" exact className=\"text-white\">Movie Ratings</NavLink>\n\t\t\t</h1>\n\t\t\t<div className=\"col text-right\">\n\t\t\t\t<Nav navLinks={navLinks} />\n\t\t\t</div>\n\t\t</div>\n\t</header>\n)\n\nHeader.propTypes = {\n\tnavLinks: PropTypes.array.isRequired\n};\n\nexport default Header;\n","import Message from './Message';\n\nexport default Message;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Message = ({ type }) => {\n\tconst messages = {\n\t\terror: {\n\t\t\ticon: 'sad-tear',\n\t\t\ttext: 'An error has ocurred'\n\t\t},\n\t\tloading: {\n\t\t\ticon: 'hourglass-half',\n\t\t\ttext: 'Loading...'\n\t\t},\n\t\tnoMovies: {\n\t\t\ticon: 'frown',\n\t\t\ttext: 'No movies to show'\n\t\t},\n\t\tnoStats: {\n\t\t\ticon: 'frown',\n\t\t\ttext: 'No stats to show'\n\t\t},\n\t\tpageNotFound: {\n\t\t\ticon: 'dizzy',\n\t\t\ttext: 'Page not found'\n\t\t},\n\t};\n\treturn (\n\t\t<div className=\"lead p-3 text-center\">\n\t\t\t<div className=\"h3 mb-3\">\n\t\t\t\t<span className=\"bg-secondary p-2 rounded\">\n\t\t\t\t\t<FontAwesomeIcon icon={messages[type].icon} />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t{messages[type].text}\n\t\t</div>\n\t);\n};\n\nMessage.propTypes = {\n\ttype: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import MovieInfoBody from './MovieInfoBody';\n\nexport default MovieInfoBody;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MovieInfoBody = ({ movieInfo }) => (\n\t<>\n\t\t<div className=\"p-3\">\n\t\t\t<p className=\"lead\">{movieInfo.overview}</p>\n\t\t\t<div className=\"text-right\">\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<a className=\"btn btn-danger btn-sm\" href={movieInfo.LetterboxdURI} target=\"_blank\" rel=\"noopener noreferrer\">View movie at Letterboxd</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<a className=\"btn btn-danger btn-sm\" href={`https://www.themoviedb.org/movie/${movieInfo.id}`} target=\"_blank\" rel=\"noopener noreferrer\">View movie at TMDB</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<img alt={`backdrop for ${movieInfo.title}`} className=\"img-fluid rounded-bottom\" src={movieInfo.backdrop_url} />\n\t</>\n);\n\nMovieInfoBody.propTypes = {\n\tmovieInfo: PropTypes.shape({\n\t\tbackdrop_url: PropTypes.string.isRequired,\n\t\tdataStatus: PropTypes.string.isRequired,\n\t\tid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\tLetterboxdURI: PropTypes.string.isRequired,\n\t\toverview: PropTypes.string.isRequired,\n\t\tposter_url: PropTypes.string.isRequired,\n\t\tRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\ttitle: PropTypes.string.isRequired,\n\t\tvote_average: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n\t})\n};\n\nexport default MovieInfoBody;\n","import MovieInfoHeader from './MovieInfoHeader';\n\nexport default MovieInfoHeader;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MovieInfoHeader = ({ movieInfo }) => (\n\t<>\n\t\t<div className=\"p-3 row\">\n\t\t\t<div className=\"col-6 col-sm-4\">\n\t\t\t\t<img alt={`poster for ${movieInfo.title}`} className=\"img-fluid\" src={movieInfo.poster_url} />\n\t\t\t</div>\n\t\t\t<div className=\"col-6 col-sm-8 text-right\">\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t{movieInfo.Rating} of 5\n\t\t\t\t\t<FontAwesomeIcon className=\"ml-1 text-warning\" icon=\"star\" />\n\t\t\t\t\t<div className=\"small\">by me</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t{movieInfo.vote_average} of 10\n\t\t\t\t\t<FontAwesomeIcon className=\"ml-1 text-warning\" icon=\"star\" />\n\t\t\t\t\t<div className=\"small\">by TMDb users</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<h1 className=\"bg-secondary h3 mb-0 p-3\">{movieInfo.title}</h1>\n\t</>\n);\n\nMovieInfoHeader.propTypes = {\n\tmovieInfo: PropTypes.shape({\n\t\tbackdrop_url: PropTypes.string.isRequired,\n\t\tdataStatus: PropTypes.string.isRequired,\n\t\tid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\tLetterboxdURI: PropTypes.string.isRequired,\n\t\toverview: PropTypes.string.isRequired,\n\t\tposter_url: PropTypes.string.isRequired,\n\t\tRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\ttitle: PropTypes.string.isRequired,\n\t\tvote_average: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n\t})\n};\n\nexport default MovieInfoHeader;\n","import MovieInfo from './MovieInfo';\n\nexport default MovieInfo;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MovieInfoBody from './MovieInfoBody';\nimport MovieInfoHeader from './MovieInfoHeader';\n\nconst MovieInfo = ({ movieInfo }) => (\n\t<div className=\"border border-secondary rounded\">\n\t\t<MovieInfoHeader movieInfo={movieInfo} />\n\t\t<MovieInfoBody movieInfo={movieInfo} />\n\t</div>\n);\n\nMovieInfo.propTypes = {\n\tmovieInfo: PropTypes.shape({\n\t\tbackdrop_url: PropTypes.string.isRequired,\n\t\tdataStatus: PropTypes.string.isRequired,\n\t\tid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\tLetterboxdURI: PropTypes.string.isRequired,\n\t\toverview: PropTypes.string.isRequired,\n\t\tposter_url: PropTypes.string.isRequired,\n\t\tRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\ttitle: PropTypes.string.isRequired,\n\t\tvote_average: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n\t})\n};\n\nexport default MovieInfo;\n","export default {\n\timg: {\n\t\tattributionUrl: 'https://www.themoviedb.org/assets/1/v4/logos/408x161-powered-by-rectangle-green-bb4301c10ddc749b4e79463811a68afebeae66ef43d17bcfd8ff0e60ded7ce99.png',\n\t\tbaseUrl: 'https://image.tmdb.org/t/p/',\n\t\tbackdropSize: 'w1280',\n\t\tfallbackUrl: 'https://www.themoviedb.org/static_cache/v4/logos/293x302-powered-by-square-blue-ee05c47ab249273a6f9f1dcafec63daba386ca30544567629deb1809395d8516.png',\n\t\tposterSize: 'w780'\n\t},\n\tkey: 'api_key=6f875d4fba2e999f480afa6275a08f75',\n\tpathSearchMovies: 'search/movie',\n\turl: 'https://api.themoviedb.org/3/'\n}\n","export default function formatMovieList(movieList) {\n\tmovieList.reverse();\n\tmovieList = movieList.map((movie, index) => {\n\t\tmovie.Id = (movie.LetterboxdURI.length ? movie.LetterboxdURI.split('/film/')[1].split('/')[0] : index.toString());\n\t\tmovie.Name = movie.Name.toString();\n\t\tmovie.DateFormatted = (new Date(movie.Date)).toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n\t\tif (movie.WatchedDate) {\n\t\t\tmovie.WatchedDateFormatted = (new Date(movie.WatchedDate)).toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n\t\t}\n\t\treturn movie;\n\t});\n\treturn movieList;\n}\n","export const fetchMovieRatings = () => {\n\treturn fetch('https://saviomd.com/movieratings/data/ratings.json').then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n","const initState = {\n\tgroups: {},\n\tmax: 0\n};\n\nexport const MOVIES_PER_DECADE_RELEASED_UPDATE = 'MOVIES_PER_DECADE_RELEASED_UPDATE';\n\nexport const loadMoviesPerDecadeReleased = (movieList) => {\n\treturn (dispatch, getState) => {\n\t\tconst groups = movieList.reduce((acc, curr) => {\n\t\t\tconst decade = `${curr.Year.toString().substr(0, 3)}0`;\n\t\t\tacc[decade] ? acc[decade]++ : acc[decade] = 1;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet max = 0;\n\t\tfor (const decade in groups) {\n\t\t\tmax = (groups[decade] > max ? groups[decade] : max);\n\t\t}\n\t\tdispatch(updateMoviesPerDecadeReleased({groups, max}));\n\t};\n};\nconst updateMoviesPerDecadeReleased = (value) => ({type: MOVIES_PER_DECADE_RELEASED_UPDATE, payload: value});\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase MOVIES_PER_DECADE_RELEASED_UPDATE:\n\t\t\tconst { groups, max } = action.payload;\n\t\t\treturn {...state, groups, max};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","const initState = {\n\tgroups: {},\n\tmax: 0\n};\n\nexport const MOVIES_PER_RATING_GIVEN_UPDATE = 'MOVIES_PER_RATING_GIVEN_UPDATE';\n\nexport const loadMoviesPerRatingGiven = (movieList) => {\n\treturn (dispatch, getState) => {\n\t\tconst groups = movieList.reduce((acc, curr) => {\n\t\t\tconst rating = curr.Rating;\n\t\t\tacc[rating] ? acc[rating]++ : acc[rating] = 1;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet max = 0;\n\t\tfor (const rating in groups) {\n\t\t\tmax = (groups[rating] > max ? groups[rating] : max);\n\t\t}\n\t\tdispatch(updateMoviesPerRatingGiven({groups, max}));\n\t};\n};\nconst updateMoviesPerRatingGiven = (value) => ({type: MOVIES_PER_RATING_GIVEN_UPDATE, payload: value});\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase MOVIES_PER_RATING_GIVEN_UPDATE:\n\t\t\tconst { groups, max } = action.payload;\n\t\t\treturn {...state, groups, max};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import formatMovieList from '../helpers/formatMovieList';\nimport { fetchMovieRatings } from '../helpers/movieRatingsServices';\nimport { loadMoviesPerDecadeReleased } from './moviesPerDecadeReleased';\nimport { loadMoviesPerRatingGiven } from './moviesPerRatingGiven';\n\nconst initState = {\n\tlist: [],\n\tlistStatus: ''\n};\n\nexport const MOVIE_RATINGS_UPDATE = 'MOVIE_RATINGS_UPDATE';\nexport const MOVIE_RATINGS_STATUS_UPDATE = 'MOVIE_RATINGS_STATUS_UPDATE';\n\nexport const loadMovieRatings = () => {\n\treturn (dispatch, getState) => {\n\t\tif (getState().movieRatings.list.length) {\n\t\t\treturn new Promise((resolve) => resolve(getState().movieRatings.list));\n\t\t} else {\n\t\t\tdispatch(updateMovieRatingsStatus('loading'));\n\t\t\treturn fetchMovieRatings()\n\t\t\t\t.then(json => {\n\t\t\t\t\tconst movieList = formatMovieList(json);\n\t\t\t\t\tdispatch(updateMovieRatings(movieList));\n\t\t\t\t\tdispatch(loadMoviesPerDecadeReleased(movieList));\n\t\t\t\t\tdispatch(loadMoviesPerRatingGiven(movieList));\n\t\t\t\t\treturn movieList;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tdispatch(updateMovieRatingsStatus('error'));\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t});\n\t\t}\n\t};\n};\nconst updateMovieRatings = (value) => ({type: MOVIE_RATINGS_UPDATE, payload: value});\nconst updateMovieRatingsStatus = (value) => ({type: MOVIE_RATINGS_STATUS_UPDATE, payload: value});\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase MOVIE_RATINGS_UPDATE:\n\t\t\treturn {...state, list: action.payload, listStatus: 'loaded'};\n\t\tcase MOVIE_RATINGS_STATUS_UPDATE:\n\t\t\treturn {...state, listStatus: action.payload};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { fetchMovieInfo } from '../helpers/movieInfoServices';\nimport tmdbApi from '../helpers/tmdbApi';\nimport { loadMovieRatings } from './movieRatings';\n\nconst initState = {\n\tbackdrop_url: tmdbApi.img.fallbackUrl,\n\tdataStatus: '',\n\tid: '',\n\tLetterboxdURI: '',\n\toverview: '',\n\tposter_url: tmdbApi.img.fallbackUrl,\n\tRating: '',\n\ttitle: '',\n\tvote_average: ''\n};\n\nexport const MOVIE_INFO_UPDATE = 'MOVIE_INFO_UPDATE';\nexport const MOVIE_INFO_STATUS_UPDATE = 'MOVIE_INFO_STATUS_UPDATE';\n\nexport const loadMovieInfo = (movieId) => {\n\treturn (dispatch, getState) => {\n\t\tdispatch(loadMovieRatings())\n\t\t\t.then((movieList) => {\n\t\t\t\tdispatch(updateMovieInfoStatus('loading'));\n\t\t\t\tconst movieFromList = movieList.find((obj) => (obj.Id === movieId));\n\t\t\t\tif (movieFromList !== undefined) {\n\t\t\t\t\tfetchMovieInfo(movieFromList)\n\t\t\t\t\t\t.then((json) => {\n\t\t\t\t\t\t\tif (json.results.length) {\n\t\t\t\t\t\t\t\tconst movie = json.results.find((obj) => {\n\t\t\t\t\t\t\t\t\treturn (obj.title === movieFromList.Name && obj.release_date.indexOf(movieFromList.Year) > -1)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (movie !== undefined) {\n\t\t\t\t\t\t\t\t\tconst movieInfo = {\n\t\t\t\t\t\t\t\t\t\t...getState().movieInfo,\n\t\t\t\t\t\t\t\t\t\tbackdrop_url: tmdbApi.img.baseUrl + tmdbApi.img.backdropSize + movie.backdrop_path,\n\t\t\t\t\t\t\t\t\t\tdataStatus: 'loaded',\n\t\t\t\t\t\t\t\t\t\tid: movie.id,\n\t\t\t\t\t\t\t\t\t\tLetterboxdURI: movieFromList.LetterboxdURI,\n\t\t\t\t\t\t\t\t\t\toverview: movie.overview,\n\t\t\t\t\t\t\t\t\t\tposter_url: tmdbApi.img.baseUrl + tmdbApi.img.posterSize + movie.poster_path,\n\t\t\t\t\t\t\t\t\t\tRating: movieFromList.Rating,\n\t\t\t\t\t\t\t\t\t\ttitle: movie.title,\n\t\t\t\t\t\t\t\t\t\tvote_average: movie.vote_average\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdispatch(updateMovieInfo(movieInfo));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow Error('No movie found');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow Error('No movie found');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tdispatch(updateMovieInfoStatus('error'));\n\t\t\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatch(updateMovieInfoStatus('error'));\n\t\t\t\tconsole.log(error.message);\n\t\t\t});\n\t};\n};\nconst updateMovieInfo = (value) => ({type: MOVIE_INFO_UPDATE, payload: value});\nconst updateMovieInfoStatus = (value) => ({type: MOVIE_INFO_STATUS_UPDATE, payload: value});\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase MOVIE_INFO_UPDATE:\n\t\t\treturn action.payload;\n\t\tcase MOVIE_INFO_STATUS_UPDATE:\n\t\t\treturn {...state, dataStatus: action.payload};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import PropTypes from 'prop-types'\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Message from '../components/Message';\nimport MovieInfo from '../components/MovieInfo';\n\nimport { loadMovieInfo } from '../reducers/movieInfo';\n\nconst propTypes = {\n\tmatch: PropTypes.shape({\n\t\tparams: PropTypes.shape({\n\t\t\tmovieId: PropTypes.string.isRequired\n\t\t})\n\t}),\n\tmovieInfo: PropTypes.shape({\n\t\tbackdrop_url: PropTypes.string.isRequired,\n\t\tdataStatus: PropTypes.string.isRequired,\n\t\tid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\tLetterboxdURI: PropTypes.string.isRequired,\n\t\toverview: PropTypes.string.isRequired,\n\t\tposter_url: PropTypes.string.isRequired,\n\t\tRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\ttitle: PropTypes.string.isRequired,\n\t\tvote_average: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n\t})\n}\n\nclass PageMovieInfo extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.loadMovieInfo(this.props.match.params.movieId);\n\t}\n\trender () {\n\t\tconst { movieInfo } = this.props;\n\t\tlet html = '';\n\t\tif (movieInfo.dataStatus === 'loading') {\n\t\t\thtml = <Message type='loading' />\n\t\t} else if (movieInfo.dataStatus === 'error') {\n\t\t\thtml = <Message type='error' />\n\t\t} else if (movieInfo.id !== '') {\n\t\t\thtml = <MovieInfo movieInfo={movieInfo} />\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t{html}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nPageMovieInfo.propTypes = propTypes;\n\nexport default connect(\n\t(state) => ({movieInfo: state.movieInfo}),\n\t{loadMovieInfo}\n)(PageMovieInfo);\n","import tmdbApi from '../helpers/tmdbApi';\n\nexport const fetchMovieInfo = (movie) => {\n\treturn fetch(`${tmdbApi.url}${tmdbApi.pathSearchMovies}?${tmdbApi.key}&query=${movie.Name}&year=${movie.Year}`).then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n","import MovieButton from './MovieButton';\n\nexport default MovieButton;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieButton = ({ movie, type }) => {\n\tlet dateText;\n\tif (type === 'Diary') {\n\t\tdateText = `watched in ${movie.WatchedDateFormatted}`;\n\t} else if (type === 'Ratings') {\n\t\tdateText = `rated in ${movie.DateFormatted}`;\n\t}\n\tlet stars = [];\n\tfor (let i = 0; i < movie.Rating; i++) {\n\t\tstars.push(<FontAwesomeIcon key={i} className=\"mr-1\" icon=\"star\" />);\n\t}\n\treturn (\n\t\t<Link className=\"btn btn-secondary btn-block\" to={`/movie/${movie.Id}`}>\n\t\t\t<div className=\"text-left text-truncate\">\n\t\t\t\t{movie.Name}\n\t\t\t\t<span className=\"ml-1 small\">({movie.Year})</span>\n\t\t\t</div>\n\t\t\t<div className=\"align-items-end row small\">\n\t\t\t\t<div className=\"col text-left text-warning\">\n\t\t\t\t\t{stars}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col small text-right\">\n\t\t\t\t\t{dateText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t)\n}\n\nMovieButton.propTypes = {\n\tmovie: PropTypes.shape({\n\t\tId: PropTypes.string.isRequired,\n\t\tDate: PropTypes.string.isRequired,\n\t\tDateFormatted: PropTypes.string.isRequired,\n\t\tLetterboxdURI: PropTypes.string.isRequired,\n\t\tName: PropTypes.string.isRequired,\n\t\tRating: PropTypes.number.isRequired,\n\t\tWatchedDate: PropTypes.string,\n\t\tWatchedDateFormatted: PropTypes.string,\n\t\tYear: PropTypes.number.isRequired\n\t}),\n\ttype: PropTypes.string.isRequired\n};\n\nexport default MovieButton;\n","import MovieList from './MovieList';\n\nexport default MovieList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MovieButton from '../MovieButton';\n\nconst MovieList = ({ movies, type }) => (\n\t<ul className=\"list-unstyled\">\n\t\t{movies.map(movie => (\n\t\t\t<li className=\"mb-3\" key={movie.Id}>\n\t\t\t\t<MovieButton movie={movie} type={type} />\n\t\t\t</li>\n\t\t))}\n\t</ul>\n)\n\nMovieList.propTypes = {\n\tmovies: PropTypes.arrayOf(PropTypes.object).isRequired,\n\ttype: PropTypes.string.isRequired\n};\n\nexport default MovieList;\n","import MovieNameSearch from './MovieNameSearch';\n\nexport default MovieNameSearch;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MovieNameSearch = ({ handleOnChangeMovieNameSearch, movieCount, movieSearchString }) => (\n\t<div className=\"mb-3\">\n\t\t<div className=\"input-group input-group-sm mb-1\">\n\t\t\t<input id=\"search-movie\" className=\"form-control\" placeholder=\"Search...\" type=\"text\" value={movieSearchString} onChange={(event) => handleOnChangeMovieNameSearch(event.target.value)} />\n\t\t\t<span className=\"input-group-append\">\n\t\t\t\t<button className=\"btn btn-secondary\" type=\"button\" onClick={() => handleOnChangeMovieNameSearch('')}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t</button>\n\t\t\t</span>\n\t\t</div>\n\t\t<p className=\"small text-right\">{movieCount} movies</p>\n\t</div>\n)\n\nMovieNameSearch.propTypes = {\n\thandleOnChangeMovieNameSearch: PropTypes.func.isRequired,\n\tmovieCount: PropTypes.number.isRequired,\n\tmovieSearchString: PropTypes.string.isRequired,\n};\n\nexport default MovieNameSearch;\n","export const fetchMovieDiary = () => {\n\treturn fetch('https://saviomd.com/movieratings/data/diary.json').then((response) => {\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.status);\n\t\t}\n\t\treturn response.json();\n\t});\n};\n","const initState = {\n\tgroups: {},\n\tmax: 0\n};\n\nexport const MOVIES_PER_YEAR_WATCHED_UPDATE = 'MOVIES_PER_YEAR_WATCHED_UPDATE';\n\nexport const loadMoviesPerYearWatched = (movieList) => {\n\treturn (dispatch, getState) => {\n\t\tconst groups = movieList.reduce((acc, curr) => {\n\t\t\tconst year = curr.WatchedDate.split('-')[0];\n\t\t\tacc[year] ? acc[year]++ : acc[year] = 1;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet max = 0;\n\t\tfor (const year in groups) {\n\t\t\tmax = (groups[year] > max ? groups[year] : max);\n\t\t}\n\t\tdispatch(updateMoviesPerYearWatched({groups, max}));\n\t};\n};\nconst updateMoviesPerYearWatched = (value) => ({type: MOVIES_PER_YEAR_WATCHED_UPDATE, payload: value});\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase MOVIES_PER_YEAR_WATCHED_UPDATE:\n\t\t\tconst { groups, max } = action.payload;\n\t\t\treturn {...state, groups, max};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import formatMovieList from '../helpers/formatMovieList';\nimport {fetchMovieDiary} from '../helpers/movieDiaryServices';\nimport {loadMoviesPerYearWatched} from './moviesPerYearWatched';\n\nconst initState = {\n\tlist: [],\n\tlistStatus: ''\n};\n\nexport const MOVIE_DIARY_UPDATE = 'MOVIE_DIARY_UPDATE';\nexport const MOVIE_DIARY_STATUS_UPDATE = 'MOVIE_DIARY_STATUS_UPDATE';\n\nexport const loadMovieDiary = () => {\n\treturn (dispatch, getState) => {\n\t\tif (getState().movieDiary.list.length) {\n\t\t\treturn new Promise((resolve) => resolve(getState().movieDiary.list));\n\t\t} else {\n\t\t\tdispatch(updateMovieDiaryStatus('loading'));\n\t\t\treturn fetchMovieDiary()\n\t\t\t\t.then(json => {\n\t\t\t\t\tconst movieList = formatMovieList(json);\n\t\t\t\t\tdispatch(updateMovieDiary(movieList));\n\t\t\t\t\tdispatch(loadMoviesPerYearWatched(movieList));\n\t\t\t\t\treturn movieList;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tdispatch(updateMovieDiaryStatus('error'));\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t});\n\t\t}\n\t};\n};\nconst updateMovieDiary = (value) => ({type: MOVIE_DIARY_UPDATE, payload: value});\nconst updateMovieDiaryStatus = (value) => ({type: MOVIE_DIARY_STATUS_UPDATE, payload: value});\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase MOVIE_DIARY_UPDATE:\n\t\t\treturn {...state, list: action.payload, listStatus: 'loaded'};\n\t\tcase MOVIE_DIARY_STATUS_UPDATE:\n\t\t\treturn {...state, listStatus: action.payload};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport Message from '../components/Message';\nimport MovieList from '../components/MovieList';\nimport MovieNameSearch from '../components/MovieNameSearch';\n\nimport filterMoviesByName from '../helpers/filterMoviesByName';\nimport {loadMovieDiary} from '../reducers/movieDiary';\nimport {loadMovieRatings} from '../reducers/movieRatings';\n\nconst propTypes = {\n\tmovies: PropTypes.shape({\n\t\tlist: PropTypes.arrayOf(PropTypes.object).isRequired,\n\t\tlistStatus: PropTypes.string.isRequired\n\t}),\n\ttype: PropTypes.string.isRequired\n}\n\nclass PageMovies extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tmovieSearchString: ''\n\t\t}\n\t}\n\thandleOnChangeMovieNameSearch = (value) => {\n\t\tvalue.trim().toLowerCase();\n\t\tthis.setState({\n\t\t\tmovieSearchString: value\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tif (this.props.type === 'Diary') {\n\t\t\tthis.props.loadMovieDiary();\n\t\t} else if\t(this.props.type === 'Ratings') {\n\t\t\tthis.props.loadMovieRatings();\n\t\t}\n\t}\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.type !== prevProps.type) {\n\t\t\tif (this.props.type === 'Diary') {\n\t\t\t\tthis.props.loadMovieDiary();\n\t\t\t} else if\t(this.props.type === 'Ratings') {\n\t\t\t\tthis.props.loadMovieRatings();\n\t\t\t}\n\t\t}\n\t}\n\trender () {\n\t\tconst { movieDiary, movieRatings, type } = this.props;\n\t\tlet movies;\n\t\tif (type === 'Diary') {\n\t\t\tmovies = movieDiary;\n\t\t} else if (type === 'Ratings') {\n\t\t\tmovies = movieRatings;\n\t\t}\n\t\tconst movieListToRender = filterMoviesByName(movies.list, this.state.movieSearchString);\n\t\tconst movieListStatus = movies.listStatus;\n\t\tlet html = '';\n\t\tif (movieListStatus === 'loading' || movieListStatus === 'error') {\n\t\t\thtml = <Message type={movieListStatus} />\n\t\t} else if (movieListToRender.length) {\n\t\t\thtml = <MovieList movies={movieListToRender} type={type} />\n\t\t} else {\n\t\t\thtml = <Message type=\"noMovies\" />\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1 className=\"h4\">{type}</h1>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-12 col-sm-4\">\n\t\t\t\t\t\t<MovieNameSearch handleOnChangeMovieNameSearch={this.handleOnChangeMovieNameSearch} movieCount={movieListToRender.length} movieSearchString={this.state.movieSearchString} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-12 col-sm-8\">\n\t\t\t\t\t\t{html}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nPageMovies.propTypes = propTypes;\n\nexport default connect(\n\t(state) => ({movieDiary: state.movieDiary, movieRatings: state.movieRatings}),\n\t{loadMovieDiary, loadMovieRatings}\n)(PageMovies);\n","export default function filterMoviesByName (movieList, value) {\n\treturn movieList.filter((movie) => {\n\t\tconst movieName = movie.Name.toLowerCase();\n\t\treturn (movieName.includes(value.toLowerCase()));\n\t});\n}\n","import React from 'react';\n\nimport Message from '../components/Message';\n\nconst PageNotFound = ({ messages }) => (\n\t<Message type=\"pageNotFound\" />\n)\n\nexport default PageNotFound;\n","import ProgressBar from './ProgressBar';\n\nexport default ProgressBar;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ProgressBar = ({ width }) => (\n\t<div className=\"bg-secondary rounded\">\n\t\t<div className=\"bg-danger pb-2 rounded\" style={{width: `${width}%`}}></div>\n\t</div>\n)\n\nProgressBar.propTypes = {\n\twidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n};\n\nexport default ProgressBar;\n","import MovieStats from './MovieStats';\n\nexport default MovieStats;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Message from '../Message';\nimport ProgressBar from '../ProgressBar';\n\nconst MovieStats = ({ movies, source, type }) => {\n\tlet stats = [];\n\tif (source.listStatus === 'loading' || source.listStatus === 'error') {\n\t\tstats.push(<Message key={source.listStatus} type={source.listStatus} />);\n\t} else if (movies.groups) {\n\t\tfor (const item in movies.groups) {\n\t\t\tconst text = () => {\n\t\t\t\tif (type === 'moviesPerRatingGiven') {\n\t\t\t\t\tlet stars = [];\n\t\t\t\t\tfor (let i = 0; i < item; i++) {\n\t\t\t\t\t\tstars.push(<FontAwesomeIcon key={i} className=\"mr-1 text-warning\" icon=\"star\" />);\n\t\t\t\t\t}\n\t\t\t\t\treturn stars;\n\t\t\t\t} else {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst width = movies.groups[item] * 100 / movies.max;\n\t\t\tstats.unshift(\n\t\t\t\t<div className=\"mb-2\" key={item}>\n\t\t\t\t\t<div className=\"no-gutters row\">\n\t\t\t\t\t\t<div className=\"col-auto\">{text()}</div>\n\t\t\t\t\t\t<div className=\"col font-weight-bold text-right\">{movies.groups[item]}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ProgressBar width={width} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t} else {\n\t\tstats.push(<Message key=\"noStats\" type=\"noStats\" />);\n\t}\n\treturn stats;\n};\n\nMovieStats.propTypes = {\n\tmovies: PropTypes.shape({\n\t\tgroups: PropTypes.object.isRequired,\n\t\tmax: PropTypes.number.isRequired\n\t}),\n\tsource: PropTypes.shape({\n\t\tlist: PropTypes.arrayOf(PropTypes.object).isRequired,\n\t\tlistStatus: PropTypes.string.isRequired\n\t}),\n\ttype: PropTypes.string.isRequired\n};\n\nexport default MovieStats;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport MovieStats from '../components/MovieStats';\n\nimport { loadMovieDiary } from '../reducers/movieDiary';\nimport { loadMovieRatings } from '../reducers/movieRatings';\n\nconst propTypes = {\n\tmovieDiary: PropTypes.shape({\n\t\tlist: PropTypes.arrayOf(PropTypes.object).isRequired,\n\t\tlistStatus: PropTypes.string.isRequired\n\t}),\n\tmovieRatings: PropTypes.shape({\n\t\tlist: PropTypes.arrayOf(PropTypes.object).isRequired,\n\t\tlistStatus: PropTypes.string.isRequired\n\t}),\n\tmoviesPerDecadeReleased: PropTypes.shape({\n\t\tgroups: PropTypes.object.isRequired,\n\t\tmax: PropTypes.number.isRequired\n\t}),\n\tmoviesPerRatingGiven: PropTypes.shape({\n\t\tgroups: PropTypes.object.isRequired,\n\t\tmax: PropTypes.number.isRequired\n\t}),\n\tmoviesPerYearWatched: PropTypes.shape({\n\t\tgroups: PropTypes.object.isRequired,\n\t\tmax: PropTypes.number.isRequired\n\t})\n}\n\nclass PageStats extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.loadMovieDiary();\n\t\tthis.props.loadMovieRatings();\n\t}\n\trender () {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1 className=\"h4\">Stats</h1>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n\t\t\t\t\t\t<div className=\"border border-secondary p-3 rounded\">\n\t\t\t\t\t\t\t<h1 className=\"h5\">Per year watched</h1>\n\t\t\t\t\t\t\t<MovieStats\n\t\t\t\t\t\t\t\tmovies={this.props.moviesPerYearWatched}\n\t\t\t\t\t\t\t\tsource={this.props.movieDiary}\n\t\t\t\t\t\t\t\ttype=\"moviesPerYearWatched\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n\t\t\t\t\t\t<div className=\"border border-secondary p-3 rounded\">\n\t\t\t\t\t\t\t<h1 className=\"h5\">Per rating given</h1>\n\t\t\t\t\t\t\t<MovieStats\n\t\t\t\t\t\t\t\tmovies={this.props.moviesPerRatingGiven}\n\t\t\t\t\t\t\t\tsource={this.props.movieRatings}\n\t\t\t\t\t\t\t\ttype=\"moviesPerRatingGiven\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n\t\t\t\t\t\t<div className=\"border border-secondary p-3 rounded\">\n\t\t\t\t\t\t\t<h1 className=\"h5\">Per decade released</h1>\n\t\t\t\t\t\t\t<MovieStats\n\t\t\t\t\t\t\t\tmovies={this.props.moviesPerDecadeReleased}\n\t\t\t\t\t\t\t\tsource={this.props.movieRatings}\n\t\t\t\t\t\t\t\ttype=\"moviesPerDecadeReleased\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nPageStats.propTypes = propTypes;\n\nexport default connect(\n\t(state) => ({movieDiary: state.movieDiary, movieRatings: state.movieRatings, moviesPerDecadeReleased: state.moviesPerDecadeReleased, moviesPerRatingGiven: state.moviesPerRatingGiven, moviesPerYearWatched: state.moviesPerYearWatched}),\n\t{loadMovieDiary, loadMovieRatings}\n)(PageStats);\n","import SiteInfo from './SiteInfo';\n\nexport default SiteInfo;\n","import React from 'react';\n\nimport tmdbApi from '../../helpers/tmdbApi';\n\nconst SiteInfo = () => (\n\t<div className=\"border-secondary border-top pt-3 small text-center\">\n\t\t<div className=\"mb-3\">\n\t\t\tMy Ratings and Diary data are exported from Letterboxd from time to time.<br />\n\t\t\tSo my <a className=\"text-danger\" href=\"https://letterboxd.com/saviomd\" target=\"_blank\" rel=\"noopener noreferrer\">profile</a> will have more up to date information.\n\t\t</div>\n\t\t<div className=\"mb-3\">\n\t\t\t<img alt=\"Powered by TMDB\" className=\"mr-1\" src={tmdbApi.img.attributionUrl} height=\"32\" />\n\t\t\t<br />\n\t\t\tThis product uses the TMDb API but is not endorsed or certified by TMDb.\n\t\t</div>\n\t</div>\n)\n\nexport default SiteInfo;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCalendarAlt, faChartBar, faDizzy, faFrown, faHourglassHalf, faSadTear, faStar, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport PageMovieInfo from './pages/PageMovieInfo';\nimport PageMovies from './pages/PageMovies';\nimport PageNotFound from './pages/PageNotFound';\nimport PageStats from './pages/PageStats';\nimport SiteInfo from './components/SiteInfo';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nlibrary.add(faCalendarAlt, faChartBar, faDizzy, faFrown, faHourglassHalf, faSadTear, faStar, faTimes);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnavLinks: [\n\t\t\t\t{\n\t\t\t\t\ticon: 'star',\n\t\t\t\t\tname: 'Ratings',\n\t\t\t\t\tpath: '/'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: 'calendar-alt',\n\t\t\t\t\tname: 'Diary',\n\t\t\t\t\tpath: '/diary'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: 'chart-bar',\n\t\t\t\t\tname: 'Stats',\n\t\t\t\t\tpath: '/stats'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"justify-content-center row\">\n\t\t\t\t\t<div className=\"col-12 col-md-10\">\n\t\t\t\t\t\t<Header navLinks={this.state.navLinks} />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" exact render={() => <PageMovies type='Ratings' />} />\n\t\t\t\t\t\t\t<Route path=\"/diary\" render={() => <PageMovies type='Diary' />} />\n\t\t\t\t\t\t\t<Route path=\"/movie/:movieId\" render={({ match }) => <PageMovieInfo match={match} />} />\n\t\t\t\t\t\t\t<Route path=\"/stats\" render={() => <PageStats />} />\n\t\t\t\t\t\t\t<Route component={PageNotFound} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t<SiteInfo />\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport movieDiaryReducer from './reducers/movieDiary';\nimport movieInfoReducer from './reducers/movieInfo';\nimport movieRatingsReducer from './reducers/movieRatings';\nimport moviesPerDecadeReleasedReducer from './reducers/moviesPerDecadeReleased';\nimport moviesPerRatingGivenReducer from './reducers/moviesPerRatingGiven';\nimport moviesPerYearWatchedReducer from './reducers/moviesPerYearWatched';\n\nconst reducer = combineReducers({\n\tmovieDiary: movieDiaryReducer,\n\tmovieInfo: movieInfoReducer,\n\tmovieRatings: movieRatingsReducer,\n\tmoviesPerDecadeReleased: moviesPerDecadeReleasedReducer,\n\tmoviesPerRatingGiven: moviesPerRatingGivenReducer,\n\tmoviesPerYearWatched: moviesPerYearWatchedReducer\n});\n\nexport default createStore(\n\treducer,\n\tcomposeWithDevTools(\n\t\tapplyMiddleware(thunk)\n\t)\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nconst router = (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>\n)\n\nReactDOM.render(router, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}